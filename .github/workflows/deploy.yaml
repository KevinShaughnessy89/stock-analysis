name: Deploy To Production
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    name: Build And Deploy
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: '18.19.0'
      DEPLOY_PATH: '/home/kevinshaughnessy89/app'
    steps:

      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Create .ENV File
        run: |
          touch .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "ALPHA_VANTAGE_KEY=${{ secrets.ALPHA_VANTAGE_KEY }}" >> .env
          echo "RSS_KEY=${{ secrets.RSS_KEY }}" >> .env

      - name: Build Application
        run: yarn build

      - name: Authentication
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Deploy To VM
        run: |
          # 1. First find out our OS Login username
          export OSLOGIN_USER=$(gcloud compute ssh ${{ secrets.VM_NAME }} --zone=${{ secrets.ZONE }} --command='whoami' | tr -d '\r')
          echo "OS Login user is: $OSLOGIN_USER"

          # 2. Create app directory if it doesn't exist
          gcloud compute ssh ${{ secrets.VM_NAME }} --zone=${{ secrets.ZONE }} --command="
            sudo mkdir -p /home/$OSLOGIN_USER/app && \
            sudo chown $OSLOGIN_USER:$OSLOGIN_USER /home/$OSLOGIN_USER/app
          "

          # 3. Copy the files using the correct path
          gcloud compute scp --recurse build/* ${{ secrets.VM_NAME }}:/home/$OSLOGIN_USER/app --zone=${{ secrets.ZONE }}

          # 4. Install dependencies and restart
          gcloud compute ssh ${{ secrets.VM_NAME }} --zone=${{ secrets.ZONE }} --command="
            cd /home/$OSLOGIN_USER/app && \
            yarn install --frozen-lockfile --production && \
            pm2 restart all
          "
