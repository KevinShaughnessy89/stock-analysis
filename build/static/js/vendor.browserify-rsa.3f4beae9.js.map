{"version":3,"file":"static/js/vendor.browserify-rsa.3f4beae9.js","mappings":"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","sources":["../node_modules/browserify-rsa/index.js","../node_modules/browserify-rsa/node_modules/bn.js/lib/bn.js"],"sourcesContent":["'use strict';\n\nvar BN = require('bn.js');\nvar randomBytes = require('randombytes');\nvar Buffer = require('safe-buffer').Buffer;\n\nfunction getr(priv) {\n\tvar len = priv.modulus.byteLength();\n\tvar r;\n\tdo {\n\t\tr = new BN(randomBytes(len));\n\t} while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2));\n\treturn r;\n}\n\nfunction blind(priv) {\n\tvar r = getr(priv);\n\tvar blinder = r.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed();\n\treturn { blinder: blinder, unblinder: r.invm(priv.modulus) };\n}\n\nfunction crt(msg, priv) {\n\tvar blinds = blind(priv);\n\tvar len = priv.modulus.byteLength();\n\tvar blinded = new BN(msg).mul(blinds.blinder).umod(priv.modulus);\n\tvar c1 = blinded.toRed(BN.mont(priv.prime1));\n\tvar c2 = blinded.toRed(BN.mont(priv.prime2));\n\tvar qinv = priv.coefficient;\n\tvar p = priv.prime1;\n\tvar q = priv.prime2;\n\tvar m1 = c1.redPow(priv.exponent1).fromRed();\n\tvar m2 = c2.redPow(priv.exponent2).fromRed();\n\tvar h = m1.isub(m2).imul(qinv).umod(p).imul(q);\n\treturn m2.iadd(h).imul(blinds.unblinder).umod(priv.modulus).toArrayLike(Buffer, 'be', len);\n}\ncrt.getr = getr;\n\nmodule.exports = crt;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"names":["BN","require","randomBytes","Buffer","getr","priv","r","len","modulus","byteLength","cmp","umod","prime1","prime2","crt","msg","blinds","blinder","toRed","mont","redPow","publicExponent","fromRed","unblinder","invm","blind","blinded","mul","c1","c2","qinv","coefficient","p","q","m1","exponent1","m2","exponent2","h","isub","imul","iadd","toArrayLike","module","exports","assert","val","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","number","base","endian","isBN","this","negative","words","length","red","_init","wordSize","window","e","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","parseBase","str","start","end","b","Math","min","i","move","dest","src","num","Array","isArray","max","left","right","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","ceil","j","w","off","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","_move","clone","_expand","size","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","smallMulTo","self","a","lo","k","ncarry","rword","maxJ","ArrayType","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","ctx","convertTo","_forceRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","u"],"sourceRoot":""}