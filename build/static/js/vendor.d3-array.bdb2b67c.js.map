{"version":3,"file":"static/js/vendor.d3-array.bdb2b67c.js","mappings":"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","sources":["../node_modules/d3-array/src/ascending.js","../node_modules/d3-array/src/bisect.js","../node_modules/d3-array/src/number.js","../node_modules/d3-array/src/descending.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/range.js","../node_modules/d3-array/src/ticks.js"],"sourcesContent":["export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n","import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n","export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","const e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction tickSpec(start, stop, count) {\n  const step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log10(step)),\n      error = step / Math.pow(10, power),\n      factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n  let i1, i2, inc;\n  if (power < 0) {\n    inc = Math.pow(10, -power) / factor;\n    i1 = Math.round(start * inc);\n    i2 = Math.round(stop * inc);\n    if (i1 / inc < start) ++i1;\n    if (i2 / inc > stop) --i2;\n    inc = -inc;\n  } else {\n    inc = Math.pow(10, power) * factor;\n    i1 = Math.round(start / inc);\n    i2 = Math.round(stop / inc);\n    if (i1 * inc < start) ++i1;\n    if (i2 * inc > stop) --i2;\n  }\n  if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\n  return [i1, i2, inc];\n}\n\nexport default function ticks(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  if (!(count > 0)) return [];\n  if (start === stop) return [start];\n  const reverse = stop < start, [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\n  if (!(i2 >= i1)) return [];\n  const n = i2 - i1 + 1, ticks = new Array(n);\n  if (reverse) {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) * inc;\n  } else {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) * inc;\n  }\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  return tickSpec(start, stop, count)[2];\n}\n\nexport function tickStep(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  const reverse = stop < start, inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}\n"],"names":["ascending","a","b","NaN","ascendingBisect","bisector","bisectRight","right","left","x","center","descending","f","compare1","compare2","delta","lo","arguments","length","undefined","hi","mid","d","zero","i","range","start","stop","step","n","Math","max","ceil","Array","e10","sqrt","e5","e2","tickSpec","count","power","floor","log10","error","pow","factor","i1","i2","inc","round","ticks","reverse","tickIncrement","tickStep"],"sourceRoot":""}