{"version":3,"file":"static/js/vendor.d3-delaunay.894e911a.js","mappings":"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","sources":["../node_modules/d3-delaunay/src/path.js","../node_modules/d3-delaunay/src/polygon.js","../node_modules/d3-delaunay/src/voronoi.js","../node_modules/d3-delaunay/src/delaunay.js"],"sourcesContent":["const epsilon = 1e-6;\n\nexport default class Path {\n  constructor() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n  }\n  moveTo(x, y) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  }\n  lineTo(x, y) {\n    this._ += `L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arc(x, y, r) {\n    x = +x, y = +y, r = +r;\n    const x0 = x + r;\n    const y0 = y;\n    if (r < 0) throw new Error(\"negative radius\");\n    if (this._x1 === null) this._ += `M${x0},${y0}`;\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\n    if (!r) return;\n    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\n  }\n  rect(x, y, w, h) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\n  }\n  value() {\n    return this._ || null;\n  }\n}\n","export default class Polygon {\n  constructor() {\n    this._ = [];\n  }\n  moveTo(x, y) {\n    this._.push([x, y]);\n  }\n  closePath() {\n    this._.push(this._[0].slice());\n  }\n  lineTo(x, y) {\n    this._.push([x, y]);\n  }\n  value() {\n    return this._.length ? this._ : null;\n  }\n}\n","import Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nexport default class Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n    let bx, by; // lazily computed barycenter of the hull\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (Math.abs(ab) < 1e-9) {\n        // For a degenerate triangle, the circumcenter is at the infinity, in a\n        // direction orthogonal to the halfedge and away from the “center” of\n        // the diagram <bx, by>, defined as the hull’s barycenter.\n        if (bx === undefined) {\n          bx = by = 0;\n          for (const i of hull) bx += points[i * 2], by += points[i * 2 + 1];\n          bx /= hull.length, by /= hull.length;\n        }\n        const a = 1e9 * Math.sign((bx - x1) * ey - (by - y1) * ex);\n        x = (x1 + x3) / 2 - a * ey;\n        y = (y1 + y3) / 2 + a * ex;\n      } else {\n        const d = 1 / ab;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] === cj[aj]\n              && ci[ai + 1] === cj[aj + 1]\n              && ci[(ai + 2) % li] === cj[(aj + lj - 2) % lj]\n              && ci[(ai + 3) % li] === cj[(aj + lj - 1) % lj]) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return this._simplify(V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points));\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1 = 0;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    // for more robustness, always consider the segment in the same order\n    const flip = c0 < c1;\n    if (flip) [x0, y0, x1, y1, c0, c1] = [x1, y1, x0, y0, c1, c0];\n    while (true) {\n      if (c0 === 0 && c1 === 0) return flip ? [x1, y1, x0, y0] : [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\n      // undefined, the conditional statement will be executed.\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n  _simplify(P) {\n    if (P && P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k] || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1]) {\n          P.splice(j, 2), i -= 2;\n        }\n      }\n      if (!P.length) P = null;\n    }\n    return P;\n  }\n}\n","import Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nexport default class Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) {\n        inedges[hull[1]] = 0;\n        this.triangles[1] = hull[1];\n        this.triangles[2] = hull[1];\n      }\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r) {\n    if (r === undefined && (!context || typeof context.moveTo !== \"function\")) r = context, context = null;\n    r = r == undefined ? 2 : +r;\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n"],"names":["epsilon","Path","constructor","this","_x0","_y0","_x1","_y1","_","moveTo","x","y","closePath","lineTo","arc","r","x0","y0","Error","Math","abs","rect","w","h","value","Polygon","push","slice","length","Voronoi","delaunay","xmin","ymin","xmax","ymax","arguments","undefined","_circumcenters","Float64Array","points","vectors","_init","update","hull","triangles","bx","by","circumcenters","subarray","i","j","n","t1","t2","t3","x1","y1","x2","y2","x3","y3","dx","dy","ex","ey","ab","a","sign","d","bl","cl","p0","p1","fill","render","context","buffer","halfedges","inedges","ti","floor","tj","xi","yi","xj","yj","_renderSegment","h0","h1","t","v","p","_project","renderBounds","renderCell","_clip","cellPolygons","cell","cellPolygon","index","polygon","S","c0","_regioncode","c1","_clipSegment","contains","_step","neighbors","ci","cj","loop","ai","li","aj","lj","_cell","e0","e","V","_simplify","_clipInfinite","_clipFinite","P","e1","sx0","sy0","sx1","sy1","_edgecode","_edge","flip","c","vx0","vy0","vxn","vyn","Array","from","unshift","splice","vx","vy","Infinity","k","tau","PI","pow","pointX","pointY","jitter","sin","cos","Delaunay","fx","fy","that","array","call","flatArray","flatIterable","_delaunator","Delaunator","Int32Array","_hullIndex","coords","b","collinear","sort","f","bounds","hypot","hullIndex","voronoi","l","indexOf","find","i0","dc","dt","renderHull","renderPoints","hullPolygon","renderTriangle","t0","trianglePolygons","trianglePolygon"],"sourceRoot":""}