{"version":3,"file":"static/js/vendor.d3-time.5e603965.js","mappings":"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","sources":["../node_modules/d3-time/src/day.js","../node_modules/d3-time/src/duration.js","../node_modules/d3-time/src/hour.js","../node_modules/d3-time/src/interval.js","../node_modules/d3-time/src/minute.js","../node_modules/d3-time/src/month.js","../node_modules/d3-time/src/second.js","../node_modules/d3-time/src/millisecond.js","../node_modules/d3-time/src/ticks.js","../node_modules/d3-time/src/week.js","../node_modules/d3-time/src/year.js"],"sourcesContent":["import {timeInterval} from \"./interval.js\";\nimport {durationDay, durationMinute} from \"./duration.js\";\n\nexport const timeDay = timeInterval(\n  date => date.setHours(0, 0, 0, 0),\n  (date, step) => date.setDate(date.getDate() + step),\n  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,\n  date => date.getDate() - 1\n);\n\nexport const timeDays = timeDay.range;\n\nexport const utcDay = timeInterval((date) => {\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCDate(date.getUTCDate() + step);\n}, (start, end) => {\n  return (end - start) / durationDay;\n}, (date) => {\n  return date.getUTCDate() - 1;\n});\n\nexport const utcDays = utcDay.range;\n\nexport const unixDay = timeInterval((date) => {\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCDate(date.getUTCDate() + step);\n}, (start, end) => {\n  return (end - start) / durationDay;\n}, (date) => {\n  return Math.floor(date / durationDay);\n});\n\nexport const unixDays = unixDay.range;\n","export const durationSecond = 1000;\nexport const durationMinute = durationSecond * 60;\nexport const durationHour = durationMinute * 60;\nexport const durationDay = durationHour * 24;\nexport const durationWeek = durationDay * 7;\nexport const durationMonth = durationDay * 30;\nexport const durationYear = durationDay * 365;\n","import {timeInterval} from \"./interval.js\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration.js\";\n\nexport const timeHour = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, (date, step) => {\n  date.setTime(+date + step * durationHour);\n}, (start, end) => {\n  return (end - start) / durationHour;\n}, (date) => {\n  return date.getHours();\n});\n\nexport const timeHours = timeHour.range;\n\nexport const utcHour = timeInterval((date) => {\n  date.setUTCMinutes(0, 0, 0);\n}, (date, step) => {\n  date.setTime(+date + step * durationHour);\n}, (start, end) => {\n  return (end - start) / durationHour;\n}, (date) => {\n  return date.getUTCHours();\n});\n\nexport const utcHours = utcHour.range;\n","const t0 = new Date, t1 = new Date;\n\nexport function timeInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = (date) => {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = (date) => {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = (date) => {\n    const d0 = interval(date), d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = (date, step) => {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = (start, stop, step) => {\n    const range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    let previous;\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = (test) => {\n    return timeInterval((date) => {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, (date, step) => {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = (start, end) => {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = (step) => {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? (d) => field(d) % step === 0\n              : (d) => interval.count(0, d) % step === 0);\n    };\n  }\n\n  return interval;\n}\n","import {timeInterval} from \"./interval.js\";\nimport {durationMinute, durationSecond} from \"./duration.js\";\n\nexport const timeMinute = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, (date, step) => {\n  date.setTime(+date + step * durationMinute);\n}, (start, end) => {\n  return (end - start) / durationMinute;\n}, (date) => {\n  return date.getMinutes();\n});\n\nexport const timeMinutes = timeMinute.range;\n\nexport const utcMinute = timeInterval((date) => {\n  date.setUTCSeconds(0, 0);\n}, (date, step) => {\n  date.setTime(+date + step * durationMinute);\n}, (start, end) => {\n  return (end - start) / durationMinute;\n}, (date) => {\n  return date.getUTCMinutes();\n});\n\nexport const utcMinutes = utcMinute.range;\n","import {timeInterval} from \"./interval.js\";\n\nexport const timeMonth = timeInterval((date) => {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setMonth(date.getMonth() + step);\n}, (start, end) => {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, (date) => {\n  return date.getMonth();\n});\n\nexport const timeMonths = timeMonth.range;\n\nexport const utcMonth = timeInterval((date) => {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, (start, end) => {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, (date) => {\n  return date.getUTCMonth();\n});\n\nexport const utcMonths = utcMonth.range;\n","import {timeInterval} from \"./interval.js\";\nimport {durationSecond} from \"./duration.js\";\n\nexport const second = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds());\n}, (date, step) => {\n  date.setTime(+date + step * durationSecond);\n}, (start, end) => {\n  return (end - start) / durationSecond;\n}, (date) => {\n  return date.getUTCSeconds();\n});\n\nexport const seconds = second.range;\n","import {timeInterval} from \"./interval.js\";\n\nexport const millisecond = timeInterval(() => {\n  // noop\n}, (date, step) => {\n  date.setTime(+date + step);\n}, (start, end) => {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = (k) => {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return timeInterval((date) => {\n    date.setTime(Math.floor(date / k) * k);\n  }, (date, step) => {\n    date.setTime(+date + step * k);\n  }, (start, end) => {\n    return (end - start) / k;\n  });\n};\n\nexport const milliseconds = millisecond.range;\n","import {bisector, tickStep} from \"d3-array\";\nimport {durationDay, durationHour, durationMinute, durationMonth, durationSecond, durationWeek, durationYear} from \"./duration.js\";\nimport {millisecond} from \"./millisecond.js\";\nimport {second} from \"./second.js\";\nimport {timeMinute, utcMinute} from \"./minute.js\";\nimport {timeHour, utcHour} from \"./hour.js\";\nimport {timeDay, unixDay} from \"./day.js\";\nimport {timeSunday, utcSunday} from \"./week.js\";\nimport {timeMonth, utcMonth} from \"./month.js\";\nimport {timeYear, utcYear} from \"./year.js\";\n\nfunction ticker(year, month, week, day, hour, minute) {\n\n  const tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function ticks(start, stop, count) {\n    const reverse = stop < start;\n    if (reverse) [start, stop] = [stop, start];\n    const interval = count && typeof count.range === \"function\" ? count : tickInterval(start, stop, count);\n    const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop\n    return reverse ? ticks.reverse() : ticks;\n  }\n\n  function tickInterval(start, stop, count) {\n    const target = Math.abs(stop - start) / count;\n    const i = bisector(([,, step]) => step).right(tickIntervals, target);\n    if (i === tickIntervals.length) return year.every(tickStep(start / durationYear, stop / durationYear, count));\n    if (i === 0) return millisecond.every(Math.max(tickStep(start, stop, count), 1));\n    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n    return t.every(step);\n  }\n\n  return [ticks, tickInterval];\n}\n\nconst [utcTicks, utcTickInterval] = ticker(utcYear, utcMonth, utcSunday, unixDay, utcHour, utcMinute);\nconst [timeTicks, timeTickInterval] = ticker(timeYear, timeMonth, timeSunday, timeDay, timeHour, timeMinute);\n\nexport {utcTicks, utcTickInterval, timeTicks, timeTickInterval};\n","import {timeInterval} from \"./interval.js\";\nimport {durationMinute, durationWeek} from \"./duration.js\";\n\nfunction timeWeekday(i) {\n  return timeInterval((date) => {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setDate(date.getDate() + step * 7);\n  }, (start, end) => {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport const timeSunday = timeWeekday(0);\nexport const timeMonday = timeWeekday(1);\nexport const timeTuesday = timeWeekday(2);\nexport const timeWednesday = timeWeekday(3);\nexport const timeThursday = timeWeekday(4);\nexport const timeFriday = timeWeekday(5);\nexport const timeSaturday = timeWeekday(6);\n\nexport const timeSundays = timeSunday.range;\nexport const timeMondays = timeMonday.range;\nexport const timeTuesdays = timeTuesday.range;\nexport const timeWednesdays = timeWednesday.range;\nexport const timeThursdays = timeThursday.range;\nexport const timeFridays = timeFriday.range;\nexport const timeSaturdays = timeSaturday.range;\n\nfunction utcWeekday(i) {\n  return timeInterval((date) => {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, (start, end) => {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport const utcSunday = utcWeekday(0);\nexport const utcMonday = utcWeekday(1);\nexport const utcTuesday = utcWeekday(2);\nexport const utcWednesday = utcWeekday(3);\nexport const utcThursday = utcWeekday(4);\nexport const utcFriday = utcWeekday(5);\nexport const utcSaturday = utcWeekday(6);\n\nexport const utcSundays = utcSunday.range;\nexport const utcMondays = utcMonday.range;\nexport const utcTuesdays = utcTuesday.range;\nexport const utcWednesdays = utcWednesday.range;\nexport const utcThursdays = utcThursday.range;\nexport const utcFridays = utcFriday.range;\nexport const utcSaturdays = utcSaturday.range;\n","import {timeInterval} from \"./interval.js\";\n\nexport const timeYear = timeInterval((date) => {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setFullYear(date.getFullYear() + step);\n}, (start, end) => {\n  return end.getFullYear() - start.getFullYear();\n}, (date) => {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\ntimeYear.every = (k) => {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : timeInterval((date) => {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport const timeYears = timeYear.range;\n\nexport const utcYear = timeInterval((date) => {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, (start, end) => {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, (date) => {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = (k) => {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : timeInterval((date) => {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, (date, step) => {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport const utcYears = utcYear.range;\n"],"names":["timeDay","timeInterval","date","setHours","step","setDate","getDate","start","end","getTimezoneOffset","durationMinute","durationDay","utcDay","range","setUTCHours","setUTCDate","getUTCDate","unixDay","Math","floor","durationSecond","durationHour","durationWeek","durationMonth","durationYear","timeHour","setTime","getMilliseconds","getSeconds","getMinutes","getHours","utcHour","setUTCMinutes","getUTCHours","t0","Date","t1","floori","offseti","count","field","interval","arguments","length","ceil","round","d0","d1","offset","stop","previous","push","filter","test","every","isFinite","d","timeMinute","utcMinute","setUTCSeconds","getUTCMinutes","timeMonth","setMonth","getMonth","getFullYear","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","second","getUTCSeconds","millisecond","k","ticker","year","month","week","day","hour","minute","tickIntervals","tickInterval","target","abs","i","bisector","_ref","right","tickStep","max","t","reverse","ticks","utcTicks","utcTickInterval","utcYear","utcSunday","timeTicks","timeTickInterval","timeYear","timeSunday","timeWeekday","getDay","timeMonday","timeTuesday","timeWednesday","timeThursday","timeFriday","timeSaturday","utcWeekday","getUTCDay","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","setFullYear","setUTCFullYear"],"sourceRoot":""}