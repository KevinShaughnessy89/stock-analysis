{"version":3,"file":"static/js/vendor.miller-rabin.74da0158.js","mappings":"8FAAA,IAAIA,EAAKC,EAAQ,OACbC,EAAUD,EAAQ,OAEtB,SAASE,EAAYC,GACnBC,KAAKD,KAAOA,GAAQ,IAAIF,EAAQI,IAClC,CACAC,EAAOC,QAAUL,EAEjBA,EAAYM,OAAS,SAAgBL,GACnC,OAAO,IAAID,EAAYC,EACzB,EAEAD,EAAYO,UAAUC,WAAa,SAAoBC,GACrD,IAAIC,EAAMD,EAAEE,YACRC,EAAYC,KAAKC,KAAKJ,EAAM,GAIhC,GACE,IAAIK,EAAI,IAAIlB,EAAGK,KAAKD,KAAKe,SAASJ,UAC7BG,EAAEE,IAAIR,IAAM,GAEnB,OAAOM,CACT,EAEAf,EAAYO,UAAUW,WAAa,SAAoBC,EAAOC,GAE5D,IAAIC,EAAOD,EAAKE,IAAIH,GACpB,OAAOA,EAAMI,IAAIrB,KAAKM,WAAWa,GACnC,EAEArB,EAAYO,UAAUiB,KAAO,SAAcf,EAAGgB,EAAGC,GAC/C,IAAIhB,EAAMD,EAAEE,YACRgB,EAAM9B,EAAG+B,KAAKnB,GACdoB,EAAO,IAAIhC,EAAG,GAAGiC,MAAMH,GAEtBF,IACHA,EAAIZ,KAAKkB,IAAI,EAAIrB,EAAM,GAAM,IAI/B,IADA,IAAIsB,EAAKvB,EAAEwB,KAAK,GACPC,EAAI,GAAIF,EAAGG,MAAMD,GAAIA,KAM9B,IALA,IAAIE,EAAI3B,EAAE4B,KAAKH,GAEXI,EAAMN,EAAGF,MAAMH,GAGZF,EAAI,EAAGA,IAAK,CACjB,IAAIV,EAAIb,KAAKgB,WAAW,IAAIrB,EAAG,GAAImC,GAC/BN,GACFA,EAAGX,GAEL,IAAIwB,EAAIxB,EAAEe,MAAMH,GAAKa,OAAOJ,GAC5B,GAAoB,IAAhBG,EAAEtB,IAAIY,IAA8B,IAAfU,EAAEtB,IAAIqB,GAA/B,CAGA,IAAK,IAAIG,EAAI,EAAGA,EAAIP,EAAGO,IAAK,CAG1B,GAAoB,KAFpBF,EAAIA,EAAEG,UAEAzB,IAAIY,GACR,OAAO,EACT,GAAmB,IAAfU,EAAEtB,IAAIqB,GACR,KACJ,CAEA,GAAIG,IAAMP,EACR,OAAO,CAZC,CAaZ,CAEA,OAvBY,CAwBd,EAEAlC,EAAYO,UAAUoC,WAAa,SAAoBlC,EAAGgB,GACxD,IAAIf,EAAMD,EAAEE,YACRgB,EAAM9B,EAAG+B,KAAKnB,GACdoB,EAAO,IAAIhC,EAAG,GAAGiC,MAAMH,GAEtBF,IACHA,EAAIZ,KAAKkB,IAAI,EAAIrB,EAAM,GAAM,IAI/B,IADA,IAAIsB,EAAKvB,EAAEwB,KAAK,GACPC,EAAI,GAAIF,EAAGG,MAAMD,GAAIA,KAK9B,IAJA,IAAIE,EAAI3B,EAAE4B,KAAKH,GAEXI,EAAMN,EAAGF,MAAMH,GAEZF,EAAI,EAAGA,IAAK,CACjB,IAAIV,EAAIb,KAAKgB,WAAW,IAAIrB,EAAG,GAAImC,GAE/BY,EAAInC,EAAEoC,IAAI9B,GACd,GAAkB,IAAd6B,EAAEE,KAAK,GACT,OAAOF,EAET,IAAIL,EAAIxB,EAAEe,MAAMH,GAAKa,OAAOJ,GAC5B,GAAoB,IAAhBG,EAAEtB,IAAIY,IAA8B,IAAfU,EAAEtB,IAAIqB,GAA/B,CAGA,IAAK,IAAIG,EAAI,EAAGA,EAAIP,EAAGO,IAAK,CAG1B,GAAoB,KAFpBF,EAAIA,EAAEG,UAEAzB,IAAIY,GACR,OAAOU,EAAEQ,UAAUd,KAAK,GAAGY,IAAIpC,GACjC,GAAmB,IAAf8B,EAAEtB,IAAIqB,GACR,KACJ,CAEA,GAAIG,IAAMP,EAER,OADAK,EAAIA,EAAEG,UACGK,UAAUd,KAAK,GAAGY,IAAIpC,EAbvB,CAeZ,CAEA,OAAO,CACT,C","sources":["../node_modules/miller-rabin/lib/mr.js"],"sourcesContent":["var bn = require('bn.js');\nvar brorand = require('brorand');\n\nfunction MillerRabin(rand) {\n  this.rand = rand || new brorand.Rand();\n}\nmodule.exports = MillerRabin;\n\nMillerRabin.create = function create(rand) {\n  return new MillerRabin(rand);\n};\n\nMillerRabin.prototype._randbelow = function _randbelow(n) {\n  var len = n.bitLength();\n  var min_bytes = Math.ceil(len / 8);\n\n  // Generage random bytes until a number less than n is found.\n  // This ensures that 0..n-1 have an equal probability of being selected.\n  do\n    var a = new bn(this.rand.generate(min_bytes));\n  while (a.cmp(n) >= 0);\n\n  return a;\n};\n\nMillerRabin.prototype._randrange = function _randrange(start, stop) {\n  // Generate a random number greater than or equal to start and less than stop.\n  var size = stop.sub(start);\n  return start.add(this._randbelow(size));\n};\n\nMillerRabin.prototype.test = function test(n, k, cb) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  var prime = true;\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n    if (cb)\n      cb(a);\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return false;\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s)\n      return false;\n  }\n\n  return prime;\n};\n\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n\n    var g = n.gcd(a);\n    if (g.cmpn(1) !== 0)\n      return g;\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return x.fromRed().subn(1).gcd(n);\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s) {\n      x = x.redSqr();\n      return x.fromRed().subn(1).gcd(n);\n    }\n  }\n\n  return false;\n};\n"],"names":["bn","require","brorand","MillerRabin","rand","this","Rand","module","exports","create","prototype","_randbelow","n","len","bitLength","min_bytes","Math","ceil","a","generate","cmp","_randrange","start","stop","size","sub","add","test","k","cb","red","mont","rone","toRed","max","n1","subn","s","testn","d","shrn","rn1","x","redPow","i","redSqr","getDivisor","g","gcd","cmpn","fromRed"],"sourceRoot":""}