{"version":3,"file":"static/js/vendor.minimalistic-crypto-utils.06232d2c.js","mappings":"yGAEA,IAAIA,EAAQC,EAkCZ,SAASC,EAAMC,GACb,OAAoB,IAAhBA,EAAKC,OACA,IAAMD,EAENA,CACX,CAGA,SAASE,EAAMC,GAEb,IADA,IAAIC,EAAM,GACDC,EAAI,EAAGA,EAAIF,EAAIF,OAAQI,IAC9BD,GAAOL,EAAMI,EAAIE,GAAGC,SAAS,KAC/B,OAAOF,CACT,CAfAP,EAAMU,QA9BN,SAAiBJ,EAAKK,GACpB,GAAIC,MAAMC,QAAQP,GAChB,OAAOA,EAAIQ,QACb,IAAKR,EACH,MAAO,GACT,IAAIC,EAAM,GACV,GAAmB,kBAARD,EAAkB,CAC3B,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAIF,OAAQI,IAC9BD,EAAIC,GAAc,EAATF,EAAIE,GACf,OAAOD,CACT,CACA,GAAY,QAARI,EAAe,EACjBL,EAAMA,EAAIS,QAAQ,eAAgB,KAC1BX,OAAS,IAAM,IACrBE,EAAM,IAAMA,GACd,IAASE,EAAI,EAAGA,EAAIF,EAAIF,OAAQI,GAAK,EACnCD,EAAIS,KAAKC,SAASX,EAAIE,GAAKF,EAAIE,EAAI,GAAI,IAC3C,MACE,IAASA,EAAI,EAAGA,EAAIF,EAAIF,OAAQI,IAAK,CACnC,IAAIU,EAAIZ,EAAIa,WAAWX,GACnBY,EAAKF,GAAK,EACVG,EAAS,IAAJH,EACLE,EACFb,EAAIS,KAAKI,EAAIC,GAEbd,EAAIS,KAAKK,EACb,CAEF,OAAOd,CACT,EASAP,EAAME,MAAQA,EAQdF,EAAMK,MAAQA,EAEdL,EAAMsB,OAAS,SAAgBC,EAAKZ,GAClC,MAAY,QAARA,EACKN,EAAMkB,GAENA,CACX,C","sources":["../node_modules/minimalistic-crypto-utils/lib/utils.js"],"sourcesContent":["'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n"],"names":["utils","exports","zero2","word","length","toHex","msg","res","i","toString","toArray","enc","Array","isArray","slice","replace","push","parseInt","c","charCodeAt","hi","lo","encode","arr"],"sourceRoot":""}