{"version":3,"file":"static/js/vendor.parse-asn1.e1c2da95.js","mappings":"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","sources":["../node_modules/parse-asn1/asn1.js","../node_modules/parse-asn1/certificate.js","../node_modules/parse-asn1/fixProc.js","../node_modules/parse-asn1/index.js"],"sourcesContent":["// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js\n// Fedor, you are amazing.\n\n'use strict';\n\nvar asn1 = require('asn1.js');\n\nexports.certificate = require('./certificate');\n\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\n\tthis.seq().obj(\n\t\tthis.key('version')['int'](),\n\t\tthis.key('modulus')['int'](),\n\t\tthis.key('publicExponent')['int'](),\n\t\tthis.key('privateExponent')['int'](),\n\t\tthis.key('prime1')['int'](),\n\t\tthis.key('prime2')['int'](),\n\t\tthis.key('exponent1')['int'](),\n\t\tthis.key('exponent2')['int'](),\n\t\tthis.key('coefficient')['int']()\n\t);\n});\nexports.RSAPrivateKey = RSAPrivateKey;\n\nvar RSAPublicKey = asn1.define('RSAPublicKey', function () {\n\tthis.seq().obj(\n\t\tthis.key('modulus')['int'](),\n\t\tthis.key('publicExponent')['int']()\n\t);\n});\nexports.RSAPublicKey = RSAPublicKey;\n\nvar AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').objid(),\n\t\tthis.key('none').null_().optional(),\n\t\tthis.key('curve').objid().optional(),\n\t\tthis.key('params').seq().obj(\n\t\t\tthis.key('p')['int'](),\n\t\t\tthis.key('q')['int'](),\n\t\t\tthis.key('g')['int']()\n\t\t).optional()\n\t);\n});\n\nvar PublicKey = asn1.define('SubjectPublicKeyInfo', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').use(AlgorithmIdentifier),\n\t\tthis.key('subjectPublicKey').bitstr()\n\t);\n});\nexports.PublicKey = PublicKey;\n\nvar PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {\n\tthis.seq().obj(\n\t\tthis.key('version')['int'](),\n\t\tthis.key('algorithm').use(AlgorithmIdentifier),\n\t\tthis.key('subjectPrivateKey').octstr()\n\t);\n});\nexports.PrivateKey = PrivateKeyInfo;\nvar EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').seq().obj(\n\t\t\tthis.key('id').objid(),\n\t\t\tthis.key('decrypt').seq().obj(\n\t\t\t\tthis.key('kde').seq().obj(\n\t\t\t\t\tthis.key('id').objid(),\n\t\t\t\t\tthis.key('kdeparams').seq().obj(\n\t\t\t\t\t\tthis.key('salt').octstr(),\n\t\t\t\t\t\tthis.key('iters')['int']()\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tthis.key('cipher').seq().obj(\n\t\t\t\t\tthis.key('algo').objid(),\n\t\t\t\t\tthis.key('iv').octstr()\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\tthis.key('subjectPrivateKey').octstr()\n\t);\n});\n\nexports.EncryptedPrivateKey = EncryptedPrivateKeyInfo;\n\nvar DSAPrivateKey = asn1.define('DSAPrivateKey', function () {\n\tthis.seq().obj(\n\t\tthis.key('version')['int'](),\n\t\tthis.key('p')['int'](),\n\t\tthis.key('q')['int'](),\n\t\tthis.key('g')['int'](),\n\t\tthis.key('pub_key')['int'](),\n\t\tthis.key('priv_key')['int']()\n\t);\n});\nexports.DSAPrivateKey = DSAPrivateKey;\n\nexports.DSAparam = asn1.define('DSAparam', function () {\n\tthis['int']();\n});\n\nvar ECParameters = asn1.define('ECParameters', function () {\n\tthis.choice({\n\t\tnamedCurve: this.objid()\n\t});\n});\n\nvar ECPrivateKey = asn1.define('ECPrivateKey', function () {\n\tthis.seq().obj(\n\t\tthis.key('version')['int'](),\n\t\tthis.key('privateKey').octstr(),\n\t\tthis.key('parameters').optional().explicit(0).use(ECParameters),\n\t\tthis.key('publicKey').optional().explicit(1).bitstr()\n\t);\n});\nexports.ECPrivateKey = ECPrivateKey;\n\nexports.signature = asn1.define('signature', function () {\n\tthis.seq().obj(\n\t\tthis.key('r')['int'](),\n\t\tthis.key('s')['int']()\n\t);\n});\n","// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js\n// thanks to @Rantanen\n\n'use strict';\n\nvar asn = require('asn1.js');\n\nvar Time = asn.define('Time', function () {\n\tthis.choice({\n\t\tutcTime: this.utctime(),\n\t\tgeneralTime: this.gentime()\n\t});\n});\n\nvar AttributeTypeValue = asn.define('AttributeTypeValue', function () {\n\tthis.seq().obj(\n\t\tthis.key('type').objid(),\n\t\tthis.key('value').any()\n\t);\n});\n\nvar AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').objid(),\n\t\tthis.key('parameters').optional(),\n\t\tthis.key('curve').objid().optional()\n\t);\n});\n\nvar SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {\n\tthis.seq().obj(\n\t\tthis.key('algorithm').use(AlgorithmIdentifier),\n\t\tthis.key('subjectPublicKey').bitstr()\n\t);\n});\n\nvar RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {\n\tthis.setof(AttributeTypeValue);\n});\n\nvar RDNSequence = asn.define('RDNSequence', function () {\n\tthis.seqof(RelativeDistinguishedName);\n});\n\nvar Name = asn.define('Name', function () {\n\tthis.choice({\n\t\trdnSequence: this.use(RDNSequence)\n\t});\n});\n\nvar Validity = asn.define('Validity', function () {\n\tthis.seq().obj(\n\t\tthis.key('notBefore').use(Time),\n\t\tthis.key('notAfter').use(Time)\n\t);\n});\n\nvar Extension = asn.define('Extension', function () {\n\tthis.seq().obj(\n\t\tthis.key('extnID').objid(),\n\t\tthis.key('critical').bool().def(false),\n\t\tthis.key('extnValue').octstr()\n\t);\n});\n\nvar TBSCertificate = asn.define('TBSCertificate', function () {\n\tthis.seq().obj(\n\t\tthis.key('version').explicit(0)['int']().optional(),\n\t\tthis.key('serialNumber')['int'](),\n\t\tthis.key('signature').use(AlgorithmIdentifier),\n\t\tthis.key('issuer').use(Name),\n\t\tthis.key('validity').use(Validity),\n\t\tthis.key('subject').use(Name),\n\t\tthis.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),\n\t\tthis.key('issuerUniqueID').implicit(1).bitstr().optional(),\n\t\tthis.key('subjectUniqueID').implicit(2).bitstr().optional(),\n\t\tthis.key('extensions').explicit(3).seqof(Extension).optional()\n\t);\n});\n\nvar X509Certificate = asn.define('X509Certificate', function () {\n\tthis.seq().obj(\n\t\tthis.key('tbsCertificate').use(TBSCertificate),\n\t\tthis.key('signatureAlgorithm').use(AlgorithmIdentifier),\n\t\tthis.key('signatureValue').bitstr()\n\t);\n});\n\nmodule.exports = X509Certificate;\n","'use strict';\n\n// adapted from https://github.com/apatil/pemstrip\nvar findProc = /Proc-Type: 4,ENCRYPTED[\\n\\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\\n\\r]+([0-9A-z\\n\\r+/=]+)[\\n\\r]+/m;\nvar startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m;\nvar fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\\n\\r+/=]+)-----END \\1-----$/m;\nvar evp = require('evp_bytestokey');\nvar ciphers = require('browserify-aes');\nvar Buffer = require('safe-buffer').Buffer;\nmodule.exports = function (okey, password) {\n\tvar key = okey.toString();\n\tvar match = key.match(findProc);\n\tvar decrypted;\n\tif (!match) {\n\t\tvar match2 = key.match(fullRegex);\n\t\tdecrypted = Buffer.from(match2[2].replace(/[\\r\\n]/g, ''), 'base64');\n\t} else {\n\t\tvar suite = 'aes' + match[1];\n\t\tvar iv = Buffer.from(match[2], 'hex');\n\t\tvar cipherText = Buffer.from(match[3].replace(/[\\r\\n]/g, ''), 'base64');\n\t\tvar cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key;\n\t\tvar out = [];\n\t\tvar cipher = ciphers.createDecipheriv(suite, cipherKey, iv);\n\t\tout.push(cipher.update(cipherText));\n\t\tout.push(cipher['final']());\n\t\tdecrypted = Buffer.concat(out);\n\t}\n\tvar tag = key.match(startRegex)[1];\n\treturn {\n\t\ttag: tag,\n\t\tdata: decrypted\n\t};\n};\n","'use strict';\n\nvar asn1 = require('./asn1');\nvar aesid = require('./aesid.json');\nvar fixProc = require('./fixProc');\nvar ciphers = require('browserify-aes');\nvar compat = require('pbkdf2');\nvar Buffer = require('safe-buffer').Buffer;\n\nfunction decrypt(data, password) {\n\tvar salt = data.algorithm.decrypt.kde.kdeparams.salt;\n\tvar iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10);\n\tvar algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')];\n\tvar iv = data.algorithm.decrypt.cipher.iv;\n\tvar cipherText = data.subjectPrivateKey;\n\tvar keylen = parseInt(algo.split('-')[1], 10) / 8;\n\tvar key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1');\n\tvar cipher = ciphers.createDecipheriv(algo, key, iv);\n\tvar out = [];\n\tout.push(cipher.update(cipherText));\n\tout.push(cipher['final']());\n\treturn Buffer.concat(out);\n}\n\nfunction parseKeys(buffer) {\n\tvar password;\n\tif (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n\t\tpassword = buffer.passphrase;\n\t\tbuffer = buffer.key;\n\t}\n\tif (typeof buffer === 'string') {\n\t\tbuffer = Buffer.from(buffer);\n\t}\n\n\tvar stripped = fixProc(buffer, password);\n\n\tvar type = stripped.tag;\n\tvar data = stripped.data;\n\tvar subtype, ndata;\n\tswitch (type) {\n\t\tcase 'CERTIFICATE':\n\t\t\tndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo;\n\t\t\t// falls through\n\t\tcase 'PUBLIC KEY':\n\t\t\tif (!ndata) {\n\t\t\t\tndata = asn1.PublicKey.decode(data, 'der');\n\t\t\t}\n\t\t\tsubtype = ndata.algorithm.algorithm.join('.');\n\t\t\tswitch (subtype) {\n\t\t\t\tcase '1.2.840.113549.1.1.1':\n\t\t\t\t\treturn asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der');\n\t\t\t\tcase '1.2.840.10045.2.1':\n\t\t\t\t\tndata.subjectPrivateKey = ndata.subjectPublicKey;\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'ec',\n\t\t\t\t\t\tdata: ndata\n\t\t\t\t\t};\n\t\t\t\tcase '1.2.840.10040.4.1':\n\t\t\t\t\tndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der');\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'dsa',\n\t\t\t\t\t\tdata: ndata.algorithm.params\n\t\t\t\t\t};\n\t\t\t\tdefault: throw new Error('unknown key id ' + subtype);\n\t\t\t}\n\t\t\t// throw new Error('unknown key type ' + type)\n\t\tcase 'ENCRYPTED PRIVATE KEY':\n\t\t\tdata = asn1.EncryptedPrivateKey.decode(data, 'der');\n\t\t\tdata = decrypt(data, password);\n\t\t\t// falls through\n\t\tcase 'PRIVATE KEY':\n\t\t\tndata = asn1.PrivateKey.decode(data, 'der');\n\t\t\tsubtype = ndata.algorithm.algorithm.join('.');\n\t\t\tswitch (subtype) {\n\t\t\t\tcase '1.2.840.113549.1.1.1':\n\t\t\t\t\treturn asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der');\n\t\t\t\tcase '1.2.840.10045.2.1':\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcurve: ndata.algorithm.curve,\n\t\t\t\t\t\tprivateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n\t\t\t\t\t};\n\t\t\t\tcase '1.2.840.10040.4.1':\n\t\t\t\t\tndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der');\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'dsa',\n\t\t\t\t\t\tparams: ndata.algorithm.params\n\t\t\t\t\t};\n\t\t\t\tdefault: throw new Error('unknown key id ' + subtype);\n\t\t\t}\n\t\t\t// throw new Error('unknown key type ' + type)\n\t\tcase 'RSA PUBLIC KEY':\n\t\t\treturn asn1.RSAPublicKey.decode(data, 'der');\n\t\tcase 'RSA PRIVATE KEY':\n\t\t\treturn asn1.RSAPrivateKey.decode(data, 'der');\n\t\tcase 'DSA PRIVATE KEY':\n\t\t\treturn {\n\t\t\t\ttype: 'dsa',\n\t\t\t\tparams: asn1.DSAPrivateKey.decode(data, 'der')\n\t\t\t};\n\t\tcase 'EC PRIVATE KEY':\n\t\t\tdata = asn1.ECPrivateKey.decode(data, 'der');\n\t\t\treturn {\n\t\t\t\tcurve: data.parameters.value,\n\t\t\t\tprivateKey: data.privateKey\n\t\t\t};\n\t\tdefault: throw new Error('unknown key type ' + type);\n\t}\n}\nparseKeys.signature = asn1.signature;\n\nmodule.exports = parseKeys;\n"],"names":["asn1","require","exports","certificate","RSAPrivateKey","define","this","seq","obj","key","RSAPublicKey","AlgorithmIdentifier","objid","null_","optional","PublicKey","use","bitstr","PrivateKeyInfo","octstr","PrivateKey","EncryptedPrivateKeyInfo","EncryptedPrivateKey","DSAPrivateKey","DSAparam","ECParameters","choice","namedCurve","ECPrivateKey","explicit","signature","asn","Time","utcTime","utctime","generalTime","gentime","AttributeTypeValue","any","SubjectPublicKeyInfo","RelativeDistinguishedName","setof","RDNSequence","seqof","Name","rdnSequence","Validity","Extension","bool","def","TBSCertificate","implicit","X509Certificate","module","findProc","startRegex","fullRegex","evp","ciphers","Buffer","okey","password","decrypted","toString","match","suite","iv","from","cipherText","replace","cipherKey","slice","parseInt","out","cipher","createDecipheriv","push","update","concat","match2","tag","data","aesid","fixProc","compat","parseKeys","buffer","isBuffer","passphrase","subtype","ndata","stripped","type","decode","tbsCertificate","subjectPublicKeyInfo","algorithm","join","subjectPublicKey","subjectPrivateKey","params","pub_key","Error","salt","decrypt","kde","kdeparams","iters","algo","keylen","split","pbkdf2Sync","curve","privateKey","priv_key","parameters","value"],"sourceRoot":""}