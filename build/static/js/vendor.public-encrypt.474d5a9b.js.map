{"version":3,"file":"static/js/vendor.public-encrypt.474d5a9b.js","mappings":"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","sources":["../node_modules/public-encrypt/browser.js","../node_modules/public-encrypt/mgf.js","../node_modules/public-encrypt/privateDecrypt.js","../node_modules/public-encrypt/publicEncrypt.js","../node_modules/public-encrypt/withPublic.js","../node_modules/public-encrypt/xor.js"],"sourcesContent":["exports.publicEncrypt = require('./publicEncrypt')\nexports.privateDecrypt = require('./privateDecrypt')\n\nexports.privateEncrypt = function privateEncrypt (key, buf) {\n  return exports.publicEncrypt(key, buf, true)\n}\n\nexports.publicDecrypt = function publicDecrypt (key, buf) {\n  return exports.privateDecrypt(key, buf, true)\n}\n","var createHash = require('create-hash')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (seed, len) {\n  var t = Buffer.alloc(0)\n  var i = 0\n  var c\n  while (t.length < len) {\n    c = i2ops(i++)\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])\n  }\n  return t.slice(0, len)\n}\n\nfunction i2ops (c) {\n  var out = Buffer.allocUnsafe(4)\n  out.writeUInt32BE(c, 0)\n  return out\n}\n","var parseKeys = require('parse-asn1')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar crt = require('browserify-rsa')\nvar createHash = require('create-hash')\nvar withPublic = require('./withPublic')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function privateDecrypt (privateKey, enc, reverse) {\n  var padding\n  if (privateKey.padding) {\n    padding = privateKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n\n  var key = parseKeys(privateKey)\n  var k = key.modulus.byteLength()\n  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {\n    throw new Error('decryption error')\n  }\n  var msg\n  if (reverse) {\n    msg = withPublic(new BN(enc), key)\n  } else {\n    msg = crt(enc, key)\n  }\n  var zBuffer = Buffer.alloc(k - msg.length)\n  msg = Buffer.concat([zBuffer, msg], k)\n  if (padding === 4) {\n    return oaep(key, msg)\n  } else if (padding === 1) {\n    return pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    return msg\n  } else {\n    throw new Error('unknown padding')\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  if (msg[0] !== 0) {\n    throw new Error('decryption error')\n  }\n  var maskedSeed = msg.slice(1, hLen + 1)\n  var maskedDb = msg.slice(hLen + 1)\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen))\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1))\n  if (compare(iHash, db.slice(0, hLen))) {\n    throw new Error('decryption error')\n  }\n  var i = hLen\n  while (db[i] === 0) {\n    i++\n  }\n  if (db[i++] !== 1) {\n    throw new Error('decryption error')\n  }\n  return db.slice(i)\n}\n\nfunction pkcs1 (key, msg, reverse) {\n  var p1 = msg.slice(0, 2)\n  var i = 2\n  var status = 0\n  while (msg[i++] !== 0) {\n    if (i >= msg.length) {\n      status++\n      break\n    }\n  }\n  var ps = msg.slice(2, i - 1)\n\n  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {\n    status++\n  }\n  if (ps.length < 8) {\n    status++\n  }\n  if (status) {\n    throw new Error('decryption error')\n  }\n  return msg.slice(i)\n}\nfunction compare (a, b) {\n  a = Buffer.from(a)\n  b = Buffer.from(b)\n  var dif = 0\n  var len = a.length\n  if (a.length !== b.length) {\n    dif++\n    len = Math.min(a.length, b.length)\n  }\n  var i = -1\n  while (++i < len) {\n    dif += (a[i] ^ b[i])\n  }\n  return dif\n}\n","var parseKeys = require('parse-asn1')\nvar randomBytes = require('randombytes')\nvar createHash = require('create-hash')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar withPublic = require('./withPublic')\nvar crt = require('browserify-rsa')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function publicEncrypt (publicKey, msg, reverse) {\n  var padding\n  if (publicKey.padding) {\n    padding = publicKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n  var key = parseKeys(publicKey)\n  var paddedMsg\n  if (padding === 4) {\n    paddedMsg = oaep(key, msg)\n  } else if (padding === 1) {\n    paddedMsg = pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    paddedMsg = new BN(msg)\n    if (paddedMsg.cmp(key.modulus) >= 0) {\n      throw new Error('data too long for modulus')\n    }\n  } else {\n    throw new Error('unknown padding')\n  }\n  if (reverse) {\n    return crt(paddedMsg, key)\n  } else {\n    return withPublic(paddedMsg, key)\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var mLen = msg.length\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  var hLen2 = 2 * hLen\n  if (mLen > k - hLen2 - 2) {\n    throw new Error('message too long')\n  }\n  var ps = Buffer.alloc(k - mLen - hLen2 - 2)\n  var dblen = k - hLen - 1\n  var seed = randomBytes(hLen)\n  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))\n  var maskedSeed = xor(seed, mgf(maskedDb, hLen))\n  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))\n}\nfunction pkcs1 (key, msg, reverse) {\n  var mLen = msg.length\n  var k = key.modulus.byteLength()\n  if (mLen > k - 11) {\n    throw new Error('message too long')\n  }\n  var ps\n  if (reverse) {\n    ps = Buffer.alloc(k - mLen - 3, 0xff)\n  } else {\n    ps = nonZero(k - mLen - 3)\n  }\n  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))\n}\nfunction nonZero (len) {\n  var out = Buffer.allocUnsafe(len)\n  var i = 0\n  var cache = randomBytes(len * 2)\n  var cur = 0\n  var num\n  while (i < len) {\n    if (cur === cache.length) {\n      cache = randomBytes(len * 2)\n      cur = 0\n    }\n    num = cache[cur++]\n    if (num) {\n      out[i++] = num\n    }\n  }\n  return out\n}\n","var BN = require('bn.js')\nvar Buffer = require('safe-buffer').Buffer\n\nfunction withPublic (paddedMsg, key) {\n  return Buffer.from(paddedMsg\n    .toRed(BN.mont(key.modulus))\n    .redPow(new BN(key.publicExponent))\n    .fromRed()\n    .toArray())\n}\n\nmodule.exports = withPublic\n","module.exports = function xor (a, b) {\n  var len = a.length\n  var i = -1\n  while (++i < len) {\n    a[i] ^= b[i]\n  }\n  return a\n}\n"],"names":["exports","publicEncrypt","privateDecrypt","privateEncrypt","key","buf","publicDecrypt","createHash","require","Buffer","i2ops","c","out","allocUnsafe","writeUInt32BE","module","seed","len","t","alloc","i","length","concat","update","digest","slice","parseKeys","mgf","xor","BN","crt","withPublic","privateKey","enc","reverse","padding","msg","k","modulus","byteLength","cmp","Error","zBuffer","iHash","hLen","maskedSeed","maskedDb","db","a","b","from","dif","Math","min","compare","oaep","p1","status","ps","toString","pkcs1","randomBytes","publicKey","paddedMsg","mLen","hLen2","dblen","num","cache","cur","nonZero","toRed","mont","redPow","publicExponent","fromRed","toArray"],"sourceRoot":""}