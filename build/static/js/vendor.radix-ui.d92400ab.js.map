{"version":3,"file":"static/js/vendor.radix-ui.d92400ab.js","mappings":"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","sources":["../node_modules/@radix-ui/primitive/src/primitive.tsx","../node_modules/@radix-ui/react-avatar/src/Avatar.tsx","../node_modules/@radix-ui/react-collection/node_modules/@radix-ui/react-context/src/createContext.tsx","../node_modules/@radix-ui/react-collection/src/Collection.tsx","../node_modules/@radix-ui/react-compose-refs/src/composeRefs.tsx","../node_modules/@radix-ui/react-context/src/createContext.tsx","../node_modules/@radix-ui/react-dialog/src/Dialog.tsx","../node_modules/@radix-ui/react-direction/src/Direction.tsx","../node_modules/@radix-ui/react-dismissable-layer/src/DismissableLayer.tsx","../node_modules/@radix-ui/react-use-escape-keydown/src/useEscapeKeydown.tsx","../node_modules/@radix-ui/react-menu/src/Menu.tsx","../node_modules/@radix-ui/react-dropdown-menu/src/DropdownMenu.tsx","../node_modules/@radix-ui/react-focus-guards/src/FocusGuards.tsx","../node_modules/@radix-ui/react-focus-scope/src/FocusScope.tsx","../node_modules/@radix-ui/react-id/src/id.tsx","../node_modules/@radix-ui/react-label/src/Label.tsx","../node_modules/@radix-ui/react-popover/src/Popover.tsx","../node_modules/@radix-ui/react-arrow/src/Arrow.tsx","../node_modules/@radix-ui/react-popper/node_modules/@radix-ui/react-context/src/createContext.tsx","../node_modules/@radix-ui/react-popper/src/Popper.tsx","../node_modules/@radix-ui/react-use-size/src/useSize.tsx","../node_modules/@radix-ui/react-portal/src/Portal.tsx","../node_modules/@radix-ui/react-presence/src/Presence.tsx","../node_modules/@radix-ui/react-presence/src/useStateMachine.tsx","../node_modules/@radix-ui/react-primitive/src/Primitive.tsx","../node_modules/@radix-ui/react-roving-focus/node_modules/@radix-ui/react-context/src/createContext.tsx","../node_modules/@radix-ui/react-roving-focus/src/RovingFocusGroup.tsx","../node_modules/@radix-ui/react-separator/src/Separator.tsx","../node_modules/@radix-ui/react-slot/src/Slot.tsx","../node_modules/@radix-ui/react-tabs/src/Tabs.tsx","../node_modules/@radix-ui/react-visually-hidden/src/VisuallyHidden.tsx","../node_modules/@radix-ui/react-tooltip/src/Tooltip.tsx","../node_modules/@radix-ui/react-use-callback-ref/src/useCallbackRef.tsx","../node_modules/@radix-ui/react-use-controllable-state/src/useControllableState.tsx","../node_modules/@radix-ui/react-use-layout-effect/src/useLayoutEffect.tsx"],"sourcesContent":["function composeEventHandlers<E>(\n  originalEventHandler?: (event: E) => void,\n  ourEventHandler?: (event: E) => void,\n  { checkForDefaultPrevented = true } = {}\n) {\n  return function handleEvent(event: E) {\n    originalEventHandler?.(event);\n\n    if (checkForDefaultPrevented === false || !((event as unknown) as Event).defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\n\nexport { composeEventHandlers };\n","import * as React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Avatar\n * -----------------------------------------------------------------------------------------------*/\n\nconst AVATAR_NAME = 'Avatar';\n\ntype ScopedProps<P> = P & { __scopeAvatar?: Scope };\nconst [createAvatarContext, createAvatarScope] = createContextScope(AVATAR_NAME);\n\ntype ImageLoadingStatus = 'idle' | 'loading' | 'loaded' | 'error';\n\ntype AvatarContextValue = {\n  imageLoadingStatus: ImageLoadingStatus;\n  onImageLoadingStatusChange(status: ImageLoadingStatus): void;\n};\n\nconst [AvatarProvider, useAvatarContext] = createAvatarContext<AvatarContextValue>(AVATAR_NAME);\n\ntype AvatarElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface AvatarProps extends PrimitiveSpanProps {}\n\nconst Avatar = React.forwardRef<AvatarElement, AvatarProps>(\n  (props: ScopedProps<AvatarProps>, forwardedRef) => {\n    const { __scopeAvatar, ...avatarProps } = props;\n    const [imageLoadingStatus, setImageLoadingStatus] = React.useState<ImageLoadingStatus>('idle');\n    return (\n      <AvatarProvider\n        scope={__scopeAvatar}\n        imageLoadingStatus={imageLoadingStatus}\n        onImageLoadingStatusChange={setImageLoadingStatus}\n      >\n        <Primitive.span {...avatarProps} ref={forwardedRef} />\n      </AvatarProvider>\n    );\n  }\n);\n\nAvatar.displayName = AVATAR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AvatarImage\n * -----------------------------------------------------------------------------------------------*/\n\nconst IMAGE_NAME = 'AvatarImage';\n\ntype AvatarImageElement = React.ElementRef<typeof Primitive.img>;\ntype PrimitiveImageProps = React.ComponentPropsWithoutRef<typeof Primitive.img>;\ninterface AvatarImageProps extends PrimitiveImageProps {\n  onLoadingStatusChange?: (status: ImageLoadingStatus) => void;\n}\n\nconst AvatarImage = React.forwardRef<AvatarImageElement, AvatarImageProps>(\n  (props: ScopedProps<AvatarImageProps>, forwardedRef) => {\n    const { __scopeAvatar, src, onLoadingStatusChange = () => {}, ...imageProps } = props;\n    const context = useAvatarContext(IMAGE_NAME, __scopeAvatar);\n    const imageLoadingStatus = useImageLoadingStatus(src, imageProps.referrerPolicy);\n    const handleLoadingStatusChange = useCallbackRef((status: ImageLoadingStatus) => {\n      onLoadingStatusChange(status);\n      context.onImageLoadingStatusChange(status);\n    });\n\n    useLayoutEffect(() => {\n      if (imageLoadingStatus !== 'idle') {\n        handleLoadingStatusChange(imageLoadingStatus);\n      }\n    }, [imageLoadingStatus, handleLoadingStatusChange]);\n\n    return imageLoadingStatus === 'loaded' ? (\n      <Primitive.img {...imageProps} ref={forwardedRef} src={src} />\n    ) : null;\n  }\n);\n\nAvatarImage.displayName = IMAGE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AvatarFallback\n * -----------------------------------------------------------------------------------------------*/\n\nconst FALLBACK_NAME = 'AvatarFallback';\n\ntype AvatarFallbackElement = React.ElementRef<typeof Primitive.span>;\ninterface AvatarFallbackProps extends PrimitiveSpanProps {\n  delayMs?: number;\n}\n\nconst AvatarFallback = React.forwardRef<AvatarFallbackElement, AvatarFallbackProps>(\n  (props: ScopedProps<AvatarFallbackProps>, forwardedRef) => {\n    const { __scopeAvatar, delayMs, ...fallbackProps } = props;\n    const context = useAvatarContext(FALLBACK_NAME, __scopeAvatar);\n    const [canRender, setCanRender] = React.useState(delayMs === undefined);\n\n    React.useEffect(() => {\n      if (delayMs !== undefined) {\n        const timerId = window.setTimeout(() => setCanRender(true), delayMs);\n        return () => window.clearTimeout(timerId);\n      }\n    }, [delayMs]);\n\n    return canRender && context.imageLoadingStatus !== 'loaded' ? (\n      <Primitive.span {...fallbackProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nAvatarFallback.displayName = FALLBACK_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useImageLoadingStatus(src?: string, referrerPolicy?: React.HTMLAttributeReferrerPolicy) {\n  const [loadingStatus, setLoadingStatus] = React.useState<ImageLoadingStatus>('idle');\n\n  useLayoutEffect(() => {\n    if (!src) {\n      setLoadingStatus('error');\n      return;\n    }\n\n    let isMounted = true;\n    const image = new window.Image();\n\n    const updateStatus = (status: ImageLoadingStatus) => () => {\n      if (!isMounted) return;\n      setLoadingStatus(status);\n    };\n\n    setLoadingStatus('loading');\n    image.onload = updateStatus('loaded');\n    image.onerror = updateStatus('error');\n    image.src = src;\n    if (referrerPolicy) {\n      image.referrerPolicy = referrerPolicy;\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [src, referrerPolicy]);\n\n  return loadingStatus;\n}\nconst Root = Avatar;\nconst Image = AvatarImage;\nconst Fallback = AvatarFallback;\n\nexport {\n  createAvatarScope,\n  //\n  Avatar,\n  AvatarImage,\n  AvatarFallback,\n  //\n  Root,\n  Image,\n  Fallback,\n};\nexport type { AvatarProps, AvatarImageProps, AvatarFallbackProps };\n","import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    function Provider(\n      props: ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    ) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    }\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    Provider.displayName = rootComponentName + 'Provider';\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n","import React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Slot } from '@radix-ui/react-slot';\n\ntype SlotProps = React.ComponentPropsWithoutRef<typeof Slot>;\ntype CollectionElement = HTMLElement;\ninterface CollectionProps extends SlotProps {\n  scope: any;\n}\n\n// We have resorted to returning slots directly rather than exposing primitives that can then\n// be slotted like `<CollectionItem as={Slot}>…</CollectionItem>`.\n// This is because we encountered issues with generic types that cannot be statically analysed\n// due to creating them dynamically via createCollection.\n\nfunction createCollection<ItemElement extends HTMLElement, ItemData = {}>(name: string) {\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionProvider\n   * ---------------------------------------------------------------------------------------------*/\n\n  const PROVIDER_NAME = name + 'CollectionProvider';\n  const [createCollectionContext, createCollectionScope] = createContextScope(PROVIDER_NAME);\n\n  type ContextValue = {\n    collectionRef: React.RefObject<CollectionElement>;\n    itemMap: Map<React.RefObject<ItemElement>, { ref: React.RefObject<ItemElement> } & ItemData>;\n  };\n\n  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext<ContextValue>(\n    PROVIDER_NAME,\n    { collectionRef: { current: null }, itemMap: new Map() }\n  );\n\n  const CollectionProvider: React.FC<{ children?: React.ReactNode; scope: any }> = (props) => {\n    const { scope, children } = props;\n    const ref = React.useRef<CollectionElement>(null);\n    const itemMap = React.useRef<ContextValue['itemMap']>(new Map()).current;\n    return (\n      <CollectionProviderImpl scope={scope} itemMap={itemMap} collectionRef={ref}>\n        {children}\n      </CollectionProviderImpl>\n    );\n  };\n\n  CollectionProvider.displayName = PROVIDER_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionSlot\n   * ---------------------------------------------------------------------------------------------*/\n\n  const COLLECTION_SLOT_NAME = name + 'CollectionSlot';\n\n  const CollectionSlot = React.forwardRef<CollectionElement, CollectionProps>(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);\n      return <Slot ref={composedRefs}>{children}</Slot>;\n    }\n  );\n\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionItem\n   * ---------------------------------------------------------------------------------------------*/\n\n  const ITEM_SLOT_NAME = name + 'CollectionItemSlot';\n  const ITEM_DATA_ATTR = 'data-radix-collection-item';\n\n  type CollectionItemSlotProps = ItemData & {\n    children: React.ReactNode;\n    scope: any;\n  };\n\n  const CollectionItemSlot = React.forwardRef<ItemElement, CollectionItemSlotProps>(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React.useRef<ItemElement>(null);\n      const composedRefs = useComposedRefs(forwardedRef, ref);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n\n      React.useEffect(() => {\n        context.itemMap.set(ref, { ref, ...(itemData as unknown as ItemData) });\n        return () => void context.itemMap.delete(ref);\n      });\n\n      return (\n        <Slot {...{ [ITEM_DATA_ATTR]: '' }} ref={composedRefs}>\n          {children}\n        </Slot>\n      );\n    }\n  );\n\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * useCollection\n   * ---------------------------------------------------------------------------------------------*/\n\n  function useCollection(scope: any) {\n    const context = useCollectionContext(name + 'CollectionConsumer', scope);\n\n    const getItems = React.useCallback(() => {\n      const collectionNode = context.collectionRef.current;\n      if (!collectionNode) return [];\n      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));\n      const items = Array.from(context.itemMap.values());\n      const orderedItems = items.sort(\n        (a, b) => orderedNodes.indexOf(a.ref.current!) - orderedNodes.indexOf(b.ref.current!)\n      );\n      return orderedItems;\n    }, [context.collectionRef, context.itemMap]);\n\n    return getItems;\n  }\n\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    useCollection,\n    createCollectionScope,\n  ] as const;\n}\n\nexport { createCollection };\nexport type { CollectionProps };\n","import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    (ref as React.MutableRefObject<T>).current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T) => refs.forEach((ref) => setRef(ref, node));\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n","import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  const Provider: React.FC<ContextValueType & { children: React.ReactNode }> = (props) => {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  };\n\n  Provider.displayName = rootComponentName + 'Provider';\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    const Provider: React.FC<\n      ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    > = (props) => {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    };\n\n    Provider.displayName = rootComponentName + 'Provider';\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContext, createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport { hideOthers } from 'aria-hidden';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog\n * -----------------------------------------------------------------------------------------------*/\n\nconst DIALOG_NAME = 'Dialog';\n\ntype ScopedProps<P> = P & { __scopeDialog?: Scope };\nconst [createDialogContext, createDialogScope] = createContextScope(DIALOG_NAME);\n\ntype DialogContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentRef: React.RefObject<DialogContentElement>;\n  contentId: string;\n  titleId: string;\n  descriptionId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\nconst [DialogProvider, useDialogContext] = createDialogContext<DialogContextValue>(DIALOG_NAME);\n\ninterface DialogProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n}\n\nconst Dialog: React.FC<DialogProps> = (props: ScopedProps<DialogProps>) => {\n  const {\n    __scopeDialog,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true,\n  } = props;\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const contentRef = React.useRef<DialogContentElement>(null);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <DialogProvider\n      scope={__scopeDialog}\n      triggerRef={triggerRef}\n      contentRef={contentRef}\n      contentId={useId()}\n      titleId={useId()}\n      descriptionId={useId()}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      modal={modal}\n    >\n      {children}\n    </DialogProvider>\n  );\n};\n\nDialog.displayName = DIALOG_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DialogTrigger';\n\ntype DialogTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DialogTriggerProps extends PrimitiveButtonProps {}\n\nconst DialogTrigger = React.forwardRef<DialogTriggerElement, DialogTriggerProps>(\n  (props: ScopedProps<DialogTriggerProps>, forwardedRef) => {\n    const { __scopeDialog, ...triggerProps } = props;\n    const context = useDialogContext(TRIGGER_NAME, __scopeDialog);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n    return (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n  }\n);\n\nDialogTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DialogPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createDialogContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface DialogPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogPortal: React.FC<DialogPortalProps> = (props: ScopedProps<DialogPortalProps>) => {\n  const { __scopeDialog, forceMount, children, container } = props;\n  const context = useDialogContext(PORTAL_NAME, __scopeDialog);\n  return (\n    <PortalProvider scope={__scopeDialog} forceMount={forceMount}>\n      {React.Children.map(children, (child) => (\n        <Presence present={forceMount || context.open}>\n          <PortalPrimitive asChild container={container}>\n            {child}\n          </PortalPrimitive>\n        </Presence>\n      ))}\n    </PortalProvider>\n  );\n};\n\nDialogPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst OVERLAY_NAME = 'DialogOverlay';\n\ntype DialogOverlayElement = DialogOverlayImplElement;\ninterface DialogOverlayProps extends DialogOverlayImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogOverlay = React.forwardRef<DialogOverlayElement, DialogOverlayProps>(\n  (props: ScopedProps<DialogOverlayProps>, forwardedRef) => {\n    const portalContext = usePortalContext(OVERLAY_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, props.__scopeDialog);\n    return context.modal ? (\n      <Presence present={forceMount || context.open}>\n        <DialogOverlayImpl {...overlayProps} ref={forwardedRef} />\n      </Presence>\n    ) : null;\n  }\n);\n\nDialogOverlay.displayName = OVERLAY_NAME;\n\ntype DialogOverlayImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DialogOverlayImplProps extends PrimitiveDivProps {}\n\nconst DialogOverlayImpl = React.forwardRef<DialogOverlayImplElement, DialogOverlayImplProps>(\n  (props: ScopedProps<DialogOverlayImplProps>, forwardedRef) => {\n    const { __scopeDialog, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, __scopeDialog);\n    return (\n      // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`\n      // ie. when `Overlay` and `Content` are siblings\n      <RemoveScroll as={Slot} allowPinchZoom shards={[context.contentRef]}>\n        <Primitive.div\n          data-state={getState(context.open)}\n          {...overlayProps}\n          ref={forwardedRef}\n          // We re-enable pointer-events prevented by `Dialog.Content` to allow scrolling the overlay.\n          style={{ pointerEvents: 'auto', ...overlayProps.style }}\n        />\n      </RemoveScroll>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DialogContent';\n\ntype DialogContentElement = DialogContentTypeElement;\ninterface DialogContentProps extends DialogContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogContent = React.forwardRef<DialogContentElement, DialogContentProps>(\n  (props: ScopedProps<DialogContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <DialogContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <DialogContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nDialogContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentTypeElement = DialogContentImplElement;\ninterface DialogContentTypeProps\n  extends Omit<DialogContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {}\n\nconst DialogContentModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, context.contentRef, contentRef);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure focus isn't trapped once `DialogContent` has been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        disableOutsidePointerEvents\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          event.preventDefault();\n          context.triggerRef.current?.focus();\n        })}\n        onPointerDownOutside={composeEventHandlers(props.onPointerDownOutside, (event) => {\n          const originalEvent = event.detail.originalEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n          // If the event is a right-click, we shouldn't close because\n          // it is effectively as if we right-clicked the `Overlay`.\n          if (isRightClick) event.preventDefault();\n        })}\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) =>\n          event.preventDefault()\n        )}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst DialogContentNonModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === 'pointerdown') {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          const target = event.target as HTMLElement;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n\n          // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n          // we will get the pointer down outside event on the trigger, but then a subsequent\n          // focus outside event on the container, we ignore any focus outside event when we've\n          // already had a pointer down outside event.\n          if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentImplElement = React.ElementRef<typeof DismissableLayer>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\ninterface DialogContentImplProps extends Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * When `true`, focus cannot escape the `Content` via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst DialogContentImpl = React.forwardRef<DialogContentImplElement, DialogContentImplProps>(\n  (props: ScopedProps<DialogContentImplProps>, forwardedRef) => {\n    const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, __scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n\n    // Make sure the whole tree has focus guards as our `Dialog` will be\n    // the last element in the DOM (because of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <>\n        <FocusScope\n          asChild\n          loop\n          trapped={trapFocus}\n          onMountAutoFocus={onOpenAutoFocus}\n          onUnmountAutoFocus={onCloseAutoFocus}\n        >\n          <DismissableLayer\n            role=\"dialog\"\n            id={context.contentId}\n            aria-describedby={context.descriptionId}\n            aria-labelledby={context.titleId}\n            data-state={getState(context.open)}\n            {...contentProps}\n            ref={composedRefs}\n            onDismiss={() => context.onOpenChange(false)}\n          />\n        </FocusScope>\n        {process.env.NODE_ENV !== 'production' && (\n          <>\n            <TitleWarning titleId={context.titleId} />\n            <DescriptionWarning contentRef={contentRef} descriptionId={context.descriptionId} />\n          </>\n        )}\n      </>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'DialogTitle';\n\ntype DialogTitleElement = React.ElementRef<typeof Primitive.h2>;\ntype PrimitiveHeading2Props = React.ComponentPropsWithoutRef<typeof Primitive.h2>;\ninterface DialogTitleProps extends PrimitiveHeading2Props {}\n\nconst DialogTitle = React.forwardRef<DialogTitleElement, DialogTitleProps>(\n  (props: ScopedProps<DialogTitleProps>, forwardedRef) => {\n    const { __scopeDialog, ...titleProps } = props;\n    const context = useDialogContext(TITLE_NAME, __scopeDialog);\n    return <Primitive.h2 id={context.titleId} {...titleProps} ref={forwardedRef} />;\n  }\n);\n\nDialogTitle.displayName = TITLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'DialogDescription';\n\ntype DialogDescriptionElement = React.ElementRef<typeof Primitive.p>;\ntype PrimitiveParagraphProps = React.ComponentPropsWithoutRef<typeof Primitive.p>;\ninterface DialogDescriptionProps extends PrimitiveParagraphProps {}\n\nconst DialogDescription = React.forwardRef<DialogDescriptionElement, DialogDescriptionProps>(\n  (props: ScopedProps<DialogDescriptionProps>, forwardedRef) => {\n    const { __scopeDialog, ...descriptionProps } = props;\n    const context = useDialogContext(DESCRIPTION_NAME, __scopeDialog);\n    return <Primitive.p id={context.descriptionId} {...descriptionProps} ref={forwardedRef} />;\n  }\n);\n\nDialogDescription.displayName = DESCRIPTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'DialogClose';\n\ntype DialogCloseElement = React.ElementRef<typeof Primitive.button>;\ninterface DialogCloseProps extends PrimitiveButtonProps {}\n\nconst DialogClose = React.forwardRef<DialogCloseElement, DialogCloseProps>(\n  (props: ScopedProps<DialogCloseProps>, forwardedRef) => {\n    const { __scopeDialog, ...closeProps } = props;\n    const context = useDialogContext(CLOSE_NAME, __scopeDialog);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nDialogClose.displayName = CLOSE_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst TITLE_WARNING_NAME = 'DialogTitleWarning';\n\nconst [WarningProvider, useWarningContext] = createContext(TITLE_WARNING_NAME, {\n  contentName: CONTENT_NAME,\n  titleName: TITLE_NAME,\n  docsSlug: 'dialog',\n});\n\ntype TitleWarningProps = { titleId?: string };\n\nconst TitleWarning: React.FC<TitleWarningProps> = ({ titleId }) => {\n  const titleWarningContext = useWarningContext(TITLE_WARNING_NAME);\n\n  const MESSAGE = `\\`${titleWarningContext.contentName}\\` requires a \\`${titleWarningContext.titleName}\\` for the component to be accessible for screen reader users.\n\nIf you want to hide the \\`${titleWarningContext.titleName}\\`, you can wrap it with our VisuallyHidden component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;\n\n  React.useEffect(() => {\n    if (titleId) {\n      const hasTitle = document.getElementById(titleId);\n      if (!hasTitle) console.error(MESSAGE);\n    }\n  }, [MESSAGE, titleId]);\n\n  return null;\n};\n\nconst DESCRIPTION_WARNING_NAME = 'DialogDescriptionWarning';\n\ntype DescriptionWarningProps = {\n  contentRef: React.RefObject<DialogContentElement>;\n  descriptionId?: string;\n};\n\nconst DescriptionWarning: React.FC<DescriptionWarningProps> = ({ contentRef, descriptionId }) => {\n  const descriptionWarningContext = useWarningContext(DESCRIPTION_WARNING_NAME);\n  const MESSAGE = `Warning: Missing \\`Description\\` or \\`aria-describedby={undefined}\\` for {${descriptionWarningContext.contentName}}.`;\n\n  React.useEffect(() => {\n    const describedById = contentRef.current?.getAttribute('aria-describedby');\n    // if we have an id and the user hasn't set aria-describedby={undefined}\n    if (descriptionId && describedById) {\n      const hasDescription = document.getElementById(descriptionId);\n      if (!hasDescription) console.warn(MESSAGE);\n    }\n  }, [MESSAGE, contentRef, descriptionId]);\n\n  return null;\n};\n\nconst Root = Dialog;\nconst Trigger = DialogTrigger;\nconst Portal = DialogPortal;\nconst Overlay = DialogOverlay;\nconst Content = DialogContent;\nconst Title = DialogTitle;\nconst Description = DialogDescription;\nconst Close = DialogClose;\n\nexport {\n  createDialogScope,\n  //\n  Dialog,\n  DialogTrigger,\n  DialogPortal,\n  DialogOverlay,\n  DialogContent,\n  DialogTitle,\n  DialogDescription,\n  DialogClose,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Title,\n  Description,\n  Close,\n  //\n  WarningProvider,\n};\nexport type {\n  DialogProps,\n  DialogTriggerProps,\n  DialogPortalProps,\n  DialogOverlayProps,\n  DialogContentProps,\n  DialogTitleProps,\n  DialogDescriptionProps,\n  DialogCloseProps,\n};\n","import * as React from 'react';\n\ntype Direction = 'ltr' | 'rtl';\nconst DirectionContext = React.createContext<Direction | undefined>(undefined);\n\n/* -------------------------------------------------------------------------------------------------\n * Direction\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DirectionProviderProps {\n  children?: React.ReactNode;\n  dir: Direction;\n}\nconst DirectionProvider: React.FC<DirectionProviderProps> = (props) => {\n  const { dir, children } = props;\n  return <DirectionContext.Provider value={dir}>{children}</DirectionContext.Provider>;\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useDirection(localDir?: Direction) {\n  const globalDir = React.useContext(DirectionContext);\n  return localDir || globalDir || 'ltr';\n}\n\nconst Provider = DirectionProvider;\n\nexport {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n};\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useEscapeKeydown } from '@radix-ui/react-use-escape-keydown';\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayer\n * -----------------------------------------------------------------------------------------------*/\n\nconst DISMISSABLE_LAYER_NAME = 'DismissableLayer';\nconst CONTEXT_UPDATE = 'dismissableLayer.update';\nconst POINTER_DOWN_OUTSIDE = 'dismissableLayer.pointerDownOutside';\nconst FOCUS_OUTSIDE = 'dismissableLayer.focusOutside';\n\nlet originalBodyPointerEvents: string;\n\nconst DismissableLayerContext = React.createContext({\n  layers: new Set<DismissableLayerElement>(),\n  layersWithOutsidePointerEventsDisabled: new Set<DismissableLayerElement>(),\n  branches: new Set<DismissableLayerBranchElement>(),\n});\n\ntype DismissableLayerElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DismissableLayerProps extends PrimitiveDivProps {\n  /**\n   * When `true`, hover/focus/click interactions will be disabled on elements outside\n   * the `DismissableLayer`. Users will need to click twice on outside elements to\n   * interact with them: once to close the `DismissableLayer`, and again to trigger the element.\n   */\n  disableOutsidePointerEvents?: boolean;\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: (event: KeyboardEvent) => void;\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void;\n  /**\n   * Event handler called when the focus moves outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onFocusOutside?: (event: FocusOutsideEvent) => void;\n  /**\n   * Event handler called when an interaction happens outside the `DismissableLayer`.\n   * Specifically, when a `pointerdown` event happens outside or focus moves outside of it.\n   * Can be prevented.\n   */\n  onInteractOutside?: (event: PointerDownOutsideEvent | FocusOutsideEvent) => void;\n  /**\n   * Handler called when the `DismissableLayer` should be dismissed\n   */\n  onDismiss?: () => void;\n}\n\nconst DismissableLayer = React.forwardRef<DismissableLayerElement, DismissableLayerProps>(\n  (props, forwardedRef) => {\n    const {\n      disableOutsidePointerEvents = false,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      ...layerProps\n    } = props;\n    const context = React.useContext(DismissableLayerContext);\n    const [node, setNode] = React.useState<DismissableLayerElement | null>(null);\n    const ownerDocument = node?.ownerDocument ?? globalThis?.document;\n    const [, force] = React.useState({});\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setNode(node));\n    const layers = Array.from(context.layers);\n    const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1); // prettier-ignore\n    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled); // prettier-ignore\n    const index = node ? layers.indexOf(node) : -1;\n    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;\n    const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;\n\n    const pointerDownOutside = usePointerDownOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isPointerDownOnBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (!isPointerEventsEnabled || isPointerDownOnBranch) return;\n      onPointerDownOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n\n    const focusOutside = useFocusOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isFocusInBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (isFocusInBranch) return;\n      onFocusOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n\n    useEscapeKeydown((event) => {\n      const isHighestLayer = index === context.layers.size - 1;\n      if (!isHighestLayer) return;\n      onEscapeKeyDown?.(event);\n      if (!event.defaultPrevented && onDismiss) {\n        event.preventDefault();\n        onDismiss();\n      }\n    }, ownerDocument);\n\n    React.useEffect(() => {\n      if (!node) return;\n      if (disableOutsidePointerEvents) {\n        if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n          originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;\n          ownerDocument.body.style.pointerEvents = 'none';\n        }\n        context.layersWithOutsidePointerEventsDisabled.add(node);\n      }\n      context.layers.add(node);\n      dispatchUpdate();\n      return () => {\n        if (\n          disableOutsidePointerEvents &&\n          context.layersWithOutsidePointerEventsDisabled.size === 1\n        ) {\n          ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;\n        }\n      };\n    }, [node, ownerDocument, disableOutsidePointerEvents, context]);\n\n    /**\n     * We purposefully prevent combining this effect with the `disableOutsidePointerEvents` effect\n     * because a change to `disableOutsidePointerEvents` would remove this layer from the stack\n     * and add it to the end again so the layering order wouldn't be _creation order_.\n     * We only want them to be removed from context stacks when unmounted.\n     */\n    React.useEffect(() => {\n      return () => {\n        if (!node) return;\n        context.layers.delete(node);\n        context.layersWithOutsidePointerEventsDisabled.delete(node);\n        dispatchUpdate();\n      };\n    }, [node, context]);\n\n    React.useEffect(() => {\n      const handleUpdate = () => force({});\n      document.addEventListener(CONTEXT_UPDATE, handleUpdate);\n      return () => document.removeEventListener(CONTEXT_UPDATE, handleUpdate);\n    }, []);\n\n    return (\n      <Primitive.div\n        {...layerProps}\n        ref={composedRefs}\n        style={{\n          pointerEvents: isBodyPointerEventsDisabled\n            ? isPointerEventsEnabled\n              ? 'auto'\n              : 'none'\n            : undefined,\n          ...props.style,\n        }}\n        onFocusCapture={composeEventHandlers(props.onFocusCapture, focusOutside.onFocusCapture)}\n        onBlurCapture={composeEventHandlers(props.onBlurCapture, focusOutside.onBlurCapture)}\n        onPointerDownCapture={composeEventHandlers(\n          props.onPointerDownCapture,\n          pointerDownOutside.onPointerDownCapture\n        )}\n      />\n    );\n  }\n);\n\nDismissableLayer.displayName = DISMISSABLE_LAYER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayerBranch\n * -----------------------------------------------------------------------------------------------*/\n\nconst BRANCH_NAME = 'DismissableLayerBranch';\n\ntype DismissableLayerBranchElement = React.ElementRef<typeof Primitive.div>;\ninterface DismissableLayerBranchProps extends PrimitiveDivProps {}\n\nconst DismissableLayerBranch = React.forwardRef<\n  DismissableLayerBranchElement,\n  DismissableLayerBranchProps\n>((props, forwardedRef) => {\n  const context = React.useContext(DismissableLayerContext);\n  const ref = React.useRef<DismissableLayerBranchElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      context.branches.add(node);\n      return () => {\n        context.branches.delete(node);\n      };\n    }\n  }, [context.branches]);\n\n  return <Primitive.div {...props} ref={composedRefs} />;\n});\n\nDismissableLayerBranch.displayName = BRANCH_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PointerDownOutsideEvent = CustomEvent<{ originalEvent: PointerEvent }>;\ntype FocusOutsideEvent = CustomEvent<{ originalEvent: FocusEvent }>;\n\n/**\n * Listens for `pointerdown` outside a react subtree. We use `pointerdown` rather than `pointerup`\n * to mimic layer dismissing behaviour present in OS.\n * Returns props to pass to the node we want to check for outside events.\n */\nfunction usePointerDownOutside(\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const handlePointerDownOutside = useCallbackRef(onPointerDownOutside) as EventListener;\n  const isPointerInsideReactTreeRef = React.useRef(false);\n  const handleClickRef = React.useRef(() => {});\n\n  React.useEffect(() => {\n    const handlePointerDown = (event: PointerEvent) => {\n      if (event.target && !isPointerInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n\n        function handleAndDispatchPointerDownOutsideEvent() {\n          handleAndDispatchCustomEvent(\n            POINTER_DOWN_OUTSIDE,\n            handlePointerDownOutside,\n            eventDetail,\n            { discrete: true }\n          );\n        }\n\n        /**\n         * On touch devices, we need to wait for a click event because browsers implement\n         * a ~350ms delay between the time the user stops touching the display and when the\n         * browser executres events. We need to ensure we don't reactivate pointer-events within\n         * this timeframe otherwise the browser may execute events that should have been prevented.\n         *\n         * Additionally, this also lets us deal automatically with cancellations when a click event\n         * isn't raised because the page was considered scrolled/drag-scrolled, long-pressed, etc.\n         *\n         * This is why we also continuously remove the previous listener, because we cannot be\n         * certain that it was raised, and therefore cleaned-up.\n         */\n        if (event.pointerType === 'touch') {\n          ownerDocument.removeEventListener('click', handleClickRef.current);\n          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent;\n          ownerDocument.addEventListener('click', handleClickRef.current, { once: true });\n        } else {\n          handleAndDispatchPointerDownOutsideEvent();\n        }\n      } else {\n        // We need to remove the event listener in case the outside click has been canceled.\n        // See: https://github.com/radix-ui/primitives/issues/2171\n        ownerDocument.removeEventListener('click', handleClickRef.current);\n      }\n      isPointerInsideReactTreeRef.current = false;\n    };\n    /**\n     * if this hook executes in a component that mounts via a `pointerdown` event, the event\n     * would bubble up to the document and trigger a `pointerDownOutside` event. We avoid\n     * this by delaying the event listener registration on the document.\n     * This is not React specific, but rather how the DOM works, ie:\n     * ```\n     * button.addEventListener('pointerdown', () => {\n     *   console.log('I will log');\n     *   document.addEventListener('pointerdown', () => {\n     *     console.log('I will also log');\n     *   })\n     * });\n     */\n    const timerId = window.setTimeout(() => {\n      ownerDocument.addEventListener('pointerdown', handlePointerDown);\n    }, 0);\n    return () => {\n      window.clearTimeout(timerId);\n      ownerDocument.removeEventListener('pointerdown', handlePointerDown);\n      ownerDocument.removeEventListener('click', handleClickRef.current);\n    };\n  }, [ownerDocument, handlePointerDownOutside]);\n\n  return {\n    // ensures we check React component tree (not just DOM tree)\n    onPointerDownCapture: () => (isPointerInsideReactTreeRef.current = true),\n  };\n}\n\n/**\n * Listens for when focus happens outside a react subtree.\n * Returns props to pass to the root (node) of the subtree we want to check.\n */\nfunction useFocusOutside(\n  onFocusOutside?: (event: FocusOutsideEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const handleFocusOutside = useCallbackRef(onFocusOutside) as EventListener;\n  const isFocusInsideReactTreeRef = React.useRef(false);\n\n  React.useEffect(() => {\n    const handleFocus = (event: FocusEvent) => {\n      if (event.target && !isFocusInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n        handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {\n          discrete: false,\n        });\n      }\n    };\n    ownerDocument.addEventListener('focusin', handleFocus);\n    return () => ownerDocument.removeEventListener('focusin', handleFocus);\n  }, [ownerDocument, handleFocusOutside]);\n\n  return {\n    onFocusCapture: () => (isFocusInsideReactTreeRef.current = true),\n    onBlurCapture: () => (isFocusInsideReactTreeRef.current = false),\n  };\n}\n\nfunction dispatchUpdate() {\n  const event = new CustomEvent(CONTEXT_UPDATE);\n  document.dispatchEvent(event);\n}\n\nfunction handleAndDispatchCustomEvent<E extends CustomEvent, OriginalEvent extends Event>(\n  name: string,\n  handler: ((event: E) => void) | undefined,\n  detail: { originalEvent: OriginalEvent } & (E extends CustomEvent<infer D> ? D : never),\n  { discrete }: { discrete: boolean }\n) {\n  const target = detail.originalEvent.target;\n  const event = new CustomEvent(name, { bubbles: false, cancelable: true, detail });\n  if (handler) target.addEventListener(name, handler as EventListener, { once: true });\n\n  if (discrete) {\n    dispatchDiscreteCustomEvent(target, event);\n  } else {\n    target.dispatchEvent(event);\n  }\n}\n\nconst Root = DismissableLayer;\nconst Branch = DismissableLayerBranch;\n\nexport {\n  DismissableLayer,\n  DismissableLayerBranch,\n  //\n  Root,\n  Branch,\n};\nexport type { DismissableLayerProps };\n","import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\n/**\n * Listens for when the escape key is down\n */\nfunction useEscapeKeydown(\n  onEscapeKeyDownProp?: (event: KeyboardEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const onEscapeKeyDown = useCallbackRef(onEscapeKeyDownProp);\n\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onEscapeKeyDown(event);\n      }\n    };\n    ownerDocument.addEventListener('keydown', handleKeyDown, { capture: true });\n    return () => ownerDocument.removeEventListener('keydown', handleKeyDown, { capture: true });\n  }, [onEscapeKeyDown, ownerDocument]);\n}\n\nexport { useEscapeKeydown };\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs, composeRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { Slot } from '@radix-ui/react-slot';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst SELECTION_KEYS = ['Enter', ' '];\nconst FIRST_KEYS = ['ArrowDown', 'PageUp', 'Home'];\nconst LAST_KEYS = ['ArrowUp', 'PageDown', 'End'];\nconst FIRST_LAST_KEYS = [...FIRST_KEYS, ...LAST_KEYS];\nconst SUB_OPEN_KEYS: Record<Direction, string[]> = {\n  ltr: [...SELECTION_KEYS, 'ArrowRight'],\n  rtl: [...SELECTION_KEYS, 'ArrowLeft'],\n};\nconst SUB_CLOSE_KEYS: Record<Direction, string[]> = {\n  ltr: ['ArrowLeft'],\n  rtl: ['ArrowRight'],\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Menu\n * -----------------------------------------------------------------------------------------------*/\n\nconst MENU_NAME = 'Menu';\n\ntype ItemData = { disabled: boolean; textValue: string };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  MenuItemElement,\n  ItemData\n>(MENU_NAME);\n\ntype ScopedProps<P> = P & { __scopeMenu?: Scope };\nconst [createMenuContext, createMenuScope] = createContextScope(MENU_NAME, [\n  createCollectionScope,\n  createPopperScope,\n  createRovingFocusGroupScope,\n]);\nconst usePopperScope = createPopperScope();\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype MenuContextValue = {\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  content: MenuContentElement | null;\n  onContentChange(content: MenuContentElement | null): void;\n};\n\nconst [MenuProvider, useMenuContext] = createMenuContext<MenuContextValue>(MENU_NAME);\n\ntype MenuRootContextValue = {\n  onClose(): void;\n  isUsingKeyboardRef: React.RefObject<boolean>;\n  dir: Direction;\n  modal: boolean;\n};\n\nconst [MenuRootProvider, useMenuRootContext] = createMenuContext<MenuRootContextValue>(MENU_NAME);\n\ninterface MenuProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  modal?: boolean;\n}\n\nconst Menu: React.FC<MenuProps> = (props: ScopedProps<MenuProps>) => {\n  const { __scopeMenu, open = false, children, dir, onOpenChange, modal = true } = props;\n  const popperScope = usePopperScope(__scopeMenu);\n  const [content, setContent] = React.useState<MenuContentElement | null>(null);\n  const isUsingKeyboardRef = React.useRef(false);\n  const handleOpenChange = useCallbackRef(onOpenChange);\n  const direction = useDirection(dir);\n\n  React.useEffect(() => {\n    // Capture phase ensures we set the boolean before any side effects execute\n    // in response to the key or pointer event as they might depend on this value.\n    const handleKeyDown = () => {\n      isUsingKeyboardRef.current = true;\n      document.addEventListener('pointerdown', handlePointer, { capture: true, once: true });\n      document.addEventListener('pointermove', handlePointer, { capture: true, once: true });\n    };\n    const handlePointer = () => (isUsingKeyboardRef.current = false);\n    document.addEventListener('keydown', handleKeyDown, { capture: true });\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, { capture: true });\n      document.removeEventListener('pointerdown', handlePointer, { capture: true });\n      document.removeEventListener('pointermove', handlePointer, { capture: true });\n    };\n  }, []);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <MenuProvider\n        scope={__scopeMenu}\n        open={open}\n        onOpenChange={handleOpenChange}\n        content={content}\n        onContentChange={setContent}\n      >\n        <MenuRootProvider\n          scope={__scopeMenu}\n          onClose={React.useCallback(() => handleOpenChange(false), [handleOpenChange])}\n          isUsingKeyboardRef={isUsingKeyboardRef}\n          dir={direction}\n          modal={modal}\n        >\n          {children}\n        </MenuRootProvider>\n      </MenuProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nMenu.displayName = MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'MenuAnchor';\n\ntype MenuAnchorElement = React.ElementRef<typeof PopperPrimitive.Anchor>;\ntype PopperAnchorProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Anchor>;\ninterface MenuAnchorProps extends PopperAnchorProps {}\n\nconst MenuAnchor = React.forwardRef<MenuAnchorElement, MenuAnchorProps>(\n  (props: ScopedProps<MenuAnchorProps>, forwardedRef) => {\n    const { __scopeMenu, ...anchorProps } = props;\n    const popperScope = usePopperScope(__scopeMenu);\n    return <PopperPrimitive.Anchor {...popperScope} {...anchorProps} ref={forwardedRef} />;\n  }\n);\n\nMenuAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'MenuPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createMenuContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface MenuPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuPortal: React.FC<MenuPortalProps> = (props: ScopedProps<MenuPortalProps>) => {\n  const { __scopeMenu, forceMount, children, container } = props;\n  const context = useMenuContext(PORTAL_NAME, __scopeMenu);\n  return (\n    <PortalProvider scope={__scopeMenu} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nMenuPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'MenuContent';\n\ntype MenuContentContextValue = {\n  onItemEnter(event: React.PointerEvent): void;\n  onItemLeave(event: React.PointerEvent): void;\n  onTriggerLeave(event: React.PointerEvent): void;\n  searchRef: React.RefObject<string>;\n  pointerGraceTimerRef: React.MutableRefObject<number>;\n  onPointerGraceIntentChange(intent: GraceIntent | null): void;\n};\nconst [MenuContentProvider, useMenuContentContext] =\n  createMenuContext<MenuContentContextValue>(CONTENT_NAME);\n\ntype MenuContentElement = MenuRootContentTypeElement;\n/**\n * We purposefully don't union MenuRootContent and MenuSubContent props here because\n * they have conflicting prop types. We agreed that we would allow MenuSubContent to\n * accept props that it would just ignore.\n */\ninterface MenuContentProps extends MenuRootContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuContent = React.forwardRef<MenuContentElement, MenuContentProps>(\n  (props: ScopedProps<MenuContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeMenu);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, props.__scopeMenu);\n\n    return (\n      <Collection.Provider scope={props.__scopeMenu}>\n        <Presence present={forceMount || context.open}>\n          <Collection.Slot scope={props.__scopeMenu}>\n            {rootContext.modal ? (\n              <MenuRootContentModal {...contentProps} ref={forwardedRef} />\n            ) : (\n              <MenuRootContentNonModal {...contentProps} ref={forwardedRef} />\n            )}\n          </Collection.Slot>\n        </Presence>\n      </Collection.Provider>\n    );\n  }\n);\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuRootContentTypeElement = MenuContentImplElement;\ninterface MenuRootContentTypeProps\n  extends Omit<MenuContentImplProps, keyof MenuContentImplPrivateProps> {}\n\nconst MenuRootContentModal = React.forwardRef<MenuRootContentTypeElement, MenuRootContentTypeProps>(\n  (props: ScopedProps<MenuRootContentTypeProps>, forwardedRef) => {\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const ref = React.useRef<MenuRootContentTypeElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    // Hide everything from ARIA except the `MenuContent`\n    React.useEffect(() => {\n      const content = ref.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <MenuContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure we're not trapping once it's been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        // make sure to only disable pointer events when open\n        // this avoids blocking interactions while animating out\n        disableOutsidePointerEvents={context.open}\n        disableOutsideScroll\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(\n          props.onFocusOutside,\n          (event) => event.preventDefault(),\n          { checkForDefaultPrevented: false }\n        )}\n        onDismiss={() => context.onOpenChange(false)}\n      />\n    );\n  }\n);\n\nconst MenuRootContentNonModal = React.forwardRef<\n  MenuRootContentTypeElement,\n  MenuRootContentTypeProps\n>((props: ScopedProps<MenuRootContentTypeProps>, forwardedRef) => {\n  const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n  return (\n    <MenuContentImpl\n      {...props}\n      ref={forwardedRef}\n      trapFocus={false}\n      disableOutsidePointerEvents={false}\n      disableOutsideScroll={false}\n      onDismiss={() => context.onOpenChange(false)}\n    />\n  );\n});\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype RovingFocusGroupProps = React.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PopperContentProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ntype MenuContentImplPrivateProps = {\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n  onDismiss?: DismissableLayerProps['onDismiss'];\n  disableOutsidePointerEvents?: DismissableLayerProps['disableOutsidePointerEvents'];\n\n  /**\n   * Whether scrolling outside the `MenuContent` should be prevented\n   * (default: `false`)\n   */\n  disableOutsideScroll?: boolean;\n\n  /**\n   * Whether focus should be trapped within the `MenuContent`\n   * (default: false)\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n};\ninterface MenuContentImplProps\n  extends MenuContentImplPrivateProps,\n    Omit<PopperContentProps, 'dir' | 'onPlaced'> {\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: RovingFocusGroupProps['loop'];\n\n  onEntryFocus?: RovingFocusGroupProps['onEntryFocus'];\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n  onFocusOutside?: DismissableLayerProps['onFocusOutside'];\n  onInteractOutside?: DismissableLayerProps['onInteractOutside'];\n}\n\nconst MenuContentImpl = React.forwardRef<MenuContentImplElement, MenuContentImplProps>(\n  (props: ScopedProps<MenuContentImplProps>, forwardedRef) => {\n    const {\n      __scopeMenu,\n      loop = false,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEntryFocus,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      disableOutsideScroll,\n      ...contentProps\n    } = props;\n    const context = useMenuContext(CONTENT_NAME, __scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, __scopeMenu);\n    const popperScope = usePopperScope(__scopeMenu);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);\n    const getItems = useCollection(__scopeMenu);\n    const [currentItemId, setCurrentItemId] = React.useState<string | null>(null);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef, context.onContentChange);\n    const timerRef = React.useRef(0);\n    const searchRef = React.useRef('');\n    const pointerGraceTimerRef = React.useRef(0);\n    const pointerGraceIntentRef = React.useRef<GraceIntent | null>(null);\n    const pointerDirRef = React.useRef<Side>('right');\n    const lastPointerXRef = React.useRef(0);\n\n    const ScrollLockWrapper = disableOutsideScroll ? RemoveScroll : React.Fragment;\n    const scrollLockWrapperProps = disableOutsideScroll\n      ? { as: Slot, allowPinchZoom: true }\n      : undefined;\n\n    const handleTypeaheadSearch = (key: string) => {\n      const search = searchRef.current + key;\n      const items = getItems().filter((item) => !item.disabled);\n      const currentItem = document.activeElement;\n      const currentMatch = items.find((item) => item.ref.current === currentItem)?.textValue;\n      const values = items.map((item) => item.textValue);\n      const nextMatch = getNextMatch(values, search, currentMatch);\n      const newItem = items.find((item) => item.textValue === nextMatch)?.ref.current;\n\n      // Reset `searchRef` 1 second after it was last updated\n      (function updateSearch(value: string) {\n        searchRef.current = value;\n        window.clearTimeout(timerRef.current);\n        if (value !== '') timerRef.current = window.setTimeout(() => updateSearch(''), 1000);\n      })(search);\n\n      if (newItem) {\n        /**\n         * Imperative focus during keydown is risky so we prevent React's batching updates\n         * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n         */\n        setTimeout(() => (newItem as HTMLElement).focus());\n      }\n    };\n\n    React.useEffect(() => {\n      return () => window.clearTimeout(timerRef.current);\n    }, []);\n\n    // Make sure the whole tree has focus guards as our `MenuContent` may be\n    // the last element in the DOM (because of the `Portal`)\n    useFocusGuards();\n\n    const isPointerMovingToSubmenu = React.useCallback((event: React.PointerEvent) => {\n      const isMovingTowards = pointerDirRef.current === pointerGraceIntentRef.current?.side;\n      return isMovingTowards && isPointerInGraceArea(event, pointerGraceIntentRef.current?.area);\n    }, []);\n\n    return (\n      <MenuContentProvider\n        scope={__scopeMenu}\n        searchRef={searchRef}\n        onItemEnter={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) event.preventDefault();\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        onItemLeave={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) return;\n            contentRef.current?.focus();\n            setCurrentItemId(null);\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        onTriggerLeave={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) event.preventDefault();\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        pointerGraceTimerRef={pointerGraceTimerRef}\n        onPointerGraceIntentChange={React.useCallback((intent) => {\n          pointerGraceIntentRef.current = intent;\n        }, [])}\n      >\n        <ScrollLockWrapper {...scrollLockWrapperProps}>\n          <FocusScope\n            asChild\n            trapped={trapFocus}\n            onMountAutoFocus={composeEventHandlers(onOpenAutoFocus, (event) => {\n              // when opening, explicitly focus the content area only and leave\n              // `onEntryFocus` in  control of focusing first item\n              event.preventDefault();\n              contentRef.current?.focus({ preventScroll: true });\n            })}\n            onUnmountAutoFocus={onCloseAutoFocus}\n          >\n            <DismissableLayer\n              asChild\n              disableOutsidePointerEvents={disableOutsidePointerEvents}\n              onEscapeKeyDown={onEscapeKeyDown}\n              onPointerDownOutside={onPointerDownOutside}\n              onFocusOutside={onFocusOutside}\n              onInteractOutside={onInteractOutside}\n              onDismiss={onDismiss}\n            >\n              <RovingFocusGroup.Root\n                asChild\n                {...rovingFocusGroupScope}\n                dir={rootContext.dir}\n                orientation=\"vertical\"\n                loop={loop}\n                currentTabStopId={currentItemId}\n                onCurrentTabStopIdChange={setCurrentItemId}\n                onEntryFocus={composeEventHandlers(onEntryFocus, (event) => {\n                  // only focus first item when using keyboard\n                  if (!rootContext.isUsingKeyboardRef.current) event.preventDefault();\n                })}\n                preventScrollOnEntryFocus\n              >\n                <PopperPrimitive.Content\n                  role=\"menu\"\n                  aria-orientation=\"vertical\"\n                  data-state={getOpenState(context.open)}\n                  data-radix-menu-content=\"\"\n                  dir={rootContext.dir}\n                  {...popperScope}\n                  {...contentProps}\n                  ref={composedRefs}\n                  style={{ outline: 'none', ...contentProps.style }}\n                  onKeyDown={composeEventHandlers(contentProps.onKeyDown, (event) => {\n                    // submenu key events bubble through portals. We only care about keys in this menu.\n                    const target = event.target as HTMLElement;\n                    const isKeyDownInside =\n                      target.closest('[data-radix-menu-content]') === event.currentTarget;\n                    const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n                    const isCharacterKey = event.key.length === 1;\n                    if (isKeyDownInside) {\n                      // menus should not be navigated using tab key so we prevent it\n                      if (event.key === 'Tab') event.preventDefault();\n                      if (!isModifierKey && isCharacterKey) handleTypeaheadSearch(event.key);\n                    }\n                    // focus first/last item based on key pressed\n                    const content = contentRef.current;\n                    if (event.target !== content) return;\n                    if (!FIRST_LAST_KEYS.includes(event.key)) return;\n                    event.preventDefault();\n                    const items = getItems().filter((item) => !item.disabled);\n                    const candidateNodes = items.map((item) => item.ref.current!);\n                    if (LAST_KEYS.includes(event.key)) candidateNodes.reverse();\n                    focusFirst(candidateNodes);\n                  })}\n                  onBlur={composeEventHandlers(props.onBlur, (event) => {\n                    // clear search buffer when leaving the menu\n                    if (!event.currentTarget.contains(event.target)) {\n                      window.clearTimeout(timerRef.current);\n                      searchRef.current = '';\n                    }\n                  })}\n                  onPointerMove={composeEventHandlers(\n                    props.onPointerMove,\n                    whenMouse((event) => {\n                      const target = event.target as HTMLElement;\n                      const pointerXHasChanged = lastPointerXRef.current !== event.clientX;\n\n                      // We don't use `event.movementX` for this check because Safari will\n                      // always return `0` on a pointer event.\n                      if (event.currentTarget.contains(target) && pointerXHasChanged) {\n                        const newDir = event.clientX > lastPointerXRef.current ? 'right' : 'left';\n                        pointerDirRef.current = newDir;\n                        lastPointerXRef.current = event.clientX;\n                      }\n                    })\n                  )}\n                />\n              </RovingFocusGroup.Root>\n            </DismissableLayer>\n          </FocusScope>\n        </ScrollLockWrapper>\n      </MenuContentProvider>\n    );\n  }\n);\n\nMenuContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'MenuGroup';\n\ntype MenuGroupElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface MenuGroupProps extends PrimitiveDivProps {}\n\nconst MenuGroup = React.forwardRef<MenuGroupElement, MenuGroupProps>(\n  (props: ScopedProps<MenuGroupProps>, forwardedRef) => {\n    const { __scopeMenu, ...groupProps } = props;\n    return <Primitive.div role=\"group\" {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'MenuLabel';\n\ntype MenuLabelElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuLabelProps extends PrimitiveDivProps {}\n\nconst MenuLabel = React.forwardRef<MenuLabelElement, MenuLabelProps>(\n  (props: ScopedProps<MenuLabelProps>, forwardedRef) => {\n    const { __scopeMenu, ...labelProps } = props;\n    return <Primitive.div {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'MenuItem';\nconst ITEM_SELECT = 'menu.itemSelect';\n\ntype MenuItemElement = MenuItemImplElement;\ninterface MenuItemProps extends Omit<MenuItemImplProps, 'onSelect'> {\n  onSelect?: (event: Event) => void;\n}\n\nconst MenuItem = React.forwardRef<MenuItemElement, MenuItemProps>(\n  (props: ScopedProps<MenuItemProps>, forwardedRef) => {\n    const { disabled = false, onSelect, ...itemProps } = props;\n    const ref = React.useRef<HTMLDivElement>(null);\n    const rootContext = useMenuRootContext(ITEM_NAME, props.__scopeMenu);\n    const contentContext = useMenuContentContext(ITEM_NAME, props.__scopeMenu);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const isPointerDownRef = React.useRef(false);\n\n    const handleSelect = () => {\n      const menuItem = ref.current;\n      if (!disabled && menuItem) {\n        const itemSelectEvent = new CustomEvent(ITEM_SELECT, { bubbles: true, cancelable: true });\n        menuItem.addEventListener(ITEM_SELECT, (event) => onSelect?.(event), { once: true });\n        dispatchDiscreteCustomEvent(menuItem, itemSelectEvent);\n        if (itemSelectEvent.defaultPrevented) {\n          isPointerDownRef.current = false;\n        } else {\n          rootContext.onClose();\n        }\n      }\n    };\n\n    return (\n      <MenuItemImpl\n        {...itemProps}\n        ref={composedRefs}\n        disabled={disabled}\n        onClick={composeEventHandlers(props.onClick, handleSelect)}\n        onPointerDown={(event) => {\n          props.onPointerDown?.(event);\n          isPointerDownRef.current = true;\n        }}\n        onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n          // Pointer down can move to a different menu item which should activate it on pointer up.\n          // We dispatch a click for selection to allow composition with click based triggers and to\n          // prevent Firefox from getting stuck in text selection mode when the menu closes.\n          if (!isPointerDownRef.current) event.currentTarget?.click();\n        })}\n        onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n          const isTypingAhead = contentContext.searchRef.current !== '';\n          if (disabled || (isTypingAhead && event.key === ' ')) return;\n          if (SELECTION_KEYS.includes(event.key)) {\n            event.currentTarget.click();\n            /**\n             * We prevent default browser behaviour for selection keys as they should trigger\n             * a selection only:\n             * - prevents space from scrolling the page.\n             * - if keydown causes focus to move, prevents keydown from firing on the new target.\n             */\n            event.preventDefault();\n          }\n        })}\n      />\n    );\n  }\n);\n\nMenuItem.displayName = ITEM_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuItemImplElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuItemImplProps extends PrimitiveDivProps {\n  disabled?: boolean;\n  textValue?: string;\n}\n\nconst MenuItemImpl = React.forwardRef<MenuItemImplElement, MenuItemImplProps>(\n  (props: ScopedProps<MenuItemImplProps>, forwardedRef) => {\n    const { __scopeMenu, disabled = false, textValue, ...itemProps } = props;\n    const contentContext = useMenuContentContext(ITEM_NAME, __scopeMenu);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);\n    const ref = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const [isFocused, setIsFocused] = React.useState(false);\n\n    // get the item's `.textContent` as default strategy for typeahead `textValue`\n    const [textContent, setTextContent] = React.useState('');\n    React.useEffect(() => {\n      const menuItem = ref.current;\n      if (menuItem) {\n        setTextContent((menuItem.textContent ?? '').trim());\n      }\n    }, [itemProps.children]);\n\n    return (\n      <Collection.ItemSlot\n        scope={__scopeMenu}\n        disabled={disabled}\n        textValue={textValue ?? textContent}\n      >\n        <RovingFocusGroup.Item asChild {...rovingFocusGroupScope} focusable={!disabled}>\n          <Primitive.div\n            role=\"menuitem\"\n            data-highlighted={isFocused ? '' : undefined}\n            aria-disabled={disabled || undefined}\n            data-disabled={disabled ? '' : undefined}\n            {...itemProps}\n            ref={composedRefs}\n            /**\n             * We focus items on `pointerMove` to achieve the following:\n             *\n             * - Mouse over an item (it focuses)\n             * - Leave mouse where it is and use keyboard to focus a different item\n             * - Wiggle mouse without it leaving previously focused item\n             * - Previously focused item should re-focus\n             *\n             * If we used `mouseOver`/`mouseEnter` it would not re-focus when the mouse\n             * wiggles. This is to match native menu implementation.\n             */\n            onPointerMove={composeEventHandlers(\n              props.onPointerMove,\n              whenMouse((event) => {\n                if (disabled) {\n                  contentContext.onItemLeave(event);\n                } else {\n                  contentContext.onItemEnter(event);\n                  if (!event.defaultPrevented) {\n                    const item = event.currentTarget;\n                    item.focus({ preventScroll: true });\n                  }\n                }\n              })\n            )}\n            onPointerLeave={composeEventHandlers(\n              props.onPointerLeave,\n              whenMouse((event) => contentContext.onItemLeave(event))\n            )}\n            onFocus={composeEventHandlers(props.onFocus, () => setIsFocused(true))}\n            onBlur={composeEventHandlers(props.onBlur, () => setIsFocused(false))}\n          />\n        </RovingFocusGroup.Item>\n      </Collection.ItemSlot>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * MenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'MenuCheckboxItem';\n\ntype MenuCheckboxItemElement = MenuItemElement;\n\ntype CheckedState = boolean | 'indeterminate';\n\ninterface MenuCheckboxItemProps extends MenuItemProps {\n  checked?: CheckedState;\n  // `onCheckedChange` can never be called with `\"indeterminate\"` from the inside\n  onCheckedChange?: (checked: boolean) => void;\n}\n\nconst MenuCheckboxItem = React.forwardRef<MenuCheckboxItemElement, MenuCheckboxItemProps>(\n  (props: ScopedProps<MenuCheckboxItemProps>, forwardedRef) => {\n    const { checked = false, onCheckedChange, ...checkboxItemProps } = props;\n    return (\n      <ItemIndicatorProvider scope={props.__scopeMenu} checked={checked}>\n        <MenuItem\n          role=\"menuitemcheckbox\"\n          aria-checked={isIndeterminate(checked) ? 'mixed' : checked}\n          {...checkboxItemProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(checked)}\n          onSelect={composeEventHandlers(\n            checkboxItemProps.onSelect,\n            () => onCheckedChange?.(isIndeterminate(checked) ? true : !checked),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </ItemIndicatorProvider>\n    );\n  }\n);\n\nMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'MenuRadioGroup';\n\nconst [RadioGroupProvider, useRadioGroupContext] = createMenuContext<MenuRadioGroupProps>(\n  RADIO_GROUP_NAME,\n  { value: undefined, onValueChange: () => {} }\n);\n\ntype MenuRadioGroupElement = React.ElementRef<typeof MenuGroup>;\ninterface MenuRadioGroupProps extends MenuGroupProps {\n  value?: string;\n  onValueChange?: (value: string) => void;\n}\n\nconst MenuRadioGroup = React.forwardRef<MenuRadioGroupElement, MenuRadioGroupProps>(\n  (props: ScopedProps<MenuRadioGroupProps>, forwardedRef) => {\n    const { value, onValueChange, ...groupProps } = props;\n    const handleValueChange = useCallbackRef(onValueChange);\n    return (\n      <RadioGroupProvider scope={props.__scopeMenu} value={value} onValueChange={handleValueChange}>\n        <MenuGroup {...groupProps} ref={forwardedRef} />\n      </RadioGroupProvider>\n    );\n  }\n);\n\nMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'MenuRadioItem';\n\ntype MenuRadioItemElement = React.ElementRef<typeof MenuItem>;\ninterface MenuRadioItemProps extends MenuItemProps {\n  value: string;\n}\n\nconst MenuRadioItem = React.forwardRef<MenuRadioItemElement, MenuRadioItemProps>(\n  (props: ScopedProps<MenuRadioItemProps>, forwardedRef) => {\n    const { value, ...radioItemProps } = props;\n    const context = useRadioGroupContext(RADIO_ITEM_NAME, props.__scopeMenu);\n    const checked = value === context.value;\n    return (\n      <ItemIndicatorProvider scope={props.__scopeMenu} checked={checked}>\n        <MenuItem\n          role=\"menuitemradio\"\n          aria-checked={checked}\n          {...radioItemProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(checked)}\n          onSelect={composeEventHandlers(\n            radioItemProps.onSelect,\n            () => context.onValueChange?.(value),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </ItemIndicatorProvider>\n    );\n  }\n);\n\nMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_INDICATOR_NAME = 'MenuItemIndicator';\n\ntype CheckboxContextValue = { checked: CheckedState };\n\nconst [ItemIndicatorProvider, useItemIndicatorContext] = createMenuContext<CheckboxContextValue>(\n  ITEM_INDICATOR_NAME,\n  { checked: false }\n);\n\ntype MenuItemIndicatorElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface MenuItemIndicatorProps extends PrimitiveSpanProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuItemIndicator = React.forwardRef<MenuItemIndicatorElement, MenuItemIndicatorProps>(\n  (props: ScopedProps<MenuItemIndicatorProps>, forwardedRef) => {\n    const { __scopeMenu, forceMount, ...itemIndicatorProps } = props;\n    const indicatorContext = useItemIndicatorContext(ITEM_INDICATOR_NAME, __scopeMenu);\n    return (\n      <Presence\n        present={\n          forceMount ||\n          isIndeterminate(indicatorContext.checked) ||\n          indicatorContext.checked === true\n        }\n      >\n        <Primitive.span\n          {...itemIndicatorProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(indicatorContext.checked)}\n        />\n      </Presence>\n    );\n  }\n);\n\nMenuItemIndicator.displayName = ITEM_INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'MenuSeparator';\n\ntype MenuSeparatorElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuSeparatorProps extends PrimitiveDivProps {}\n\nconst MenuSeparator = React.forwardRef<MenuSeparatorElement, MenuSeparatorProps>(\n  (props: ScopedProps<MenuSeparatorProps>, forwardedRef) => {\n    const { __scopeMenu, ...separatorProps } = props;\n    return (\n      <Primitive.div\n        role=\"separator\"\n        aria-orientation=\"horizontal\"\n        {...separatorProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'MenuArrow';\n\ntype MenuArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface MenuArrowProps extends PopperArrowProps {}\n\nconst MenuArrow = React.forwardRef<MenuArrowElement, MenuArrowProps>(\n  (props: ScopedProps<MenuArrowProps>, forwardedRef) => {\n    const { __scopeMenu, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeMenu);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nMenuArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSub\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_NAME = 'MenuSub';\n\ntype MenuSubContextValue = {\n  contentId: string;\n  triggerId: string;\n  trigger: MenuSubTriggerElement | null;\n  onTriggerChange(trigger: MenuSubTriggerElement | null): void;\n};\n\nconst [MenuSubProvider, useMenuSubContext] = createMenuContext<MenuSubContextValue>(SUB_NAME);\n\ninterface MenuSubProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst MenuSub: React.FC<MenuSubProps> = (props: ScopedProps<MenuSubProps>) => {\n  const { __scopeMenu, children, open = false, onOpenChange } = props;\n  const parentMenuContext = useMenuContext(SUB_NAME, __scopeMenu);\n  const popperScope = usePopperScope(__scopeMenu);\n  const [trigger, setTrigger] = React.useState<MenuSubTriggerElement | null>(null);\n  const [content, setContent] = React.useState<MenuContentElement | null>(null);\n  const handleOpenChange = useCallbackRef(onOpenChange);\n\n  // Prevent the parent menu from reopening with open submenus.\n  React.useEffect(() => {\n    if (parentMenuContext.open === false) handleOpenChange(false);\n    return () => handleOpenChange(false);\n  }, [parentMenuContext.open, handleOpenChange]);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <MenuProvider\n        scope={__scopeMenu}\n        open={open}\n        onOpenChange={handleOpenChange}\n        content={content}\n        onContentChange={setContent}\n      >\n        <MenuSubProvider\n          scope={__scopeMenu}\n          contentId={useId()}\n          triggerId={useId()}\n          trigger={trigger}\n          onTriggerChange={setTrigger}\n        >\n          {children}\n        </MenuSubProvider>\n      </MenuProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nMenuSub.displayName = SUB_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'MenuSubTrigger';\n\ntype MenuSubTriggerElement = MenuItemImplElement;\ninterface MenuSubTriggerProps extends MenuItemImplProps {}\n\nconst MenuSubTrigger = React.forwardRef<MenuSubTriggerElement, MenuSubTriggerProps>(\n  (props: ScopedProps<MenuSubTriggerProps>, forwardedRef) => {\n    const context = useMenuContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const subContext = useMenuSubContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const contentContext = useMenuContentContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const openTimerRef = React.useRef<number | null>(null);\n    const { pointerGraceTimerRef, onPointerGraceIntentChange } = contentContext;\n    const scope = { __scopeMenu: props.__scopeMenu };\n\n    const clearOpenTimer = React.useCallback(() => {\n      if (openTimerRef.current) window.clearTimeout(openTimerRef.current);\n      openTimerRef.current = null;\n    }, []);\n\n    React.useEffect(() => clearOpenTimer, [clearOpenTimer]);\n\n    React.useEffect(() => {\n      const pointerGraceTimer = pointerGraceTimerRef.current;\n      return () => {\n        window.clearTimeout(pointerGraceTimer);\n        onPointerGraceIntentChange(null);\n      };\n    }, [pointerGraceTimerRef, onPointerGraceIntentChange]);\n\n    return (\n      <MenuAnchor asChild {...scope}>\n        <MenuItemImpl\n          id={subContext.triggerId}\n          aria-haspopup=\"menu\"\n          aria-expanded={context.open}\n          aria-controls={subContext.contentId}\n          data-state={getOpenState(context.open)}\n          {...props}\n          ref={composeRefs(forwardedRef, subContext.onTriggerChange)}\n          // This is redundant for mouse users but we cannot determine pointer type from\n          // click event and we cannot use pointerup event (see git history for reasons why)\n          onClick={(event) => {\n            props.onClick?.(event);\n            if (props.disabled || event.defaultPrevented) return;\n            /**\n             * We manually focus because iOS Safari doesn't always focus on click (e.g. buttons)\n             * and we rely heavily on `onFocusOutside` for submenus to close when switching\n             * between separate submenus.\n             */\n            event.currentTarget.focus();\n            if (!context.open) context.onOpenChange(true);\n          }}\n          onPointerMove={composeEventHandlers(\n            props.onPointerMove,\n            whenMouse((event) => {\n              contentContext.onItemEnter(event);\n              if (event.defaultPrevented) return;\n              if (!props.disabled && !context.open && !openTimerRef.current) {\n                contentContext.onPointerGraceIntentChange(null);\n                openTimerRef.current = window.setTimeout(() => {\n                  context.onOpenChange(true);\n                  clearOpenTimer();\n                }, 100);\n              }\n            })\n          )}\n          onPointerLeave={composeEventHandlers(\n            props.onPointerLeave,\n            whenMouse((event) => {\n              clearOpenTimer();\n\n              const contentRect = context.content?.getBoundingClientRect();\n              if (contentRect) {\n                // TODO: make sure to update this when we change positioning logic\n                const side = context.content?.dataset.side as Side;\n                const rightSide = side === 'right';\n                const bleed = rightSide ? -5 : +5;\n                const contentNearEdge = contentRect[rightSide ? 'left' : 'right'];\n                const contentFarEdge = contentRect[rightSide ? 'right' : 'left'];\n\n                contentContext.onPointerGraceIntentChange({\n                  area: [\n                    // Apply a bleed on clientX to ensure that our exit point is\n                    // consistently within polygon bounds\n                    { x: event.clientX + bleed, y: event.clientY },\n                    { x: contentNearEdge, y: contentRect.top },\n                    { x: contentFarEdge, y: contentRect.top },\n                    { x: contentFarEdge, y: contentRect.bottom },\n                    { x: contentNearEdge, y: contentRect.bottom },\n                  ],\n                  side,\n                });\n\n                window.clearTimeout(pointerGraceTimerRef.current);\n                pointerGraceTimerRef.current = window.setTimeout(\n                  () => contentContext.onPointerGraceIntentChange(null),\n                  300\n                );\n              } else {\n                contentContext.onTriggerLeave(event);\n                if (event.defaultPrevented) return;\n\n                // There's 100ms where the user may leave an item before the submenu was opened.\n                contentContext.onPointerGraceIntentChange(null);\n              }\n            })\n          )}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            const isTypingAhead = contentContext.searchRef.current !== '';\n            if (props.disabled || (isTypingAhead && event.key === ' ')) return;\n            if (SUB_OPEN_KEYS[rootContext.dir].includes(event.key)) {\n              context.onOpenChange(true);\n              // The trigger may hold focus if opened via pointer interaction\n              // so we ensure content is given focus again when switching to keyboard.\n              context.content?.focus();\n              // prevent window from scrolling\n              event.preventDefault();\n            }\n          })}\n        />\n      </MenuAnchor>\n    );\n  }\n);\n\nMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_CONTENT_NAME = 'MenuSubContent';\n\ntype MenuSubContentElement = MenuContentImplElement;\ninterface MenuSubContentProps\n  extends Omit<\n    MenuContentImplProps,\n    keyof MenuContentImplPrivateProps | 'onCloseAutoFocus' | 'onEntryFocus' | 'side' | 'align'\n  > {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuSubContent = React.forwardRef<MenuSubContentElement, MenuSubContentProps>(\n  (props: ScopedProps<MenuSubContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeMenu);\n    const { forceMount = portalContext.forceMount, ...subContentProps } = props;\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, props.__scopeMenu);\n    const subContext = useMenuSubContext(SUB_CONTENT_NAME, props.__scopeMenu);\n    const ref = React.useRef<MenuSubContentElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    return (\n      <Collection.Provider scope={props.__scopeMenu}>\n        <Presence present={forceMount || context.open}>\n          <Collection.Slot scope={props.__scopeMenu}>\n            <MenuContentImpl\n              id={subContext.contentId}\n              aria-labelledby={subContext.triggerId}\n              {...subContentProps}\n              ref={composedRefs}\n              align=\"start\"\n              side={rootContext.dir === 'rtl' ? 'left' : 'right'}\n              disableOutsidePointerEvents={false}\n              disableOutsideScroll={false}\n              trapFocus={false}\n              onOpenAutoFocus={(event) => {\n                // when opening a submenu, focus content for keyboard users only\n                if (rootContext.isUsingKeyboardRef.current) ref.current?.focus();\n                event.preventDefault();\n              }}\n              // The menu might close because of focusing another menu item in the parent menu. We\n              // don't want it to refocus the trigger in that case so we handle trigger focus ourselves.\n              onCloseAutoFocus={(event) => event.preventDefault()}\n              onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) => {\n                // We prevent closing when the trigger is focused to avoid triggering a re-open animation\n                // on pointer interaction.\n                if (event.target !== subContext.trigger) context.onOpenChange(false);\n              })}\n              onEscapeKeyDown={composeEventHandlers(props.onEscapeKeyDown, (event) => {\n                rootContext.onClose();\n                // ensure pressing escape in submenu doesn't escape full screen mode\n                event.preventDefault();\n              })}\n              onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n                // Submenu key events bubble through portals. We only care about keys in this menu.\n                const isKeyDownInside = event.currentTarget.contains(event.target as HTMLElement);\n                const isCloseKey = SUB_CLOSE_KEYS[rootContext.dir].includes(event.key);\n                if (isKeyDownInside && isCloseKey) {\n                  context.onOpenChange(false);\n                  // We focus manually because we prevented it in `onCloseAutoFocus`\n                  subContext.trigger?.focus();\n                  // prevent window from scrolling\n                  event.preventDefault();\n                }\n              })}\n            />\n          </Collection.Slot>\n        </Presence>\n      </Collection.Provider>\n    );\n  }\n);\n\nMenuSubContent.displayName = SUB_CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getOpenState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nfunction isIndeterminate(checked?: CheckedState): checked is 'indeterminate' {\n  return checked === 'indeterminate';\n}\n\nfunction getCheckedState(checked: CheckedState) {\n  return isIndeterminate(checked) ? 'indeterminate' : checked ? 'checked' : 'unchecked';\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus();\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\n/**\n * This is the \"meat\" of the typeahead matching logic. It takes in all the values,\n * the search and the current match, and returns the next match (or `undefined`).\n *\n * We normalize the search because if a user has repeatedly pressed a character,\n * we want the exact same behavior as if we only had that one character\n * (ie. cycle through options starting with that character)\n *\n * We also reorder the values by wrapping the array around the current match.\n * This is so we always look forward from the current match, and picking the first\n * match will always be the correct one.\n *\n * Finally, if the normalized search is exactly one character, we exclude the\n * current match from the values because otherwise it would be the first to match always\n * and focus would never move. This is as opposed to the regular case, where we\n * don't want focus to move if the current match still matches.\n */\nfunction getNextMatch(values: string[], search: string, currentMatch?: string) {\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0] : search;\n  const currentMatchIndex = currentMatch ? values.indexOf(currentMatch) : -1;\n  let wrappedValues = wrapArray(values, Math.max(currentMatchIndex, 0));\n  const excludeCurrentMatch = normalizedSearch.length === 1;\n  if (excludeCurrentMatch) wrappedValues = wrappedValues.filter((v) => v !== currentMatch);\n  const nextMatch = wrappedValues.find((value) =>\n    value.toLowerCase().startsWith(normalizedSearch.toLowerCase())\n  );\n  return nextMatch !== currentMatch ? nextMatch : undefined;\n}\n\ntype Point = { x: number; y: number };\ntype Polygon = Point[];\ntype Side = 'left' | 'right';\ntype GraceIntent = { area: Polygon; side: Side };\n\n// Determine if a point is inside of a polygon.\n// Based on https://github.com/substack/point-in-polygon\nfunction isPointInPolygon(point: Point, polygon: Polygon) {\n  const { x, y } = point;\n  let inside = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y;\n\n    // prettier-ignore\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) inside = !inside;\n  }\n\n  return inside;\n}\n\nfunction isPointerInGraceArea(event: React.PointerEvent, area?: Polygon) {\n  if (!area) return false;\n  const cursorPos = { x: event.clientX, y: event.clientY };\n  return isPointInPolygon(cursorPos, area);\n}\n\nfunction whenMouse<E>(handler: React.PointerEventHandler<E>): React.PointerEventHandler<E> {\n  return (event) => (event.pointerType === 'mouse' ? handler(event) : undefined);\n}\n\nconst Root = Menu;\nconst Anchor = MenuAnchor;\nconst Portal = MenuPortal;\nconst Content = MenuContent;\nconst Group = MenuGroup;\nconst Label = MenuLabel;\nconst Item = MenuItem;\nconst CheckboxItem = MenuCheckboxItem;\nconst RadioGroup = MenuRadioGroup;\nconst RadioItem = MenuRadioItem;\nconst ItemIndicator = MenuItemIndicator;\nconst Separator = MenuSeparator;\nconst Arrow = MenuArrow;\nconst Sub = MenuSub;\nconst SubTrigger = MenuSubTrigger;\nconst SubContent = MenuSubContent;\n\nexport {\n  createMenuScope,\n  //\n  Menu,\n  MenuAnchor,\n  MenuPortal,\n  MenuContent,\n  MenuGroup,\n  MenuLabel,\n  MenuItem,\n  MenuCheckboxItem,\n  MenuRadioGroup,\n  MenuRadioItem,\n  MenuItemIndicator,\n  MenuSeparator,\n  MenuArrow,\n  MenuSub,\n  MenuSubTrigger,\n  MenuSubContent,\n  //\n  Root,\n  Anchor,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n};\nexport type {\n  MenuProps,\n  MenuAnchorProps,\n  MenuPortalProps,\n  MenuContentProps,\n  MenuGroupProps,\n  MenuLabelProps,\n  MenuItemProps,\n  MenuCheckboxItemProps,\n  MenuRadioGroupProps,\n  MenuRadioItemProps,\n  MenuItemIndicatorProps,\n  MenuSeparatorProps,\n  MenuArrowProps,\n  MenuSubProps,\n  MenuSubTriggerProps,\n  MenuSubContentProps,\n};\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as MenuPrimitive from '@radix-ui/react-menu';\nimport { createMenuScope } from '@radix-ui/react-menu';\nimport { useId } from '@radix-ui/react-id';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenu\n * -----------------------------------------------------------------------------------------------*/\n\nconst DROPDOWN_MENU_NAME = 'DropdownMenu';\n\ntype ScopedProps<P> = P & { __scopeDropdownMenu?: Scope };\nconst [createDropdownMenuContext, createDropdownMenuScope] = createContextScope(\n  DROPDOWN_MENU_NAME,\n  [createMenuScope]\n);\nconst useMenuScope = createMenuScope();\n\ntype DropdownMenuContextValue = {\n  triggerId: string;\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\nconst [DropdownMenuProvider, useDropdownMenuContext] =\n  createDropdownMenuContext<DropdownMenuContextValue>(DROPDOWN_MENU_NAME);\n\ninterface DropdownMenuProps {\n  children?: React.ReactNode;\n  dir?: Direction;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n}\n\nconst DropdownMenu: React.FC<DropdownMenuProps> = (props: ScopedProps<DropdownMenuProps>) => {\n  const {\n    __scopeDropdownMenu,\n    children,\n    dir,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true,\n  } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <DropdownMenuProvider\n      scope={__scopeDropdownMenu}\n      triggerId={useId()}\n      triggerRef={triggerRef}\n      contentId={useId()}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      modal={modal}\n    >\n      <MenuPrimitive.Root {...menuScope} open={open} onOpenChange={setOpen} dir={dir} modal={modal}>\n        {children}\n      </MenuPrimitive.Root>\n    </DropdownMenuProvider>\n  );\n};\n\nDropdownMenu.displayName = DROPDOWN_MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DropdownMenuTrigger';\n\ntype DropdownMenuTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DropdownMenuTriggerProps extends PrimitiveButtonProps {}\n\nconst DropdownMenuTrigger = React.forwardRef<DropdownMenuTriggerElement, DropdownMenuTriggerProps>(\n  (props: ScopedProps<DropdownMenuTriggerProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, disabled = false, ...triggerProps } = props;\n    const context = useDropdownMenuContext(TRIGGER_NAME, __scopeDropdownMenu);\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return (\n      <MenuPrimitive.Anchor asChild {...menuScope}>\n        <Primitive.button\n          type=\"button\"\n          id={context.triggerId}\n          aria-haspopup=\"menu\"\n          aria-expanded={context.open}\n          aria-controls={context.open ? context.contentId : undefined}\n          data-state={context.open ? 'open' : 'closed'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          {...triggerProps}\n          ref={composeRefs(forwardedRef, context.triggerRef)}\n          onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              context.onOpenToggle();\n              // prevent trigger focusing when opening\n              // this allows the content to be given focus without competition\n              if (!context.open) event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (disabled) return;\n            if (['Enter', ' '].includes(event.key)) context.onOpenToggle();\n            if (event.key === 'ArrowDown') context.onOpenChange(true);\n            // prevent keydown from scrolling window / first focused item to execute\n            // that keydown (inadvertently closing the menu)\n            if (['Enter', ' ', 'ArrowDown'].includes(event.key)) event.preventDefault();\n          })}\n        />\n      </MenuPrimitive.Anchor>\n    );\n  }\n);\n\nDropdownMenuTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DropdownMenuPortal';\n\ntype MenuPortalProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Portal>;\ninterface DropdownMenuPortalProps extends MenuPortalProps {}\n\nconst DropdownMenuPortal: React.FC<DropdownMenuPortalProps> = (\n  props: ScopedProps<DropdownMenuPortalProps>\n) => {\n  const { __scopeDropdownMenu, ...portalProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.Portal {...menuScope} {...portalProps} />;\n};\n\nDropdownMenuPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DropdownMenuContent';\n\ntype DropdownMenuContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuContentProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Content>;\ninterface DropdownMenuContentProps extends Omit<MenuContentProps, 'onEntryFocus'> {}\n\nconst DropdownMenuContent = React.forwardRef<DropdownMenuContentElement, DropdownMenuContentProps>(\n  (props: ScopedProps<DropdownMenuContentProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...contentProps } = props;\n    const context = useDropdownMenuContext(CONTENT_NAME, __scopeDropdownMenu);\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    const hasInteractedOutsideRef = React.useRef(false);\n\n    return (\n      <MenuPrimitive.Content\n        id={context.contentId}\n        aria-labelledby={context.triggerId}\n        {...menuScope}\n        {...contentProps}\n        ref={forwardedRef}\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n          hasInteractedOutsideRef.current = false;\n          // Always prevent auto focus because we either focus manually or want user agent focus\n          event.preventDefault();\n        })}\n        onInteractOutside={composeEventHandlers(props.onInteractOutside, (event) => {\n          const originalEvent = event.detail.originalEvent as PointerEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n          if (!context.modal || isRightClick) hasInteractedOutsideRef.current = true;\n        })}\n        style={{\n          ...props.style,\n          // re-namespace exposed content custom properties\n          ...{\n            '--radix-dropdown-menu-content-transform-origin':\n              'var(--radix-popper-transform-origin)',\n            '--radix-dropdown-menu-content-available-width': 'var(--radix-popper-available-width)',\n            '--radix-dropdown-menu-content-available-height':\n              'var(--radix-popper-available-height)',\n            '--radix-dropdown-menu-trigger-width': 'var(--radix-popper-anchor-width)',\n            '--radix-dropdown-menu-trigger-height': 'var(--radix-popper-anchor-height)',\n          },\n        }}\n      />\n    );\n  }\n);\n\nDropdownMenuContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'DropdownMenuGroup';\n\ntype DropdownMenuGroupElement = React.ElementRef<typeof MenuPrimitive.Group>;\ntype MenuGroupProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Group>;\ninterface DropdownMenuGroupProps extends MenuGroupProps {}\n\nconst DropdownMenuGroup = React.forwardRef<DropdownMenuGroupElement, DropdownMenuGroupProps>(\n  (props: ScopedProps<DropdownMenuGroupProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...groupProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Group {...menuScope} {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'DropdownMenuLabel';\n\ntype DropdownMenuLabelElement = React.ElementRef<typeof MenuPrimitive.Label>;\ntype MenuLabelProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Label>;\ninterface DropdownMenuLabelProps extends MenuLabelProps {}\n\nconst DropdownMenuLabel = React.forwardRef<DropdownMenuLabelElement, DropdownMenuLabelProps>(\n  (props: ScopedProps<DropdownMenuLabelProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...labelProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Label {...menuScope} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'DropdownMenuItem';\n\ntype DropdownMenuItemElement = React.ElementRef<typeof MenuPrimitive.Item>;\ntype MenuItemProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Item>;\ninterface DropdownMenuItemProps extends MenuItemProps {}\n\nconst DropdownMenuItem = React.forwardRef<DropdownMenuItemElement, DropdownMenuItemProps>(\n  (props: ScopedProps<DropdownMenuItemProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...itemProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Item {...menuScope} {...itemProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'DropdownMenuCheckboxItem';\n\ntype DropdownMenuCheckboxItemElement = React.ElementRef<typeof MenuPrimitive.CheckboxItem>;\ntype MenuCheckboxItemProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.CheckboxItem>;\ninterface DropdownMenuCheckboxItemProps extends MenuCheckboxItemProps {}\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  DropdownMenuCheckboxItemElement,\n  DropdownMenuCheckboxItemProps\n>((props: ScopedProps<DropdownMenuCheckboxItemProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...checkboxItemProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.CheckboxItem {...menuScope} {...checkboxItemProps} ref={forwardedRef} />;\n});\n\nDropdownMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'DropdownMenuRadioGroup';\n\ntype DropdownMenuRadioGroupElement = React.ElementRef<typeof MenuPrimitive.RadioGroup>;\ntype MenuRadioGroupProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioGroup>;\ninterface DropdownMenuRadioGroupProps extends MenuRadioGroupProps {}\n\nconst DropdownMenuRadioGroup = React.forwardRef<\n  DropdownMenuRadioGroupElement,\n  DropdownMenuRadioGroupProps\n>((props: ScopedProps<DropdownMenuRadioGroupProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...radioGroupProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.RadioGroup {...menuScope} {...radioGroupProps} ref={forwardedRef} />;\n});\n\nDropdownMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'DropdownMenuRadioItem';\n\ntype DropdownMenuRadioItemElement = React.ElementRef<typeof MenuPrimitive.RadioItem>;\ntype MenuRadioItemProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioItem>;\ninterface DropdownMenuRadioItemProps extends MenuRadioItemProps {}\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  DropdownMenuRadioItemElement,\n  DropdownMenuRadioItemProps\n>((props: ScopedProps<DropdownMenuRadioItemProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...radioItemProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.RadioItem {...menuScope} {...radioItemProps} ref={forwardedRef} />;\n});\n\nDropdownMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'DropdownMenuItemIndicator';\n\ntype DropdownMenuItemIndicatorElement = React.ElementRef<typeof MenuPrimitive.ItemIndicator>;\ntype MenuItemIndicatorProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.ItemIndicator>;\ninterface DropdownMenuItemIndicatorProps extends MenuItemIndicatorProps {}\n\nconst DropdownMenuItemIndicator = React.forwardRef<\n  DropdownMenuItemIndicatorElement,\n  DropdownMenuItemIndicatorProps\n>((props: ScopedProps<DropdownMenuItemIndicatorProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...itemIndicatorProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.ItemIndicator {...menuScope} {...itemIndicatorProps} ref={forwardedRef} />;\n});\n\nDropdownMenuItemIndicator.displayName = INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'DropdownMenuSeparator';\n\ntype DropdownMenuSeparatorElement = React.ElementRef<typeof MenuPrimitive.Separator>;\ntype MenuSeparatorProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Separator>;\ninterface DropdownMenuSeparatorProps extends MenuSeparatorProps {}\n\nconst DropdownMenuSeparator = React.forwardRef<\n  DropdownMenuSeparatorElement,\n  DropdownMenuSeparatorProps\n>((props: ScopedProps<DropdownMenuSeparatorProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...separatorProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.Separator {...menuScope} {...separatorProps} ref={forwardedRef} />;\n});\n\nDropdownMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'DropdownMenuArrow';\n\ntype DropdownMenuArrowElement = React.ElementRef<typeof MenuPrimitive.Arrow>;\ntype MenuArrowProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Arrow>;\ninterface DropdownMenuArrowProps extends MenuArrowProps {}\n\nconst DropdownMenuArrow = React.forwardRef<DropdownMenuArrowElement, DropdownMenuArrowProps>(\n  (props: ScopedProps<DropdownMenuArrowProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...arrowProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Arrow {...menuScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSub\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DropdownMenuSubProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst DropdownMenuSub: React.FC<DropdownMenuSubProps> = (\n  props: ScopedProps<DropdownMenuSubProps>\n) => {\n  const { __scopeDropdownMenu, children, open: openProp, onOpenChange, defaultOpen } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <MenuPrimitive.Sub {...menuScope} open={open} onOpenChange={setOpen}>\n      {children}\n    </MenuPrimitive.Sub>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'DropdownMenuSubTrigger';\n\ntype DropdownMenuSubTriggerElement = React.ElementRef<typeof MenuPrimitive.SubTrigger>;\ntype MenuSubTriggerProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.SubTrigger>;\ninterface DropdownMenuSubTriggerProps extends MenuSubTriggerProps {}\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  DropdownMenuSubTriggerElement,\n  DropdownMenuSubTriggerProps\n>((props: ScopedProps<DropdownMenuSubTriggerProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...subTriggerProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.SubTrigger {...menuScope} {...subTriggerProps} ref={forwardedRef} />;\n});\n\nDropdownMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_CONTENT_NAME = 'DropdownMenuSubContent';\n\ntype DropdownMenuSubContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuSubContentProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.SubContent>;\ninterface DropdownMenuSubContentProps extends MenuSubContentProps {}\n\nconst DropdownMenuSubContent = React.forwardRef<\n  DropdownMenuSubContentElement,\n  DropdownMenuSubContentProps\n>((props: ScopedProps<DropdownMenuSubContentProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...subContentProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n\n  return (\n    <MenuPrimitive.SubContent\n      {...menuScope}\n      {...subContentProps}\n      ref={forwardedRef}\n      style={{\n        ...props.style,\n        // re-namespace exposed content custom properties\n        ...{\n          '--radix-dropdown-menu-content-transform-origin': 'var(--radix-popper-transform-origin)',\n          '--radix-dropdown-menu-content-available-width': 'var(--radix-popper-available-width)',\n          '--radix-dropdown-menu-content-available-height': 'var(--radix-popper-available-height)',\n          '--radix-dropdown-menu-trigger-width': 'var(--radix-popper-anchor-width)',\n          '--radix-dropdown-menu-trigger-height': 'var(--radix-popper-anchor-height)',\n        },\n      }}\n    />\n  );\n});\n\nDropdownMenuSubContent.displayName = SUB_CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = DropdownMenu;\nconst Trigger = DropdownMenuTrigger;\nconst Portal = DropdownMenuPortal;\nconst Content = DropdownMenuContent;\nconst Group = DropdownMenuGroup;\nconst Label = DropdownMenuLabel;\nconst Item = DropdownMenuItem;\nconst CheckboxItem = DropdownMenuCheckboxItem;\nconst RadioGroup = DropdownMenuRadioGroup;\nconst RadioItem = DropdownMenuRadioItem;\nconst ItemIndicator = DropdownMenuItemIndicator;\nconst Separator = DropdownMenuSeparator;\nconst Arrow = DropdownMenuArrow;\nconst Sub = DropdownMenuSub;\nconst SubTrigger = DropdownMenuSubTrigger;\nconst SubContent = DropdownMenuSubContent;\n\nexport {\n  createDropdownMenuScope,\n  //\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuPortal,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuItemIndicator,\n  DropdownMenuSeparator,\n  DropdownMenuArrow,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n};\nexport type {\n  DropdownMenuProps,\n  DropdownMenuTriggerProps,\n  DropdownMenuPortalProps,\n  DropdownMenuContentProps,\n  DropdownMenuGroupProps,\n  DropdownMenuLabelProps,\n  DropdownMenuItemProps,\n  DropdownMenuCheckboxItemProps,\n  DropdownMenuRadioGroupProps,\n  DropdownMenuRadioItemProps,\n  DropdownMenuItemIndicatorProps,\n  DropdownMenuSeparatorProps,\n  DropdownMenuArrowProps,\n  DropdownMenuSubProps,\n  DropdownMenuSubTriggerProps,\n  DropdownMenuSubContentProps,\n};\n","import * as React from 'react';\n\n/** Number of components which have requested interest to have focus guards */\nlet count = 0;\n\nfunction FocusGuards(props: any) {\n  useFocusGuards();\n  return props.children;\n}\n\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\nfunction useFocusGuards() {\n  React.useEffect(() => {\n    const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n    document.body.insertAdjacentElement('afterbegin', edgeGuards[0] ?? createFocusGuard());\n    document.body.insertAdjacentElement('beforeend', edgeGuards[1] ?? createFocusGuard());\n    count++;\n\n    return () => {\n      if (count === 1) {\n        document.querySelectorAll('[data-radix-focus-guard]').forEach((node) => node.remove());\n      }\n      count--;\n    };\n  }, []);\n}\n\nfunction createFocusGuard() {\n  const element = document.createElement('span');\n  element.setAttribute('data-radix-focus-guard', '');\n  element.tabIndex = 0;\n  element.style.outline = 'none';\n  element.style.opacity = '0';\n  element.style.position = 'fixed';\n  element.style.pointerEvents = 'none';\n  return element;\n}\n\nconst Root = FocusGuards;\n\nexport {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n};\n","import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\nconst AUTOFOCUS_ON_MOUNT = 'focusScope.autoFocusOnMount';\nconst AUTOFOCUS_ON_UNMOUNT = 'focusScope.autoFocusOnUnmount';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\ntype FocusableTarget = HTMLElement | { focus(): void };\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope\n * -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_SCOPE_NAME = 'FocusScope';\n\ntype FocusScopeElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface FocusScopeProps extends PrimitiveDivProps {\n  /**\n   * When `true`, tabbing from last item will focus first tabbable\n   * and shift+tab from first item will focus last tababble.\n   * @defaultValue false\n   */\n  loop?: boolean;\n\n  /**\n   * When `true`, focus cannot escape the focus scope via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapped?: boolean;\n\n  /**\n   * Event handler called when auto-focusing on mount.\n   * Can be prevented.\n   */\n  onMountAutoFocus?: (event: Event) => void;\n\n  /**\n   * Event handler called when auto-focusing on unmount.\n   * Can be prevented.\n   */\n  onUnmountAutoFocus?: (event: Event) => void;\n}\n\nconst FocusScope = React.forwardRef<FocusScopeElement, FocusScopeProps>((props, forwardedRef) => {\n  const {\n    loop = false,\n    trapped = false,\n    onMountAutoFocus: onMountAutoFocusProp,\n    onUnmountAutoFocus: onUnmountAutoFocusProp,\n    ...scopeProps\n  } = props;\n  const [container, setContainer] = React.useState<HTMLElement | null>(null);\n  const onMountAutoFocus = useCallbackRef(onMountAutoFocusProp);\n  const onUnmountAutoFocus = useCallbackRef(onUnmountAutoFocusProp);\n  const lastFocusedElementRef = React.useRef<HTMLElement | null>(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContainer(node));\n\n  const focusScope = React.useRef({\n    paused: false,\n    pause() {\n      this.paused = true;\n    },\n    resume() {\n      this.paused = false;\n    },\n  }).current;\n\n  // Takes care of trapping focus if focus is moved outside programmatically for example\n  React.useEffect(() => {\n    if (trapped) {\n      function handleFocusIn(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        const target = event.target as HTMLElement | null;\n        if (container.contains(target)) {\n          lastFocusedElementRef.current = target;\n        } else {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      function handleFocusOut(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        const relatedTarget = event.relatedTarget as HTMLElement | null;\n\n        // A `focusout` event with a `null` `relatedTarget` will happen in at least two cases:\n        //\n        // 1. When the user switches app/tabs/windows/the browser itself loses focus.\n        // 2. In Google Chrome, when the focused element is removed from the DOM.\n        //\n        // We let the browser do its thing here because:\n        //\n        // 1. The browser already keeps a memory of what's focused for when the page gets refocused.\n        // 2. In Google Chrome, if we try to focus the deleted focused element (as per below), it\n        //    throws the CPU to 100%, so we avoid doing anything for this reason here too.\n        if (relatedTarget === null) return;\n\n        // If the focus has moved to an actual legitimate element (`relatedTarget !== null`)\n        // that is outside the container, we move focus to the last valid focused element inside.\n        if (!container.contains(relatedTarget)) {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      // When the focused element gets removed from the DOM, browsers move focus\n      // back to the document.body. In this case, we move focus to the container\n      // to keep focus trapped correctly.\n      function handleMutations(mutations: MutationRecord[]) {\n        const focusedElement = document.activeElement as HTMLElement | null;\n        if (focusedElement !== document.body) return;\n        for (const mutation of mutations) {\n          if (mutation.removedNodes.length > 0) focus(container);\n        }\n      }\n\n      document.addEventListener('focusin', handleFocusIn);\n      document.addEventListener('focusout', handleFocusOut);\n      const mutationObserver = new MutationObserver(handleMutations);\n      if (container) mutationObserver.observe(container, { childList: true, subtree: true });\n\n      return () => {\n        document.removeEventListener('focusin', handleFocusIn);\n        document.removeEventListener('focusout', handleFocusOut);\n        mutationObserver.disconnect();\n      };\n    }\n  }, [trapped, container, focusScope.paused]);\n\n  React.useEffect(() => {\n    if (container) {\n      focusScopesStack.add(focusScope);\n      const previouslyFocusedElement = document.activeElement as HTMLElement | null;\n      const hasFocusedCandidate = container.contains(previouslyFocusedElement);\n\n      if (!hasFocusedCandidate) {\n        const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS);\n        container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n        container.dispatchEvent(mountEvent);\n        if (!mountEvent.defaultPrevented) {\n          focusFirst(removeLinks(getTabbableCandidates(container)), { select: true });\n          if (document.activeElement === previouslyFocusedElement) {\n            focus(container);\n          }\n        }\n      }\n\n      return () => {\n        container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n\n        // We hit a react bug (fixed in v17) with focusing in unmount.\n        // We need to delay the focus a little to get around it for now.\n        // See: https://github.com/facebook/react/issues/17894\n        setTimeout(() => {\n          const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS);\n          container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n          container.dispatchEvent(unmountEvent);\n          if (!unmountEvent.defaultPrevented) {\n            focus(previouslyFocusedElement ?? document.body, { select: true });\n          }\n          // we need to remove the listener after we `dispatchEvent`\n          container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n\n          focusScopesStack.remove(focusScope);\n        }, 0);\n      };\n    }\n  }, [container, onMountAutoFocus, onUnmountAutoFocus, focusScope]);\n\n  // Takes care of looping focus (when tabbing whilst at the edges)\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (!loop && !trapped) return;\n      if (focusScope.paused) return;\n\n      const isTabKey = event.key === 'Tab' && !event.altKey && !event.ctrlKey && !event.metaKey;\n      const focusedElement = document.activeElement as HTMLElement | null;\n\n      if (isTabKey && focusedElement) {\n        const container = event.currentTarget as HTMLElement;\n        const [first, last] = getTabbableEdges(container);\n        const hasTabbableElementsInside = first && last;\n\n        // we can only wrap focus if we have tabbable edges\n        if (!hasTabbableElementsInside) {\n          if (focusedElement === container) event.preventDefault();\n        } else {\n          if (!event.shiftKey && focusedElement === last) {\n            event.preventDefault();\n            if (loop) focus(first, { select: true });\n          } else if (event.shiftKey && focusedElement === first) {\n            event.preventDefault();\n            if (loop) focus(last, { select: true });\n          }\n        }\n      }\n    },\n    [loop, trapped, focusScope.paused]\n  );\n\n  return (\n    <Primitive.div tabIndex={-1} {...scopeProps} ref={composedRefs} onKeyDown={handleKeyDown} />\n  );\n});\n\nFocusScope.displayName = FOCUS_SCOPE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Attempts focusing the first element in a list of candidates.\n * Stops when focus has actually moved.\n */\nfunction focusFirst(candidates: HTMLElement[], { select = false } = {}) {\n  const previouslyFocusedElement = document.activeElement;\n  for (const candidate of candidates) {\n    focus(candidate, { select });\n    if (document.activeElement !== previouslyFocusedElement) return;\n  }\n}\n\n/**\n * Returns the first and last tabbable elements inside a container.\n */\nfunction getTabbableEdges(container: HTMLElement) {\n  const candidates = getTabbableCandidates(container);\n  const first = findVisible(candidates, container);\n  const last = findVisible(candidates.reverse(), container);\n  return [first, last] as const;\n}\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\n/**\n * Returns the first visible element in a list.\n * NOTE: Only checks visibility up to the `container`.\n */\nfunction findVisible(elements: HTMLElement[], container: HTMLElement) {\n  for (const element of elements) {\n    // we stop checking if it's hidden at the `container` level (excluding)\n    if (!isHidden(element, { upTo: container })) return element;\n  }\n}\n\nfunction isHidden(node: HTMLElement, { upTo }: { upTo?: HTMLElement }) {\n  if (getComputedStyle(node).visibility === 'hidden') return true;\n  while (node) {\n    // we stop at `upTo` (excluding it)\n    if (upTo !== undefined && node === upTo) return false;\n    if (getComputedStyle(node).display === 'none') return true;\n    node = node.parentElement as HTMLElement;\n  }\n  return false;\n}\n\nfunction isSelectableInput(element: any): element is FocusableTarget & { select: () => void } {\n  return element instanceof HTMLInputElement && 'select' in element;\n}\n\nfunction focus(element?: FocusableTarget | null, { select = false } = {}) {\n  // only focus if that element is focusable\n  if (element && element.focus) {\n    const previouslyFocusedElement = document.activeElement;\n    // NOTE: we prevent scrolling on focus, to minimize jarring transitions for users\n    element.focus({ preventScroll: true });\n    // only select if its not the same element, it supports selection and we need to select\n    if (element !== previouslyFocusedElement && isSelectableInput(element) && select)\n      element.select();\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope stack\n * -----------------------------------------------------------------------------------------------*/\n\ntype FocusScopeAPI = { paused: boolean; pause(): void; resume(): void };\nconst focusScopesStack = createFocusScopesStack();\n\nfunction createFocusScopesStack() {\n  /** A stack of focus scopes, with the active one at the top */\n  let stack: FocusScopeAPI[] = [];\n\n  return {\n    add(focusScope: FocusScopeAPI) {\n      // pause the currently active focus scope (at the top of the stack)\n      const activeFocusScope = stack[0];\n      if (focusScope !== activeFocusScope) {\n        activeFocusScope?.pause();\n      }\n      // remove in case it already exists (because we'll re-add it at the top of the stack)\n      stack = arrayRemove(stack, focusScope);\n      stack.unshift(focusScope);\n    },\n\n    remove(focusScope: FocusScopeAPI) {\n      stack = arrayRemove(stack, focusScope);\n      stack[0]?.resume();\n    },\n  };\n}\n\nfunction arrayRemove<T>(array: T[], item: T) {\n  const updatedArray = [...array];\n  const index = updatedArray.indexOf(item);\n  if (index !== -1) {\n    updatedArray.splice(index, 1);\n  }\n  return updatedArray;\n}\n\nfunction removeLinks(items: HTMLElement[]) {\n  return items.filter((item) => item.tagName !== 'A');\n}\n\nconst Root = FocusScope;\n\nexport {\n  FocusScope,\n  //\n  Root,\n};\nexport type { FocusScopeProps };\n","import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n// We `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\nconst useReactId = (React as any)['useId'.toString()] || (() => undefined);\nlet count = 0;\n\nfunction useId(deterministicId?: string): string {\n  const [id, setId] = React.useState<string | undefined>(useReactId());\n  // React versions older than 18 will have client-side ids only.\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\n\nexport { useId };\n","import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Label\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Label';\n\ntype LabelElement = React.ElementRef<typeof Primitive.label>;\ntype PrimitiveLabelProps = React.ComponentPropsWithoutRef<typeof Primitive.label>;\ninterface LabelProps extends PrimitiveLabelProps {}\n\nconst Label = React.forwardRef<LabelElement, LabelProps>((props, forwardedRef) => {\n  return (\n    <Primitive.label\n      {...props}\n      ref={forwardedRef}\n      onMouseDown={(event) => {\n        // only prevent text selection if clicking inside the label itself\n        const target = event.target as HTMLElement;\n        if (target.closest('button, input, select, textarea')) return;\n\n        props.onMouseDown?.(event);\n        // prevent text selection when double clicking label\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }}\n    />\n  );\n});\n\nLabel.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Label;\n\nexport {\n  Label,\n  //\n  Root,\n};\nexport type { LabelProps };\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Slot } from '@radix-ui/react-slot';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Popover\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPOVER_NAME = 'Popover';\n\ntype ScopedProps<P> = P & { __scopePopover?: Scope };\nconst [createPopoverContext, createPopoverScope] = createContextScope(POPOVER_NAME, [\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\ntype PopoverContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  hasCustomAnchor: boolean;\n  onCustomAnchorAdd(): void;\n  onCustomAnchorRemove(): void;\n  modal: boolean;\n};\n\nconst [PopoverProvider, usePopoverContext] =\n  createPopoverContext<PopoverContextValue>(POPOVER_NAME);\n\ninterface PopoverProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  modal?: boolean;\n}\n\nconst Popover: React.FC<PopoverProps> = (props: ScopedProps<PopoverProps>) => {\n  const {\n    __scopePopover,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = false,\n  } = props;\n  const popperScope = usePopperScope(__scopePopover);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const [hasCustomAnchor, setHasCustomAnchor] = React.useState(false);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <PopoverProvider\n        scope={__scopePopover}\n        contentId={useId()}\n        triggerRef={triggerRef}\n        open={open}\n        onOpenChange={setOpen}\n        onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n        hasCustomAnchor={hasCustomAnchor}\n        onCustomAnchorAdd={React.useCallback(() => setHasCustomAnchor(true), [])}\n        onCustomAnchorRemove={React.useCallback(() => setHasCustomAnchor(false), [])}\n        modal={modal}\n      >\n        {children}\n      </PopoverProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nPopover.displayName = POPOVER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopoverAnchor';\n\ntype PopoverAnchorElement = React.ElementRef<typeof PopperPrimitive.Anchor>;\ntype PopperAnchorProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Anchor>;\ninterface PopoverAnchorProps extends PopperAnchorProps {}\n\nconst PopoverAnchor = React.forwardRef<PopoverAnchorElement, PopoverAnchorProps>(\n  (props: ScopedProps<PopoverAnchorProps>, forwardedRef) => {\n    const { __scopePopover, ...anchorProps } = props;\n    const context = usePopoverContext(ANCHOR_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const { onCustomAnchorAdd, onCustomAnchorRemove } = context;\n\n    React.useEffect(() => {\n      onCustomAnchorAdd();\n      return () => onCustomAnchorRemove();\n    }, [onCustomAnchorAdd, onCustomAnchorRemove]);\n\n    return <PopperPrimitive.Anchor {...popperScope} {...anchorProps} ref={forwardedRef} />;\n  }\n);\n\nPopoverAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'PopoverTrigger';\n\ntype PopoverTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface PopoverTriggerProps extends PrimitiveButtonProps {}\n\nconst PopoverTrigger = React.forwardRef<PopoverTriggerElement, PopoverTriggerProps>(\n  (props: ScopedProps<PopoverTriggerProps>, forwardedRef) => {\n    const { __scopePopover, ...triggerProps } = props;\n    const context = usePopoverContext(TRIGGER_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n\n    const trigger = (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n\n    return context.hasCustomAnchor ? (\n      trigger\n    ) : (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        {trigger}\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nPopoverTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'PopoverPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createPopoverContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface PopoverPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst PopoverPortal: React.FC<PopoverPortalProps> = (props: ScopedProps<PopoverPortalProps>) => {\n  const { __scopePopover, forceMount, children, container } = props;\n  const context = usePopoverContext(PORTAL_NAME, __scopePopover);\n  return (\n    <PortalProvider scope={__scopePopover} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nPopoverPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopoverContent';\n\ninterface PopoverContentProps extends PopoverContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst PopoverContent = React.forwardRef<PopoverContentTypeElement, PopoverContentProps>(\n  (props: ScopedProps<PopoverContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopePopover);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <PopoverContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <PopoverContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nPopoverContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PopoverContentTypeElement = PopoverContentImplElement;\ninterface PopoverContentTypeProps\n  extends Omit<PopoverContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {}\n\nconst PopoverContentModal = React.forwardRef<PopoverContentTypeElement, PopoverContentTypeProps>(\n  (props: ScopedProps<PopoverContentTypeProps>, forwardedRef) => {\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n    const isRightClickOutsideRef = React.useRef(false);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <RemoveScroll as={Slot} allowPinchZoom>\n        <PopoverContentImpl\n          {...props}\n          ref={composedRefs}\n          // we make sure we're not trapping once it's been closed\n          // (closed !== unmounted when animating out)\n          trapFocus={context.open}\n          disableOutsidePointerEvents\n          onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n            event.preventDefault();\n            if (!isRightClickOutsideRef.current) context.triggerRef.current?.focus();\n          })}\n          onPointerDownOutside={composeEventHandlers(\n            props.onPointerDownOutside,\n            (event) => {\n              const originalEvent = event.detail.originalEvent;\n              const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n              const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n              isRightClickOutsideRef.current = isRightClick;\n            },\n            { checkForDefaultPrevented: false }\n          )}\n          // When focus is trapped, a `focusout` event may still happen.\n          // We make sure we don't trigger our `onDismiss` in such case.\n          onFocusOutside={composeEventHandlers(\n            props.onFocusOutside,\n            (event) => event.preventDefault(),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </RemoveScroll>\n    );\n  }\n);\n\nconst PopoverContentNonModal = React.forwardRef<PopoverContentTypeElement, PopoverContentTypeProps>(\n  (props: ScopedProps<PopoverContentTypeProps>, forwardedRef) => {\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n\n    return (\n      <PopoverContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === 'pointerdown') {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          const target = event.target as HTMLElement;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n\n          // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n          // we will get the pointer down outside event on the trigger, but then a subsequent\n          // focus outside event on the container, we ignore any focus outside event when we've\n          // already had a pointer down outside event.\n          if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PopoverContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype PopperContentProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface PopoverContentImplProps\n  extends Omit<PopperContentProps, 'onPlaced'>,\n    Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * Whether focus should be trapped within the `Popover`\n   * (default: false)\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst PopoverContentImpl = React.forwardRef<PopoverContentImplElement, PopoverContentImplProps>(\n  (props: ScopedProps<PopoverContentImplProps>, forwardedRef) => {\n    const {\n      __scopePopover,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      ...contentProps\n    } = props;\n    const context = usePopoverContext(CONTENT_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n\n    // Make sure the whole tree has focus guards as our `Popover` may be\n    // the last element in the DOM (because of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <FocusScope\n        asChild\n        loop\n        trapped={trapFocus}\n        onMountAutoFocus={onOpenAutoFocus}\n        onUnmountAutoFocus={onCloseAutoFocus}\n      >\n        <DismissableLayer\n          asChild\n          disableOutsidePointerEvents={disableOutsidePointerEvents}\n          onInteractOutside={onInteractOutside}\n          onEscapeKeyDown={onEscapeKeyDown}\n          onPointerDownOutside={onPointerDownOutside}\n          onFocusOutside={onFocusOutside}\n          onDismiss={() => context.onOpenChange(false)}\n        >\n          <PopperPrimitive.Content\n            data-state={getState(context.open)}\n            role=\"dialog\"\n            id={context.contentId}\n            {...popperScope}\n            {...contentProps}\n            ref={forwardedRef}\n            style={{\n              ...contentProps.style,\n              // re-namespace exposed content custom properties\n              ...{\n                '--radix-popover-content-transform-origin': 'var(--radix-popper-transform-origin)',\n                '--radix-popover-content-available-width': 'var(--radix-popper-available-width)',\n                '--radix-popover-content-available-height': 'var(--radix-popper-available-height)',\n                '--radix-popover-trigger-width': 'var(--radix-popper-anchor-width)',\n                '--radix-popover-trigger-height': 'var(--radix-popper-anchor-height)',\n              },\n            }}\n          />\n        </DismissableLayer>\n      </FocusScope>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'PopoverClose';\n\ntype PopoverCloseElement = React.ElementRef<typeof Primitive.button>;\ninterface PopoverCloseProps extends PrimitiveButtonProps {}\n\nconst PopoverClose = React.forwardRef<PopoverCloseElement, PopoverCloseProps>(\n  (props: ScopedProps<PopoverCloseProps>, forwardedRef) => {\n    const { __scopePopover, ...closeProps } = props;\n    const context = usePopoverContext(CLOSE_NAME, __scopePopover);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nPopoverClose.displayName = CLOSE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopoverArrow';\n\ntype PopoverArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface PopoverArrowProps extends PopperArrowProps {}\n\nconst PopoverArrow = React.forwardRef<PopoverArrowElement, PopoverArrowProps>(\n  (props: ScopedProps<PopoverArrowProps>, forwardedRef) => {\n    const { __scopePopover, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopePopover);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nPopoverArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst Root = Popover;\nconst Anchor = PopoverAnchor;\nconst Trigger = PopoverTrigger;\nconst Portal = PopoverPortal;\nconst Content = PopoverContent;\nconst Close = PopoverClose;\nconst Arrow = PopoverArrow;\n\nexport {\n  createPopoverScope,\n  //\n  Popover,\n  PopoverAnchor,\n  PopoverTrigger,\n  PopoverPortal,\n  PopoverContent,\n  PopoverClose,\n  PopoverArrow,\n  //\n  Root,\n  Anchor,\n  Trigger,\n  Portal,\n  Content,\n  Close,\n  Arrow,\n};\nexport type {\n  PopoverProps,\n  PopoverAnchorProps,\n  PopoverTriggerProps,\n  PopoverPortalProps,\n  PopoverContentProps,\n  PopoverCloseProps,\n  PopoverArrowProps,\n};\n","import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Arrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Arrow';\n\ntype ArrowElement = React.ElementRef<typeof Primitive.svg>;\ntype PrimitiveSvgProps = React.ComponentPropsWithoutRef<typeof Primitive.svg>;\ninterface ArrowProps extends PrimitiveSvgProps {}\n\nconst Arrow = React.forwardRef<ArrowElement, ArrowProps>((props, forwardedRef) => {\n  const { children, width = 10, height = 5, ...arrowProps } = props;\n  return (\n    <Primitive.svg\n      {...arrowProps}\n      ref={forwardedRef}\n      width={width}\n      height={height}\n      viewBox=\"0 0 30 10\"\n      preserveAspectRatio=\"none\"\n    >\n      {/* We use their children if they're slotting to replace the whole svg */}\n      {props.asChild ? children : <polygon points=\"0,0 30,0 15,10\" />}\n    </Primitive.svg>\n  );\n});\n\nArrow.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Arrow;\n\nexport {\n  Arrow,\n  //\n  Root,\n};\nexport type { ArrowProps };\n","import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    function Provider(\n      props: ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    ) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    }\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    Provider.displayName = rootComponentName + 'Provider';\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n","import * as React from 'react';\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  shift,\n  limitShift,\n  hide,\n  arrow as floatingUIarrow,\n  flip,\n  size,\n} from '@floating-ui/react-dom';\nimport * as ArrowPrimitive from '@radix-ui/react-arrow';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useSize } from '@radix-ui/react-use-size';\n\nimport type { Placement, Middleware } from '@floating-ui/react-dom';\nimport type { Scope } from '@radix-ui/react-context';\nimport type { Measurable } from '@radix-ui/rect';\n\nconst SIDE_OPTIONS = ['top', 'right', 'bottom', 'left'] as const;\nconst ALIGN_OPTIONS = ['start', 'center', 'end'] as const;\n\ntype Side = (typeof SIDE_OPTIONS)[number];\ntype Align = (typeof ALIGN_OPTIONS)[number];\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_NAME = 'Popper';\n\ntype ScopedProps<P> = P & { __scopePopper?: Scope };\nconst [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\n\ntype PopperContextValue = {\n  anchor: Measurable | null;\n  onAnchorChange(anchor: Measurable | null): void;\n};\nconst [PopperProvider, usePopperContext] = createPopperContext<PopperContextValue>(POPPER_NAME);\n\ninterface PopperProps {\n  children?: React.ReactNode;\n}\nconst Popper: React.FC<PopperProps> = (props: ScopedProps<PopperProps>) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState<Measurable | null>(null);\n  return (\n    <PopperProvider scope={__scopePopper} anchor={anchor} onAnchorChange={setAnchor}>\n      {children}\n    </PopperProvider>\n  );\n};\n\nPopper.displayName = POPPER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopperAnchor';\n\ntype PopperAnchorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PopperAnchorProps extends PrimitiveDivProps {\n  virtualRef?: React.RefObject<Measurable>;\n}\n\nconst PopperAnchor = React.forwardRef<PopperAnchorElement, PopperAnchorProps>(\n  (props: ScopedProps<PopperAnchorProps>, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef<PopperAnchorElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    React.useEffect(() => {\n      // Consumer can anchor the popper to something that isn't\n      // a DOM node e.g. pointer position, so we override the\n      // `anchorRef` with their virtual ref in this case.\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n\n    return virtualRef ? null : <Primitive.div {...anchorProps} ref={composedRefs} />;\n  }\n);\n\nPopperAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopperContent';\n\ntype PopperContentContextValue = {\n  placedSide: Side;\n  onArrowChange(arrow: HTMLSpanElement | null): void;\n  arrowX?: number;\n  arrowY?: number;\n  shouldHideArrow: boolean;\n};\n\nconst [PopperContentProvider, useContentContext] =\n  createPopperContext<PopperContentContextValue>(CONTENT_NAME);\n\ntype Boundary = Element | null;\n\ntype PopperContentElement = React.ElementRef<typeof Primitive.div>;\ninterface PopperContentProps extends PrimitiveDivProps {\n  side?: Side;\n  sideOffset?: number;\n  align?: Align;\n  alignOffset?: number;\n  arrowPadding?: number;\n  avoidCollisions?: boolean;\n  collisionBoundary?: Boundary | Boundary[];\n  collisionPadding?: number | Partial<Record<Side, number>>;\n  sticky?: 'partial' | 'always';\n  hideWhenDetached?: boolean;\n  updatePositionStrategy?: 'optimized' | 'always';\n  onPlaced?: () => void;\n}\n\nconst PopperContent = React.forwardRef<PopperContentElement, PopperContentProps>(\n  (props: ScopedProps<PopperContentProps>, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = 'bottom',\n      sideOffset = 0,\n      align = 'center',\n      alignOffset = 0,\n      arrowPadding = 0,\n      avoidCollisions = true,\n      collisionBoundary = [],\n      collisionPadding: collisionPaddingProp = 0,\n      sticky = 'partial',\n      hideWhenDetached = false,\n      updatePositionStrategy = 'optimized',\n      onPlaced,\n      ...contentProps\n    } = props;\n\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n\n    const [arrow, setArrow] = React.useState<HTMLSpanElement | null>(null);\n    const arrowSize = useSize(arrow);\n    const arrowWidth = arrowSize?.width ?? 0;\n    const arrowHeight = arrowSize?.height ?? 0;\n\n    const desiredPlacement = (side + (align !== 'center' ? '-' + align : '')) as Placement;\n\n    const collisionPadding =\n      typeof collisionPaddingProp === 'number'\n        ? collisionPaddingProp\n        : { top: 0, right: 0, bottom: 0, left: 0, ...collisionPaddingProp };\n\n    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];\n    const hasExplicitBoundaries = boundary.length > 0;\n\n    const detectOverflowOptions = {\n      padding: collisionPadding,\n      boundary: boundary.filter(isNotNull),\n      // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n      altBoundary: hasExplicitBoundaries,\n    };\n\n    const { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({\n      // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues\n      strategy: 'fixed',\n      placement: desiredPlacement,\n      whileElementsMounted: (...args) => {\n        const cleanup = autoUpdate(...args, {\n          animationFrame: updatePositionStrategy === 'always',\n        });\n        return cleanup;\n      },\n      elements: {\n        reference: context.anchor,\n      },\n      middleware: [\n        offset({ mainAxis: sideOffset + arrowHeight, alignmentAxis: alignOffset }),\n        avoidCollisions &&\n          shift({\n            mainAxis: true,\n            crossAxis: false,\n            limiter: sticky === 'partial' ? limitShift() : undefined,\n            ...detectOverflowOptions,\n          }),\n        avoidCollisions && flip({ ...detectOverflowOptions }),\n        size({\n          ...detectOverflowOptions,\n          apply: ({ elements, rects, availableWidth, availableHeight }) => {\n            const { width: anchorWidth, height: anchorHeight } = rects.reference;\n            const contentStyle = elements.floating.style;\n            contentStyle.setProperty('--radix-popper-available-width', `${availableWidth}px`);\n            contentStyle.setProperty('--radix-popper-available-height', `${availableHeight}px`);\n            contentStyle.setProperty('--radix-popper-anchor-width', `${anchorWidth}px`);\n            contentStyle.setProperty('--radix-popper-anchor-height', `${anchorHeight}px`);\n          },\n        }),\n        arrow && floatingUIarrow({ element: arrow, padding: arrowPadding }),\n        transformOrigin({ arrowWidth, arrowHeight }),\n        hideWhenDetached && hide({ strategy: 'referenceHidden', ...detectOverflowOptions }),\n      ],\n    });\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n\n    const handlePlaced = useCallbackRef(onPlaced);\n    useLayoutEffect(() => {\n      if (isPositioned) {\n        handlePlaced?.();\n      }\n    }, [isPositioned, handlePlaced]);\n\n    const arrowX = middlewareData.arrow?.x;\n    const arrowY = middlewareData.arrow?.y;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n\n    const [contentZIndex, setContentZIndex] = React.useState<string>();\n    useLayoutEffect(() => {\n      if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n    }, [content]);\n\n    return (\n      <div\n        ref={refs.setFloating}\n        data-radix-popper-content-wrapper=\"\"\n        style={{\n          ...floatingStyles,\n          transform: isPositioned ? floatingStyles.transform : 'translate(0, -200%)', // keep off the page when measuring\n          minWidth: 'max-content',\n          zIndex: contentZIndex,\n          ['--radix-popper-transform-origin' as any]: [\n            middlewareData.transformOrigin?.x,\n            middlewareData.transformOrigin?.y,\n          ].join(' '),\n\n          // hide the content if using the hide middleware and should be hidden\n          // set visibility to hidden and disable pointer events so the UI behaves\n          // as if the PopperContent isn't there at all\n          ...(middlewareData.hide?.referenceHidden && {\n            visibility: 'hidden',\n            pointerEvents: 'none',\n          }),\n        }}\n        // Floating UI interally calculates logical alignment based the `dir` attribute on\n        // the reference/floating node, we must add this attribute here to ensure\n        // this is calculated when portalled as well as inline.\n        dir={props.dir}\n      >\n        <PopperContentProvider\n          scope={__scopePopper}\n          placedSide={placedSide}\n          onArrowChange={setArrow}\n          arrowX={arrowX}\n          arrowY={arrowY}\n          shouldHideArrow={cannotCenterArrow}\n        >\n          <Primitive.div\n            data-side={placedSide}\n            data-align={placedAlign}\n            {...contentProps}\n            ref={composedRefs}\n            style={{\n              ...contentProps.style,\n              // if the PopperContent hasn't been placed yet (not all measurements done)\n              // we prevent animations so that users's animation don't kick in too early referring wrong sides\n              animation: !isPositioned ? 'none' : undefined,\n            }}\n          />\n        </PopperContentProvider>\n      </div>\n    );\n  }\n);\n\nPopperContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopperArrow';\n\nconst OPPOSITE_SIDE: Record<Side, Side> = {\n  top: 'bottom',\n  right: 'left',\n  bottom: 'top',\n  left: 'right',\n};\n\ntype PopperArrowElement = React.ElementRef<typeof ArrowPrimitive.Root>;\ntype ArrowProps = React.ComponentPropsWithoutRef<typeof ArrowPrimitive.Root>;\ninterface PopperArrowProps extends ArrowProps {}\n\nconst PopperArrow = React.forwardRef<PopperArrowElement, PopperArrowProps>(function PopperArrow(\n  props: ScopedProps<PopperArrowProps>,\n  forwardedRef\n) {\n  const { __scopePopper, ...arrowProps } = props;\n  const contentContext = useContentContext(ARROW_NAME, __scopePopper);\n  const baseSide = OPPOSITE_SIDE[contentContext.placedSide];\n\n  return (\n    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n    // doesn't report size as we'd expect on SVG elements.\n    // it reports their bounding box which is effectively the largest path inside the SVG.\n    <span\n      ref={contentContext.onArrowChange}\n      style={{\n        position: 'absolute',\n        left: contentContext.arrowX,\n        top: contentContext.arrowY,\n        [baseSide]: 0,\n        transformOrigin: {\n          top: '',\n          right: '0 0',\n          bottom: 'center 0',\n          left: '100% 0',\n        }[contentContext.placedSide],\n        transform: {\n          top: 'translateY(100%)',\n          right: 'translateY(50%) rotate(90deg) translateX(-50%)',\n          bottom: `rotate(180deg)`,\n          left: 'translateY(50%) rotate(-90deg) translateX(50%)',\n        }[contentContext.placedSide],\n        visibility: contentContext.shouldHideArrow ? 'hidden' : undefined,\n      }}\n    >\n      <ArrowPrimitive.Root\n        {...arrowProps}\n        ref={forwardedRef}\n        style={{\n          ...arrowProps.style,\n          // ensures the element can be measured correctly (mostly for if SVG)\n          display: 'block',\n        }}\n      />\n    </span>\n  );\n});\n\nPopperArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction isNotNull<T>(value: T | null): value is T {\n  return value !== null;\n}\n\nconst transformOrigin = (options: { arrowWidth: number; arrowHeight: number }): Middleware => ({\n  name: 'transformOrigin',\n  options,\n  fn(data) {\n    const { placement, rects, middlewareData } = data;\n\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const isArrowHidden = cannotCenterArrow;\n    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;\n    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const noArrowAlign = { start: '0%', center: '50%', end: '100%' }[placedAlign];\n\n    const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;\n    const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;\n\n    let x = '';\n    let y = '';\n\n    if (placedSide === 'bottom') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${-arrowHeight}px`;\n    } else if (placedSide === 'top') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${rects.floating.height + arrowHeight}px`;\n    } else if (placedSide === 'right') {\n      x = `${-arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    } else if (placedSide === 'left') {\n      x = `${rects.floating.width + arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    }\n    return { data: { x, y } };\n  },\n});\n\nfunction getSideAndAlignFromPlacement(placement: Placement) {\n  const [side, align = 'center'] = placement.split('-');\n  return [side as Side, align as Align] as const;\n}\n\nconst Root = Popper;\nconst Anchor = PopperAnchor;\nconst Content = PopperContent;\nconst Arrow = PopperArrow;\n\nexport {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n  //\n  SIDE_OPTIONS,\n  ALIGN_OPTIONS,\n};\nexport type { PopperProps, PopperAnchorProps, PopperContentProps, PopperArrowProps };\n","/// <reference types=\"resize-observer-browser\" />\n\nimport * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\nfunction useSize(element: HTMLElement | null) {\n  const [size, setSize] = React.useState<{ width: number; height: number } | undefined>(undefined);\n\n  useLayoutEffect(() => {\n    if (element) {\n      // provide size as early as possible\n      setSize({ width: element.offsetWidth, height: element.offsetHeight });\n\n      const resizeObserver = new ResizeObserver((entries) => {\n        if (!Array.isArray(entries)) {\n          return;\n        }\n\n        // Since we only observe the one element, we don't need to loop over the\n        // array\n        if (!entries.length) {\n          return;\n        }\n\n        const entry = entries[0];\n        let width: number;\n        let height: number;\n\n        if ('borderBoxSize' in entry) {\n          const borderSizeEntry = entry['borderBoxSize'];\n          // iron out differences between browsers\n          const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;\n          width = borderSize['inlineSize'];\n          height = borderSize['blockSize'];\n        } else {\n          // for browsers that don't support `borderBoxSize`\n          // we calculate it ourselves to get the correct border box.\n          width = element.offsetWidth;\n          height = element.offsetHeight;\n        }\n\n        setSize({ width, height });\n      });\n\n      resizeObserver.observe(element, { box: 'border-box' });\n\n      return () => resizeObserver.unobserve(element);\n    } else {\n      // We only want to reset to `undefined` when the element becomes `null`,\n      // not if it changes to another element.\n      setSize(undefined);\n    }\n  }, [element]);\n\n  return size;\n}\n\nexport { useSize };\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n/* -------------------------------------------------------------------------------------------------\n * Portal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'Portal';\n\ntype PortalElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PortalProps extends PrimitiveDivProps {\n  /**\n   * An optional container where the portaled content should be appended.\n   */\n  container?: Element | DocumentFragment | null;\n}\n\nconst Portal = React.forwardRef<PortalElement, PortalProps>((props, forwardedRef) => {\n  const { container: containerProp, ...portalProps } = props;\n  const [mounted, setMounted] = React.useState(false);\n  useLayoutEffect(() => setMounted(true), []);\n  const container = containerProp || (mounted && globalThis?.document?.body);\n  return container\n    ? ReactDOM.createPortal(<Primitive.div {...portalProps} ref={forwardedRef} />, container)\n    : null;\n});\n\nPortal.displayName = PORTAL_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Portal;\n\nexport {\n  Portal,\n  //\n  Root,\n};\nexport type { PortalProps };\n","import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useStateMachine } from './useStateMachine';\n\ninterface PresenceProps {\n  children: React.ReactElement | ((props: { present: boolean }) => React.ReactElement);\n  present: boolean;\n}\n\nconst Presence: React.FC<PresenceProps> = (props) => {\n  const { present, children } = props;\n  const presence = usePresence(present);\n\n  const child = (\n    typeof children === 'function'\n      ? children({ present: presence.isPresent })\n      : React.Children.only(children)\n  ) as React.ReactElement;\n\n  const ref = useComposedRefs(presence.ref, getElementRef(child));\n  const forceMount = typeof children === 'function';\n  return forceMount || presence.isPresent ? React.cloneElement(child, { ref }) : null;\n};\n\nPresence.displayName = 'Presence';\n\n/* -------------------------------------------------------------------------------------------------\n * usePresence\n * -----------------------------------------------------------------------------------------------*/\n\nfunction usePresence(present: boolean) {\n  const [node, setNode] = React.useState<HTMLElement>();\n  const stylesRef = React.useRef<CSSStyleDeclaration>({} as any);\n  const prevPresentRef = React.useRef(present);\n  const prevAnimationNameRef = React.useRef<string>('none');\n  const initialState = present ? 'mounted' : 'unmounted';\n  const [state, send] = useStateMachine(initialState, {\n    mounted: {\n      UNMOUNT: 'unmounted',\n      ANIMATION_OUT: 'unmountSuspended',\n    },\n    unmountSuspended: {\n      MOUNT: 'mounted',\n      ANIMATION_END: 'unmounted',\n    },\n    unmounted: {\n      MOUNT: 'mounted',\n    },\n  });\n\n  React.useEffect(() => {\n    const currentAnimationName = getAnimationName(stylesRef.current);\n    prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';\n  }, [state]);\n\n  useLayoutEffect(() => {\n    const styles = stylesRef.current;\n    const wasPresent = prevPresentRef.current;\n    const hasPresentChanged = wasPresent !== present;\n\n    if (hasPresentChanged) {\n      const prevAnimationName = prevAnimationNameRef.current;\n      const currentAnimationName = getAnimationName(styles);\n\n      if (present) {\n        send('MOUNT');\n      } else if (currentAnimationName === 'none' || styles?.display === 'none') {\n        // If there is no exit animation or the element is hidden, animations won't run\n        // so we unmount instantly\n        send('UNMOUNT');\n      } else {\n        /**\n         * When `present` changes to `false`, we check changes to animation-name to\n         * determine whether an animation has started. We chose this approach (reading\n         * computed styles) because there is no `animationrun` event and `animationstart`\n         * fires after `animation-delay` has expired which would be too late.\n         */\n        const isAnimating = prevAnimationName !== currentAnimationName;\n\n        if (wasPresent && isAnimating) {\n          send('ANIMATION_OUT');\n        } else {\n          send('UNMOUNT');\n        }\n      }\n\n      prevPresentRef.current = present;\n    }\n  }, [present, send]);\n\n  useLayoutEffect(() => {\n    if (node) {\n      let timeoutId: number;\n      const ownerWindow = node.ownerDocument.defaultView ?? window;\n      /**\n       * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`\n       * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we\n       * make sure we only trigger ANIMATION_END for the currently active animation.\n       */\n      const handleAnimationEnd = (event: AnimationEvent) => {\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n        if (event.target === node && isCurrentAnimation) {\n          // With React 18 concurrency this update is applied a frame after the\n          // animation ends, creating a flash of visible content. By setting the\n          // animation fill mode to \"forwards\", we force the node to keep the\n          // styles of the last keyframe, removing the flash.\n          //\n          // Previously we flushed the update via ReactDom.flushSync, but with\n          // exit animations this resulted in the node being removed from the\n          // DOM before the synthetic animationEnd event was dispatched, meaning\n          // user-provided event handlers would not be called.\n          // https://github.com/radix-ui/primitives/pull/1849\n          send('ANIMATION_END');\n          if (!prevPresentRef.current) {\n            const currentFillMode = node.style.animationFillMode;\n            node.style.animationFillMode = 'forwards';\n            // Reset the style after the node had time to unmount (for cases\n            // where the component chooses not to unmount). Doing this any\n            // sooner than `setTimeout` (e.g. with `requestAnimationFrame`)\n            // still causes a flash.\n            timeoutId = ownerWindow.setTimeout(() => {\n              if (node.style.animationFillMode === 'forwards') {\n                node.style.animationFillMode = currentFillMode;\n              }\n            });\n          }\n        }\n      };\n      const handleAnimationStart = (event: AnimationEvent) => {\n        if (event.target === node) {\n          // if animation occurred, store its name as the previous animation.\n          prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n        }\n      };\n      node.addEventListener('animationstart', handleAnimationStart);\n      node.addEventListener('animationcancel', handleAnimationEnd);\n      node.addEventListener('animationend', handleAnimationEnd);\n      return () => {\n        ownerWindow.clearTimeout(timeoutId);\n        node.removeEventListener('animationstart', handleAnimationStart);\n        node.removeEventListener('animationcancel', handleAnimationEnd);\n        node.removeEventListener('animationend', handleAnimationEnd);\n      };\n    } else {\n      // Transition to the unmounted state if the node is removed prematurely.\n      // We avoid doing so during cleanup as the node may change but still exist.\n      send('ANIMATION_END');\n    }\n  }, [node, send]);\n\n  return {\n    isPresent: ['mounted', 'unmountSuspended'].includes(state),\n    ref: React.useCallback((node: HTMLElement) => {\n      if (node) stylesRef.current = getComputedStyle(node);\n      setNode(node);\n    }, []),\n  };\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getAnimationName(styles?: CSSStyleDeclaration) {\n  return styles?.animationName || 'none';\n}\n\n// Before React 19 accessing `element.props.ref` will throw a warning and suggest using `element.ref`\n// After React 19 accessing `element.ref` does the opposite.\n// https://github.com/facebook/react/pull/28348\n//\n// Access the ref using the method that doesn't yield a warning.\nfunction getElementRef(element: React.ReactElement) {\n  // React <=18 in DEV\n  let getter = Object.getOwnPropertyDescriptor(element.props, 'ref')?.get;\n  let mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element as any).ref;\n  }\n\n  // React 19 in DEV\n  getter = Object.getOwnPropertyDescriptor(element, 'ref')?.get;\n  mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n\n  // Not DEV\n  return element.props.ref || (element as any).ref;\n}\n\nexport { Presence };\nexport type { PresenceProps };\n","import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// 🤯 https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'form',\n  'h2',\n  'h3',\n  'img',\n  'input',\n  'label',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\ntype Primitives = { [E in (typeof NODES)[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce((primitive, node) => {\n  const Node = React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp: any = asChild ? Slot : node;\n\n    if (typeof window !== 'undefined') {\n      (window as any)[Symbol.for('radix-ui')] = true;\n    }\n\n    return <Comp {...primitiveProps} ref={forwardedRef} />;\n  });\n\n  Node.displayName = `Primitive.${node}`;\n\n  return { ...primitive, [node]: Node };\n}, {} as Primitives);\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Flush custom event dispatch\n * https://github.com/radix-ui/primitives/pull/1378\n *\n * React batches *all* event handlers since version 18, this introduces certain considerations when using custom event types.\n *\n * Internally, React prioritises events in the following order:\n *  - discrete\n *  - continuous\n *  - default\n *\n * https://github.com/facebook/react/blob/a8a4742f1c54493df00da648a3f9d26e3db9c8b5/packages/react-dom/src/events/ReactDOMEventListener.js#L294-L350\n *\n * `discrete` is an  important distinction as updates within these events are applied immediately.\n * React however, is not able to infer the priority of custom event types due to how they are detected internally.\n * Because of this, it's possible for updates from custom events to be unexpectedly batched when\n * dispatched by another `discrete` event.\n *\n * In order to ensure that updates from custom events are applied predictably, we need to manually flush the batch.\n * This utility should be used when dispatching a custom event from within another `discrete` event, this utility\n * is not nessesary when dispatching known event types, or if dispatching a custom type inside a non-discrete event.\n * For example:\n *\n * dispatching a known click 👎\n * target.dispatchEvent(new Event(‘click’))\n *\n * dispatching a custom type within a non-discrete event 👎\n * onScroll={(event) => event.target.dispatchEvent(new CustomEvent(‘customType’))}\n *\n * dispatching a custom type within a `discrete` event 👍\n * onPointerDown={(event) => dispatchDiscreteCustomEvent(event.target, new CustomEvent(‘customType’))}\n *\n * Note: though React classifies `focus`, `focusin` and `focusout` events as `discrete`, it's  not recommended to use\n * this utility with them. This is because it's possible for those handlers to be called implicitly during render\n * e.g. when focus is within a component as it is unmounted, or when managing focus on mount.\n */\n\nfunction dispatchDiscreteCustomEvent<E extends CustomEvent>(target: E['target'], event: E) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n};\nexport type { PrimitivePropsWithRef };\n","import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    function Provider(\n      props: ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    ) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    }\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    Provider.displayName = rootComponentName + 'Provider';\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useDirection } from '@radix-ui/react-direction';\n\nimport type { Scope } from '@radix-ui/react-context';\n\nconst ENTRY_FOCUS = 'rovingFocusGroup.onEntryFocus';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'RovingFocusGroup';\n\ntype ItemData = { id: string; focusable: boolean; active: boolean };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  HTMLSpanElement,\n  ItemData\n>(GROUP_NAME);\n\ntype ScopedProps<P> = P & { __scopeRovingFocusGroup?: Scope };\nconst [createRovingFocusGroupContext, createRovingFocusGroupScope] = createContextScope(\n  GROUP_NAME,\n  [createCollectionScope]\n);\n\ntype Orientation = React.AriaAttributes['aria-orientation'];\ntype Direction = 'ltr' | 'rtl';\n\ninterface RovingFocusGroupOptions {\n  /**\n   * The orientation of the group.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   */\n  orientation?: Orientation;\n  /**\n   * The direction of navigation between items.\n   */\n  dir?: Direction;\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: boolean;\n}\n\ntype RovingContextValue = RovingFocusGroupOptions & {\n  currentTabStopId: string | null;\n  onItemFocus(tabStopId: string): void;\n  onItemShiftTab(): void;\n  onFocusableItemAdd(): void;\n  onFocusableItemRemove(): void;\n};\n\nconst [RovingFocusProvider, useRovingFocusContext] =\n  createRovingFocusGroupContext<RovingContextValue>(GROUP_NAME);\n\ntype RovingFocusGroupElement = RovingFocusGroupImplElement;\ninterface RovingFocusGroupProps extends RovingFocusGroupImplProps {}\n\nconst RovingFocusGroup = React.forwardRef<RovingFocusGroupElement, RovingFocusGroupProps>(\n  (props: ScopedProps<RovingFocusGroupProps>, forwardedRef) => {\n    return (\n      <Collection.Provider scope={props.__scopeRovingFocusGroup}>\n        <Collection.Slot scope={props.__scopeRovingFocusGroup}>\n          <RovingFocusGroupImpl {...props} ref={forwardedRef} />\n        </Collection.Slot>\n      </Collection.Provider>\n    );\n  }\n);\n\nRovingFocusGroup.displayName = GROUP_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype RovingFocusGroupImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface RovingFocusGroupImplProps\n  extends Omit<PrimitiveDivProps, 'dir'>,\n    RovingFocusGroupOptions {\n  currentTabStopId?: string | null;\n  defaultCurrentTabStopId?: string;\n  onCurrentTabStopIdChange?: (tabStopId: string | null) => void;\n  onEntryFocus?: (event: Event) => void;\n  preventScrollOnEntryFocus?: boolean;\n}\n\nconst RovingFocusGroupImpl = React.forwardRef<\n  RovingFocusGroupImplElement,\n  RovingFocusGroupImplProps\n>((props: ScopedProps<RovingFocusGroupImplProps>, forwardedRef) => {\n  const {\n    __scopeRovingFocusGroup,\n    orientation,\n    loop = false,\n    dir,\n    currentTabStopId: currentTabStopIdProp,\n    defaultCurrentTabStopId,\n    onCurrentTabStopIdChange,\n    onEntryFocus,\n    preventScrollOnEntryFocus = false,\n    ...groupProps\n  } = props;\n  const ref = React.useRef<RovingFocusGroupImplElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const direction = useDirection(dir);\n  const [currentTabStopId = null, setCurrentTabStopId] = useControllableState({\n    prop: currentTabStopIdProp,\n    defaultProp: defaultCurrentTabStopId,\n    onChange: onCurrentTabStopIdChange,\n  });\n  const [isTabbingBackOut, setIsTabbingBackOut] = React.useState(false);\n  const handleEntryFocus = useCallbackRef(onEntryFocus);\n  const getItems = useCollection(__scopeRovingFocusGroup);\n  const isClickFocusRef = React.useRef(false);\n  const [focusableItemsCount, setFocusableItemsCount] = React.useState(0);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      node.addEventListener(ENTRY_FOCUS, handleEntryFocus);\n      return () => node.removeEventListener(ENTRY_FOCUS, handleEntryFocus);\n    }\n  }, [handleEntryFocus]);\n\n  return (\n    <RovingFocusProvider\n      scope={__scopeRovingFocusGroup}\n      orientation={orientation}\n      dir={direction}\n      loop={loop}\n      currentTabStopId={currentTabStopId}\n      onItemFocus={React.useCallback(\n        (tabStopId) => setCurrentTabStopId(tabStopId),\n        [setCurrentTabStopId]\n      )}\n      onItemShiftTab={React.useCallback(() => setIsTabbingBackOut(true), [])}\n      onFocusableItemAdd={React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount + 1),\n        []\n      )}\n      onFocusableItemRemove={React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount - 1),\n        []\n      )}\n    >\n      <Primitive.div\n        tabIndex={isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0}\n        data-orientation={orientation}\n        {...groupProps}\n        ref={composedRefs}\n        style={{ outline: 'none', ...props.style }}\n        onMouseDown={composeEventHandlers(props.onMouseDown, () => {\n          isClickFocusRef.current = true;\n        })}\n        onFocus={composeEventHandlers(props.onFocus, (event) => {\n          // We normally wouldn't need this check, because we already check\n          // that the focus is on the current target and not bubbling to it.\n          // We do this because Safari doesn't focus buttons when clicked, and\n          // instead, the wrapper will get focused and not through a bubbling event.\n          const isKeyboardFocus = !isClickFocusRef.current;\n\n          if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {\n            const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS);\n            event.currentTarget.dispatchEvent(entryFocusEvent);\n\n            if (!entryFocusEvent.defaultPrevented) {\n              const items = getItems().filter((item) => item.focusable);\n              const activeItem = items.find((item) => item.active);\n              const currentItem = items.find((item) => item.id === currentTabStopId);\n              const candidateItems = [activeItem, currentItem, ...items].filter(\n                Boolean\n              ) as typeof items;\n              const candidateNodes = candidateItems.map((item) => item.ref.current!);\n              focusFirst(candidateNodes, preventScrollOnEntryFocus);\n            }\n          }\n\n          isClickFocusRef.current = false;\n        })}\n        onBlur={composeEventHandlers(props.onBlur, () => setIsTabbingBackOut(false))}\n      />\n    </RovingFocusProvider>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'RovingFocusGroupItem';\n\ntype RovingFocusItemElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface RovingFocusItemProps extends PrimitiveSpanProps {\n  tabStopId?: string;\n  focusable?: boolean;\n  active?: boolean;\n}\n\nconst RovingFocusGroupItem = React.forwardRef<RovingFocusItemElement, RovingFocusItemProps>(\n  (props: ScopedProps<RovingFocusItemProps>, forwardedRef) => {\n    const {\n      __scopeRovingFocusGroup,\n      focusable = true,\n      active = false,\n      tabStopId,\n      ...itemProps\n    } = props;\n    const autoId = useId();\n    const id = tabStopId || autoId;\n    const context = useRovingFocusContext(ITEM_NAME, __scopeRovingFocusGroup);\n    const isCurrentTabStop = context.currentTabStopId === id;\n    const getItems = useCollection(__scopeRovingFocusGroup);\n\n    const { onFocusableItemAdd, onFocusableItemRemove } = context;\n\n    React.useEffect(() => {\n      if (focusable) {\n        onFocusableItemAdd();\n        return () => onFocusableItemRemove();\n      }\n    }, [focusable, onFocusableItemAdd, onFocusableItemRemove]);\n\n    return (\n      <Collection.ItemSlot\n        scope={__scopeRovingFocusGroup}\n        id={id}\n        focusable={focusable}\n        active={active}\n      >\n        <Primitive.span\n          tabIndex={isCurrentTabStop ? 0 : -1}\n          data-orientation={context.orientation}\n          {...itemProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // We prevent focusing non-focusable items on `mousedown`.\n            // Even though the item has tabIndex={-1}, that only means take it out of the tab order.\n            if (!focusable) event.preventDefault();\n            // Safari doesn't focus a button when clicked so we run our logic on mousedown also\n            else context.onItemFocus(id);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => context.onItemFocus(id))}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (event.key === 'Tab' && event.shiftKey) {\n              context.onItemShiftTab();\n              return;\n            }\n\n            if (event.target !== event.currentTarget) return;\n\n            const focusIntent = getFocusIntent(event, context.orientation, context.dir);\n\n            if (focusIntent !== undefined) {\n              if (event.metaKey || event.ctrlKey || event.altKey || event.shiftKey) return;\n              event.preventDefault();\n              const items = getItems().filter((item) => item.focusable);\n              let candidateNodes = items.map((item) => item.ref.current!);\n\n              if (focusIntent === 'last') candidateNodes.reverse();\n              else if (focusIntent === 'prev' || focusIntent === 'next') {\n                if (focusIntent === 'prev') candidateNodes.reverse();\n                const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                candidateNodes = context.loop\n                  ? wrapArray(candidateNodes, currentIndex + 1)\n                  : candidateNodes.slice(currentIndex + 1);\n              }\n\n              /**\n               * Imperative focus during keydown is risky so we prevent React's batching updates\n               * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n               */\n              setTimeout(() => focusFirst(candidateNodes));\n            }\n          })}\n        />\n      </Collection.ItemSlot>\n    );\n  }\n);\n\nRovingFocusGroupItem.displayName = ITEM_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\n// prettier-ignore\nconst MAP_KEY_TO_FOCUS_INTENT: Record<string, FocusIntent> = {\n  ArrowLeft: 'prev', ArrowUp: 'prev',\n  ArrowRight: 'next', ArrowDown: 'next',\n  PageUp: 'first', Home: 'first',\n  PageDown: 'last', End: 'last',\n};\n\nfunction getDirectionAwareKey(key: string, dir?: Direction) {\n  if (dir !== 'rtl') return key;\n  return key === 'ArrowLeft' ? 'ArrowRight' : key === 'ArrowRight' ? 'ArrowLeft' : key;\n}\n\ntype FocusIntent = 'first' | 'last' | 'prev' | 'next';\n\nfunction getFocusIntent(event: React.KeyboardEvent, orientation?: Orientation, dir?: Direction) {\n  const key = getDirectionAwareKey(event.key, dir);\n  if (orientation === 'vertical' && ['ArrowLeft', 'ArrowRight'].includes(key)) return undefined;\n  if (orientation === 'horizontal' && ['ArrowUp', 'ArrowDown'].includes(key)) return undefined;\n  return MAP_KEY_TO_FOCUS_INTENT[key];\n}\n\nfunction focusFirst(candidates: HTMLElement[], preventScroll = false) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus({ preventScroll });\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\nconst Root = RovingFocusGroup;\nconst Item = RovingFocusGroupItem;\n\nexport {\n  createRovingFocusGroupScope,\n  //\n  RovingFocusGroup,\n  RovingFocusGroupItem,\n  //\n  Root,\n  Item,\n};\nexport type { RovingFocusGroupProps, RovingFocusItemProps };\n","import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n *  Separator\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Separator';\nconst DEFAULT_ORIENTATION = 'horizontal';\nconst ORIENTATIONS = ['horizontal', 'vertical'] as const;\n\ntype Orientation = (typeof ORIENTATIONS)[number];\ntype SeparatorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface SeparatorProps extends PrimitiveDivProps {\n  /**\n   * Either `vertical` or `horizontal`. Defaults to `horizontal`.\n   */\n  orientation?: Orientation;\n  /**\n   * Whether or not the component is purely decorative. When true, accessibility-related attributes\n   * are updated so that that the rendered element is removed from the accessibility tree.\n   */\n  decorative?: boolean;\n}\n\nconst Separator = React.forwardRef<SeparatorElement, SeparatorProps>((props, forwardedRef) => {\n  const { decorative, orientation: orientationProp = DEFAULT_ORIENTATION, ...domProps } = props;\n  const orientation = isValidOrientation(orientationProp) ? orientationProp : DEFAULT_ORIENTATION;\n  // `aria-orientation` defaults to `horizontal` so we only need it if `orientation` is vertical\n  const ariaOrientation = orientation === 'vertical' ? orientation : undefined;\n  const semanticProps = decorative\n    ? { role: 'none' }\n    : { 'aria-orientation': ariaOrientation, role: 'separator' };\n\n  return (\n    <Primitive.div\n      data-orientation={orientation}\n      {...semanticProps}\n      {...domProps}\n      ref={forwardedRef}\n    />\n  );\n});\n\nSeparator.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction isValidOrientation(orientation: any): orientation is Orientation {\n  return ORIENTATIONS.includes(orientation);\n}\n\nconst Root = Separator;\n\nexport {\n  Separator,\n  //\n  Root,\n};\nexport type { SeparatorProps };\n","import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\nconst Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n\n  if (slottable) {\n    // the new element to render is the one passed as a child of `Slottable`\n    const newElement = slottable.props.children as React.ReactNode;\n\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        // because the new element will be the one rendered, we are only interested\n        // in grabbing its children (`newElement.props.children`)\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement)\n          ? (newElement.props.children as React.ReactNode)\n          : null;\n      } else {\n        return child;\n      }\n    });\n\n    return (\n      <SlotClone {...slotProps} ref={forwardedRef}>\n        {React.isValidElement(newElement)\n          ? React.cloneElement(newElement, undefined, newChildren)\n          : null}\n      </SlotClone>\n    );\n  }\n\n  return (\n    <SlotClone {...slotProps} ref={forwardedRef}>\n      {children}\n    </SlotClone>\n  );\n});\n\nSlot.displayName = 'Slot';\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\nconst SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.isValidElement(children)) {\n    const childrenRef = getElementRef(children);\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      // @ts-ignore\n      ref: forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef,\n    });\n  }\n\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\n\nSlotClone.displayName = 'SlotClone';\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst Slottable = ({ children }: { children: React.ReactNode }) => {\n  return <>{children}</>;\n};\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(child: React.ReactNode): child is React.ReactElement {\n  return React.isValidElement(child) && child.type === Slottable;\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      // if the handler exists on both, we compose them\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args: unknown[]) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      }\n      // but if it exists only on the slot, we use only this one\n      else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\n// Before React 19 accessing `element.props.ref` will throw a warning and suggest using `element.ref`\n// After React 19 accessing `element.ref` does the opposite.\n// https://github.com/facebook/react/pull/28348\n//\n// Access the ref using the method that doesn't yield a warning.\nfunction getElementRef(element: React.ReactElement) {\n  // React <=18 in DEV\n  let getter = Object.getOwnPropertyDescriptor(element.props, 'ref')?.get;\n  let mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element as any).ref;\n  }\n\n  // React 19 in DEV\n  getter = Object.getOwnPropertyDescriptor(element, 'ref')?.get;\n  mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n\n  // Not DEV\n  return element.props.ref || (element as any).ref;\n}\n\nconst Root = Slot;\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Root,\n};\nexport type { SlotProps };\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useId } from '@radix-ui/react-id';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Tabs\n * -----------------------------------------------------------------------------------------------*/\n\nconst TABS_NAME = 'Tabs';\n\ntype ScopedProps<P> = P & { __scopeTabs?: Scope };\nconst [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [\n  createRovingFocusGroupScope,\n]);\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype TabsContextValue = {\n  baseId: string;\n  value?: string;\n  onValueChange: (value: string) => void;\n  orientation?: TabsProps['orientation'];\n  dir?: TabsProps['dir'];\n  activationMode?: TabsProps['activationMode'];\n};\n\nconst [TabsProvider, useTabsContext] = createTabsContext<TabsContextValue>(TABS_NAME);\n\ntype TabsElement = React.ElementRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = React.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface TabsProps extends PrimitiveDivProps {\n  /** The value for the selected tab, if controlled */\n  value?: string;\n  /** The value of the tab to select by default, if uncontrolled */\n  defaultValue?: string;\n  /** A function called when a new tab is selected */\n  onValueChange?: (value: string) => void;\n  /**\n   * The orientation the tabs are layed out.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   * @defaultValue horizontal\n   */\n  orientation?: RovingFocusGroupProps['orientation'];\n  /**\n   * The direction of navigation between toolbar items.\n   */\n  dir?: RovingFocusGroupProps['dir'];\n  /**\n   * Whether a tab is activated automatically or manually.\n   * @defaultValue automatic\n   * */\n  activationMode?: 'automatic' | 'manual';\n}\n\nconst Tabs = React.forwardRef<TabsElement, TabsProps>(\n  (props: ScopedProps<TabsProps>, forwardedRef) => {\n    const {\n      __scopeTabs,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      dir,\n      activationMode = 'automatic',\n      ...tabsProps\n    } = props;\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue,\n    });\n\n    return (\n      <TabsProvider\n        scope={__scopeTabs}\n        baseId={useId()}\n        value={value}\n        onValueChange={setValue}\n        orientation={orientation}\n        dir={direction}\n        activationMode={activationMode}\n      >\n        <Primitive.div\n          dir={direction}\n          data-orientation={orientation}\n          {...tabsProps}\n          ref={forwardedRef}\n        />\n      </TabsProvider>\n    );\n  }\n);\n\nTabs.displayName = TABS_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsList\n * -----------------------------------------------------------------------------------------------*/\n\nconst TAB_LIST_NAME = 'TabsList';\n\ntype TabsListElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsListProps extends PrimitiveDivProps {\n  loop?: RovingFocusGroupProps['loop'];\n}\n\nconst TabsList = React.forwardRef<TabsListElement, TabsListProps>(\n  (props: ScopedProps<TabsListProps>, forwardedRef) => {\n    const { __scopeTabs, loop = true, ...listProps } = props;\n    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    return (\n      <RovingFocusGroup.Root\n        asChild\n        {...rovingFocusGroupScope}\n        orientation={context.orientation}\n        dir={context.dir}\n        loop={loop}\n      >\n        <Primitive.div\n          role=\"tablist\"\n          aria-orientation={context.orientation}\n          {...listProps}\n          ref={forwardedRef}\n        />\n      </RovingFocusGroup.Root>\n    );\n  }\n);\n\nTabsList.displayName = TAB_LIST_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TabsTrigger';\n\ntype TabsTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface TabsTriggerProps extends PrimitiveButtonProps {\n  value: string;\n}\n\nconst TabsTrigger = React.forwardRef<TabsTriggerElement, TabsTriggerProps>(\n  (props: ScopedProps<TabsTriggerProps>, forwardedRef) => {\n    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;\n    const context = useTabsContext(TRIGGER_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return (\n      <RovingFocusGroup.Item\n        asChild\n        {...rovingFocusGroupScope}\n        focusable={!disabled}\n        active={isSelected}\n      >\n        <Primitive.button\n          type=\"button\"\n          role=\"tab\"\n          aria-selected={isSelected}\n          aria-controls={contentId}\n          data-state={isSelected ? 'active' : 'inactive'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          id={triggerId}\n          {...triggerProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              context.onValueChange(value);\n            } else {\n              // prevent focus to avoid accidental activation\n              event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if ([' ', 'Enter'].includes(event.key)) context.onValueChange(value);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => {\n            // handle \"automatic\" activation if necessary\n            // ie. activate tab following focus\n            const isAutomaticActivation = context.activationMode !== 'manual';\n            if (!isSelected && !disabled && isAutomaticActivation) {\n              context.onValueChange(value);\n            }\n          })}\n        />\n      </RovingFocusGroup.Item>\n    );\n  }\n);\n\nTabsTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TabsContent';\n\ntype TabsContentElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsContentProps extends PrimitiveDivProps {\n  value: string;\n\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst TabsContent = React.forwardRef<TabsContentElement, TabsContentProps>(\n  (props: ScopedProps<TabsContentProps>, forwardedRef) => {\n    const { __scopeTabs, value, forceMount, children, ...contentProps } = props;\n    const context = useTabsContext(CONTENT_NAME, __scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    const isMountAnimationPreventedRef = React.useRef(isSelected);\n\n    React.useEffect(() => {\n      const rAF = requestAnimationFrame(() => (isMountAnimationPreventedRef.current = false));\n      return () => cancelAnimationFrame(rAF);\n    }, []);\n\n    return (\n      <Presence present={forceMount || isSelected}>\n        {({ present }) => (\n          <Primitive.div\n            data-state={isSelected ? 'active' : 'inactive'}\n            data-orientation={context.orientation}\n            role=\"tabpanel\"\n            aria-labelledby={triggerId}\n            hidden={!present}\n            id={contentId}\n            tabIndex={0}\n            {...contentProps}\n            ref={forwardedRef}\n            style={{\n              ...props.style,\n              animationDuration: isMountAnimationPreventedRef.current ? '0s' : undefined,\n            }}\n          >\n            {present && children}\n          </Primitive.div>\n        )}\n      </Presence>\n    );\n  }\n);\n\nTabsContent.displayName = CONTENT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`;\n}\n\nconst Root = Tabs;\nconst List = TabsList;\nconst Trigger = TabsTrigger;\nconst Content = TabsContent;\n\nexport {\n  createTabsScope,\n  //\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  //\n  Root,\n  List,\n  Trigger,\n  Content,\n};\nexport type { TabsProps, TabsListProps, TabsTriggerProps, TabsContentProps };\n","import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * VisuallyHidden\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'VisuallyHidden';\n\ntype VisuallyHiddenElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface VisuallyHiddenProps extends PrimitiveSpanProps {}\n\nconst VisuallyHidden = React.forwardRef<VisuallyHiddenElement, VisuallyHiddenProps>(\n  (props, forwardedRef) => {\n    return (\n      <Primitive.span\n        {...props}\n        ref={forwardedRef}\n        style={{\n          // See: https://github.com/twbs/bootstrap/blob/master/scss/mixins/_screen-reader.scss\n          position: 'absolute',\n          border: 0,\n          width: 1,\n          height: 1,\n          padding: 0,\n          margin: -1,\n          overflow: 'hidden',\n          clip: 'rect(0, 0, 0, 0)',\n          whiteSpace: 'nowrap',\n          wordWrap: 'normal',\n          ...props.style,\n        }}\n      />\n    );\n  }\n);\n\nVisuallyHidden.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = VisuallyHidden;\n\nexport {\n  VisuallyHidden,\n  //\n  Root,\n};\nexport type { VisuallyHiddenProps };\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Slottable } from '@radix-ui/react-slot';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport * as VisuallyHiddenPrimitive from '@radix-ui/react-visually-hidden';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype ScopedProps<P = {}> = P & { __scopeTooltip?: Scope };\nconst [createTooltipContext, createTooltipScope] = createContextScope('Tooltip', [\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipProvider\n * -----------------------------------------------------------------------------------------------*/\n\nconst PROVIDER_NAME = 'TooltipProvider';\nconst DEFAULT_DELAY_DURATION = 700;\nconst TOOLTIP_OPEN = 'tooltip.open';\n\ntype TooltipProviderContextValue = {\n  isOpenDelayed: boolean;\n  delayDuration: number;\n  onOpen(): void;\n  onClose(): void;\n  onPointerInTransitChange(inTransit: boolean): void;\n  isPointerInTransitRef: React.MutableRefObject<boolean>;\n  disableHoverableContent: boolean;\n};\n\nconst [TooltipProviderContextProvider, useTooltipProviderContext] =\n  createTooltipContext<TooltipProviderContextValue>(PROVIDER_NAME);\n\ninterface TooltipProviderProps {\n  children: React.ReactNode;\n  /**\n   * The duration from when the pointer enters the trigger until the tooltip gets opened.\n   * @defaultValue 700\n   */\n  delayDuration?: number;\n  /**\n   * How much time a user has to enter another trigger without incurring a delay again.\n   * @defaultValue 300\n   */\n  skipDelayDuration?: number;\n  /**\n   * When `true`, trying to hover the content will result in the tooltip closing as the pointer leaves the trigger.\n   * @defaultValue false\n   */\n  disableHoverableContent?: boolean;\n}\n\nconst TooltipProvider: React.FC<TooltipProviderProps> = (\n  props: ScopedProps<TooltipProviderProps>\n) => {\n  const {\n    __scopeTooltip,\n    delayDuration = DEFAULT_DELAY_DURATION,\n    skipDelayDuration = 300,\n    disableHoverableContent = false,\n    children,\n  } = props;\n  const [isOpenDelayed, setIsOpenDelayed] = React.useState(true);\n  const isPointerInTransitRef = React.useRef(false);\n  const skipDelayTimerRef = React.useRef(0);\n\n  React.useEffect(() => {\n    const skipDelayTimer = skipDelayTimerRef.current;\n    return () => window.clearTimeout(skipDelayTimer);\n  }, []);\n\n  return (\n    <TooltipProviderContextProvider\n      scope={__scopeTooltip}\n      isOpenDelayed={isOpenDelayed}\n      delayDuration={delayDuration}\n      onOpen={React.useCallback(() => {\n        window.clearTimeout(skipDelayTimerRef.current);\n        setIsOpenDelayed(false);\n      }, [])}\n      onClose={React.useCallback(() => {\n        window.clearTimeout(skipDelayTimerRef.current);\n        skipDelayTimerRef.current = window.setTimeout(\n          () => setIsOpenDelayed(true),\n          skipDelayDuration\n        );\n      }, [skipDelayDuration])}\n      isPointerInTransitRef={isPointerInTransitRef}\n      onPointerInTransitChange={React.useCallback((inTransit: boolean) => {\n        isPointerInTransitRef.current = inTransit;\n      }, [])}\n      disableHoverableContent={disableHoverableContent}\n    >\n      {children}\n    </TooltipProviderContextProvider>\n  );\n};\n\nTooltipProvider.displayName = PROVIDER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Tooltip\n * -----------------------------------------------------------------------------------------------*/\n\nconst TOOLTIP_NAME = 'Tooltip';\n\ntype TooltipContextValue = {\n  contentId: string;\n  open: boolean;\n  stateAttribute: 'closed' | 'delayed-open' | 'instant-open';\n  trigger: TooltipTriggerElement | null;\n  onTriggerChange(trigger: TooltipTriggerElement | null): void;\n  onTriggerEnter(): void;\n  onTriggerLeave(): void;\n  onOpen(): void;\n  onClose(): void;\n  disableHoverableContent: boolean;\n};\n\nconst [TooltipContextProvider, useTooltipContext] =\n  createTooltipContext<TooltipContextValue>(TOOLTIP_NAME);\n\ninterface TooltipProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  /**\n   * The duration from when the pointer enters the trigger until the tooltip gets opened. This will\n   * override the prop with the same name passed to Provider.\n   * @defaultValue 700\n   */\n  delayDuration?: number;\n  /**\n   * When `true`, trying to hover the content will result in the tooltip closing as the pointer leaves the trigger.\n   * @defaultValue false\n   */\n  disableHoverableContent?: boolean;\n}\n\nconst Tooltip: React.FC<TooltipProps> = (props: ScopedProps<TooltipProps>) => {\n  const {\n    __scopeTooltip,\n    children,\n    open: openProp,\n    defaultOpen = false,\n    onOpenChange,\n    disableHoverableContent: disableHoverableContentProp,\n    delayDuration: delayDurationProp,\n  } = props;\n  const providerContext = useTooltipProviderContext(TOOLTIP_NAME, props.__scopeTooltip);\n  const popperScope = usePopperScope(__scopeTooltip);\n  const [trigger, setTrigger] = React.useState<HTMLButtonElement | null>(null);\n  const contentId = useId();\n  const openTimerRef = React.useRef(0);\n  const disableHoverableContent =\n    disableHoverableContentProp ?? providerContext.disableHoverableContent;\n  const delayDuration = delayDurationProp ?? providerContext.delayDuration;\n  const wasOpenDelayedRef = React.useRef(false);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: (open) => {\n      if (open) {\n        providerContext.onOpen();\n\n        // as `onChange` is called within a lifecycle method we\n        // avoid dispatching via `dispatchDiscreteCustomEvent`.\n        document.dispatchEvent(new CustomEvent(TOOLTIP_OPEN));\n      } else {\n        providerContext.onClose();\n      }\n      onOpenChange?.(open);\n    },\n  });\n  const stateAttribute = React.useMemo(() => {\n    return open ? (wasOpenDelayedRef.current ? 'delayed-open' : 'instant-open') : 'closed';\n  }, [open]);\n\n  const handleOpen = React.useCallback(() => {\n    window.clearTimeout(openTimerRef.current);\n    wasOpenDelayedRef.current = false;\n    setOpen(true);\n  }, [setOpen]);\n\n  const handleClose = React.useCallback(() => {\n    window.clearTimeout(openTimerRef.current);\n    setOpen(false);\n  }, [setOpen]);\n\n  const handleDelayedOpen = React.useCallback(() => {\n    window.clearTimeout(openTimerRef.current);\n    openTimerRef.current = window.setTimeout(() => {\n      wasOpenDelayedRef.current = true;\n      setOpen(true);\n    }, delayDuration);\n  }, [delayDuration, setOpen]);\n\n  React.useEffect(() => {\n    return () => window.clearTimeout(openTimerRef.current);\n  }, []);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <TooltipContextProvider\n        scope={__scopeTooltip}\n        contentId={contentId}\n        open={open}\n        stateAttribute={stateAttribute}\n        trigger={trigger}\n        onTriggerChange={setTrigger}\n        onTriggerEnter={React.useCallback(() => {\n          if (providerContext.isOpenDelayed) handleDelayedOpen();\n          else handleOpen();\n        }, [providerContext.isOpenDelayed, handleDelayedOpen, handleOpen])}\n        onTriggerLeave={React.useCallback(() => {\n          if (disableHoverableContent) {\n            handleClose();\n          } else {\n            // Clear the timer in case the pointer leaves the trigger before the tooltip is opened.\n            window.clearTimeout(openTimerRef.current);\n          }\n        }, [handleClose, disableHoverableContent])}\n        onOpen={handleOpen}\n        onClose={handleClose}\n        disableHoverableContent={disableHoverableContent}\n      >\n        {children}\n      </TooltipContextProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nTooltip.displayName = TOOLTIP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TooltipTrigger';\n\ntype TooltipTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface TooltipTriggerProps extends PrimitiveButtonProps {}\n\nconst TooltipTrigger = React.forwardRef<TooltipTriggerElement, TooltipTriggerProps>(\n  (props: ScopedProps<TooltipTriggerProps>, forwardedRef) => {\n    const { __scopeTooltip, ...triggerProps } = props;\n    const context = useTooltipContext(TRIGGER_NAME, __scopeTooltip);\n    const providerContext = useTooltipProviderContext(TRIGGER_NAME, __scopeTooltip);\n    const popperScope = usePopperScope(__scopeTooltip);\n    const ref = React.useRef<TooltipTriggerElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref, context.onTriggerChange);\n    const isPointerDownRef = React.useRef(false);\n    const hasPointerMoveOpenedRef = React.useRef(false);\n    const handlePointerUp = React.useCallback(() => (isPointerDownRef.current = false), []);\n\n    React.useEffect(() => {\n      return () => document.removeEventListener('pointerup', handlePointerUp);\n    }, [handlePointerUp]);\n\n    return (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        <Primitive.button\n          // We purposefully avoid adding `type=button` here because tooltip triggers are also\n          // commonly anchors and the anchor `type` attribute signifies MIME type.\n          aria-describedby={context.open ? context.contentId : undefined}\n          data-state={context.stateAttribute}\n          {...triggerProps}\n          ref={composedRefs}\n          onPointerMove={composeEventHandlers(props.onPointerMove, (event) => {\n            if (event.pointerType === 'touch') return;\n            if (\n              !hasPointerMoveOpenedRef.current &&\n              !providerContext.isPointerInTransitRef.current\n            ) {\n              context.onTriggerEnter();\n              hasPointerMoveOpenedRef.current = true;\n            }\n          })}\n          onPointerLeave={composeEventHandlers(props.onPointerLeave, () => {\n            context.onTriggerLeave();\n            hasPointerMoveOpenedRef.current = false;\n          })}\n          onPointerDown={composeEventHandlers(props.onPointerDown, () => {\n            isPointerDownRef.current = true;\n            document.addEventListener('pointerup', handlePointerUp, { once: true });\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => {\n            if (!isPointerDownRef.current) context.onOpen();\n          })}\n          onBlur={composeEventHandlers(props.onBlur, context.onClose)}\n          onClick={composeEventHandlers(props.onClick, context.onClose)}\n        />\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nTooltipTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'TooltipPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createTooltipContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface TooltipPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst TooltipPortal: React.FC<TooltipPortalProps> = (props: ScopedProps<TooltipPortalProps>) => {\n  const { __scopeTooltip, forceMount, children, container } = props;\n  const context = useTooltipContext(PORTAL_NAME, __scopeTooltip);\n  return (\n    <PortalProvider scope={__scopeTooltip} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nTooltipPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TooltipContent';\n\ntype TooltipContentElement = TooltipContentImplElement;\ninterface TooltipContentProps extends TooltipContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst TooltipContent = React.forwardRef<TooltipContentElement, TooltipContentProps>(\n  (props: ScopedProps<TooltipContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeTooltip);\n    const { forceMount = portalContext.forceMount, side = 'top', ...contentProps } = props;\n    const context = useTooltipContext(CONTENT_NAME, props.__scopeTooltip);\n\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.disableHoverableContent ? (\n          <TooltipContentImpl side={side} {...contentProps} ref={forwardedRef} />\n        ) : (\n          <TooltipContentHoverable side={side} {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\ntype Point = { x: number; y: number };\ntype Polygon = Point[];\n\ntype TooltipContentHoverableElement = TooltipContentImplElement;\ninterface TooltipContentHoverableProps extends TooltipContentImplProps {}\n\nconst TooltipContentHoverable = React.forwardRef<\n  TooltipContentHoverableElement,\n  TooltipContentHoverableProps\n>((props: ScopedProps<TooltipContentHoverableProps>, forwardedRef) => {\n  const context = useTooltipContext(CONTENT_NAME, props.__scopeTooltip);\n  const providerContext = useTooltipProviderContext(CONTENT_NAME, props.__scopeTooltip);\n  const ref = React.useRef<TooltipContentHoverableElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const [pointerGraceArea, setPointerGraceArea] = React.useState<Polygon | null>(null);\n\n  const { trigger, onClose } = context;\n  const content = ref.current;\n\n  const { onPointerInTransitChange } = providerContext;\n\n  const handleRemoveGraceArea = React.useCallback(() => {\n    setPointerGraceArea(null);\n    onPointerInTransitChange(false);\n  }, [onPointerInTransitChange]);\n\n  const handleCreateGraceArea = React.useCallback(\n    (event: PointerEvent, hoverTarget: HTMLElement) => {\n      const currentTarget = event.currentTarget as HTMLElement;\n      const exitPoint = { x: event.clientX, y: event.clientY };\n      const exitSide = getExitSideFromRect(exitPoint, currentTarget.getBoundingClientRect());\n      const paddedExitPoints = getPaddedExitPoints(exitPoint, exitSide);\n      const hoverTargetPoints = getPointsFromRect(hoverTarget.getBoundingClientRect());\n      const graceArea = getHull([...paddedExitPoints, ...hoverTargetPoints]);\n      setPointerGraceArea(graceArea);\n      onPointerInTransitChange(true);\n    },\n    [onPointerInTransitChange]\n  );\n\n  React.useEffect(() => {\n    return () => handleRemoveGraceArea();\n  }, [handleRemoveGraceArea]);\n\n  React.useEffect(() => {\n    if (trigger && content) {\n      const handleTriggerLeave = (event: PointerEvent) => handleCreateGraceArea(event, content);\n      const handleContentLeave = (event: PointerEvent) => handleCreateGraceArea(event, trigger);\n\n      trigger.addEventListener('pointerleave', handleTriggerLeave);\n      content.addEventListener('pointerleave', handleContentLeave);\n      return () => {\n        trigger.removeEventListener('pointerleave', handleTriggerLeave);\n        content.removeEventListener('pointerleave', handleContentLeave);\n      };\n    }\n  }, [trigger, content, handleCreateGraceArea, handleRemoveGraceArea]);\n\n  React.useEffect(() => {\n    if (pointerGraceArea) {\n      const handleTrackPointerGrace = (event: PointerEvent) => {\n        const target = event.target as HTMLElement;\n        const pointerPosition = { x: event.clientX, y: event.clientY };\n        const hasEnteredTarget = trigger?.contains(target) || content?.contains(target);\n        const isPointerOutsideGraceArea = !isPointInPolygon(pointerPosition, pointerGraceArea);\n\n        if (hasEnteredTarget) {\n          handleRemoveGraceArea();\n        } else if (isPointerOutsideGraceArea) {\n          handleRemoveGraceArea();\n          onClose();\n        }\n      };\n      document.addEventListener('pointermove', handleTrackPointerGrace);\n      return () => document.removeEventListener('pointermove', handleTrackPointerGrace);\n    }\n  }, [trigger, content, pointerGraceArea, onClose, handleRemoveGraceArea]);\n\n  return <TooltipContentImpl {...props} ref={composedRefs} />;\n});\n\nconst [VisuallyHiddenContentContextProvider, useVisuallyHiddenContentContext] =\n  createTooltipContext(TOOLTIP_NAME, { isInside: false });\n\ntype TooltipContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype PopperContentProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface TooltipContentImplProps extends Omit<PopperContentProps, 'onPlaced'> {\n  /**\n   * A more descriptive label for accessibility purpose\n   */\n  'aria-label'?: string;\n\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `Tooltip`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n}\n\nconst TooltipContentImpl = React.forwardRef<TooltipContentImplElement, TooltipContentImplProps>(\n  (props: ScopedProps<TooltipContentImplProps>, forwardedRef) => {\n    const {\n      __scopeTooltip,\n      children,\n      'aria-label': ariaLabel,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      ...contentProps\n    } = props;\n    const context = useTooltipContext(CONTENT_NAME, __scopeTooltip);\n    const popperScope = usePopperScope(__scopeTooltip);\n    const { onClose } = context;\n\n    // Close this tooltip if another one opens\n    React.useEffect(() => {\n      document.addEventListener(TOOLTIP_OPEN, onClose);\n      return () => document.removeEventListener(TOOLTIP_OPEN, onClose);\n    }, [onClose]);\n\n    // Close the tooltip if the trigger is scrolled\n    React.useEffect(() => {\n      if (context.trigger) {\n        const handleScroll = (event: Event) => {\n          const target = event.target as HTMLElement;\n          if (target?.contains(context.trigger)) onClose();\n        };\n        window.addEventListener('scroll', handleScroll, { capture: true });\n        return () => window.removeEventListener('scroll', handleScroll, { capture: true });\n      }\n    }, [context.trigger, onClose]);\n\n    return (\n      <DismissableLayer\n        asChild\n        disableOutsidePointerEvents={false}\n        onEscapeKeyDown={onEscapeKeyDown}\n        onPointerDownOutside={onPointerDownOutside}\n        onFocusOutside={(event) => event.preventDefault()}\n        onDismiss={onClose}\n      >\n        <PopperPrimitive.Content\n          data-state={context.stateAttribute}\n          {...popperScope}\n          {...contentProps}\n          ref={forwardedRef}\n          style={{\n            ...contentProps.style,\n            // re-namespace exposed content custom properties\n            ...{\n              '--radix-tooltip-content-transform-origin': 'var(--radix-popper-transform-origin)',\n              '--radix-tooltip-content-available-width': 'var(--radix-popper-available-width)',\n              '--radix-tooltip-content-available-height': 'var(--radix-popper-available-height)',\n              '--radix-tooltip-trigger-width': 'var(--radix-popper-anchor-width)',\n              '--radix-tooltip-trigger-height': 'var(--radix-popper-anchor-height)',\n            },\n          }}\n        >\n          <Slottable>{children}</Slottable>\n          <VisuallyHiddenContentContextProvider scope={__scopeTooltip} isInside={true}>\n            <VisuallyHiddenPrimitive.Root id={context.contentId} role=\"tooltip\">\n              {ariaLabel || children}\n            </VisuallyHiddenPrimitive.Root>\n          </VisuallyHiddenContentContextProvider>\n        </PopperPrimitive.Content>\n      </DismissableLayer>\n    );\n  }\n);\n\nTooltipContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'TooltipArrow';\n\ntype TooltipArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface TooltipArrowProps extends PopperArrowProps {}\n\nconst TooltipArrow = React.forwardRef<TooltipArrowElement, TooltipArrowProps>(\n  (props: ScopedProps<TooltipArrowProps>, forwardedRef) => {\n    const { __scopeTooltip, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeTooltip);\n    const visuallyHiddenContentContext = useVisuallyHiddenContentContext(\n      ARROW_NAME,\n      __scopeTooltip\n    );\n    // if the arrow is inside the `VisuallyHidden`, we don't want to render it all to\n    // prevent issues in positioning the arrow due to the duplicate\n    return visuallyHiddenContentContext.isInside ? null : (\n      <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />\n    );\n  }\n);\n\nTooltipArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype Side = NonNullable<TooltipContentProps['side']>;\n\nfunction getExitSideFromRect(point: Point, rect: DOMRect): Side {\n  const top = Math.abs(rect.top - point.y);\n  const bottom = Math.abs(rect.bottom - point.y);\n  const right = Math.abs(rect.right - point.x);\n  const left = Math.abs(rect.left - point.x);\n\n  switch (Math.min(top, bottom, right, left)) {\n    case left:\n      return 'left';\n    case right:\n      return 'right';\n    case top:\n      return 'top';\n    case bottom:\n      return 'bottom';\n    default:\n      throw new Error('unreachable');\n  }\n}\n\nfunction getPaddedExitPoints(exitPoint: Point, exitSide: Side, padding = 5) {\n  const paddedExitPoints: Point[] = [];\n  switch (exitSide) {\n    case 'top':\n      paddedExitPoints.push(\n        { x: exitPoint.x - padding, y: exitPoint.y + padding },\n        { x: exitPoint.x + padding, y: exitPoint.y + padding }\n      );\n      break;\n    case 'bottom':\n      paddedExitPoints.push(\n        { x: exitPoint.x - padding, y: exitPoint.y - padding },\n        { x: exitPoint.x + padding, y: exitPoint.y - padding }\n      );\n      break;\n    case 'left':\n      paddedExitPoints.push(\n        { x: exitPoint.x + padding, y: exitPoint.y - padding },\n        { x: exitPoint.x + padding, y: exitPoint.y + padding }\n      );\n      break;\n    case 'right':\n      paddedExitPoints.push(\n        { x: exitPoint.x - padding, y: exitPoint.y - padding },\n        { x: exitPoint.x - padding, y: exitPoint.y + padding }\n      );\n      break;\n  }\n  return paddedExitPoints;\n}\n\nfunction getPointsFromRect(rect: DOMRect) {\n  const { top, right, bottom, left } = rect;\n  return [\n    { x: left, y: top },\n    { x: right, y: top },\n    { x: right, y: bottom },\n    { x: left, y: bottom },\n  ];\n}\n\n// Determine if a point is inside of a polygon.\n// Based on https://github.com/substack/point-in-polygon\nfunction isPointInPolygon(point: Point, polygon: Polygon) {\n  const { x, y } = point;\n  let inside = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y;\n\n    // prettier-ignore\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) inside = !inside;\n  }\n\n  return inside;\n}\n\n// Returns a new array of points representing the convex hull of the given set of points.\n// https://www.nayuki.io/page/convex-hull-algorithm\nfunction getHull<P extends Point>(points: Readonly<Array<P>>): Array<P> {\n  const newPoints: Array<P> = points.slice();\n  newPoints.sort((a: Point, b: Point) => {\n    if (a.x < b.x) return -1;\n    else if (a.x > b.x) return +1;\n    else if (a.y < b.y) return -1;\n    else if (a.y > b.y) return +1;\n    else return 0;\n  });\n  return getHullPresorted(newPoints);\n}\n\n// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\nfunction getHullPresorted<P extends Point>(points: Readonly<Array<P>>): Array<P> {\n  if (points.length <= 1) return points.slice();\n\n  const upperHull: Array<P> = [];\n  for (let i = 0; i < points.length; i++) {\n    const p = points[i];\n    while (upperHull.length >= 2) {\n      const q = upperHull[upperHull.length - 1];\n      const r = upperHull[upperHull.length - 2];\n      if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x)) upperHull.pop();\n      else break;\n    }\n    upperHull.push(p);\n  }\n  upperHull.pop();\n\n  const lowerHull: Array<P> = [];\n  for (let i = points.length - 1; i >= 0; i--) {\n    const p = points[i];\n    while (lowerHull.length >= 2) {\n      const q = lowerHull[lowerHull.length - 1];\n      const r = lowerHull[lowerHull.length - 2];\n      if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x)) lowerHull.pop();\n      else break;\n    }\n    lowerHull.push(p);\n  }\n  lowerHull.pop();\n\n  if (\n    upperHull.length === 1 &&\n    lowerHull.length === 1 &&\n    upperHull[0].x === lowerHull[0].x &&\n    upperHull[0].y === lowerHull[0].y\n  ) {\n    return upperHull;\n  } else {\n    return upperHull.concat(lowerHull);\n  }\n}\n\nconst Provider = TooltipProvider;\nconst Root = Tooltip;\nconst Trigger = TooltipTrigger;\nconst Portal = TooltipPortal;\nconst Content = TooltipContent;\nconst Arrow = TooltipArrow;\n\nexport {\n  createTooltipScope,\n  //\n  TooltipProvider,\n  Tooltip,\n  TooltipTrigger,\n  TooltipPortal,\n  TooltipContent,\n  TooltipArrow,\n  //\n  Provider,\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Arrow,\n};\nexport type {\n  TooltipProviderProps,\n  TooltipProps,\n  TooltipTriggerProps,\n  TooltipPortalProps,\n  TooltipContentProps,\n  TooltipArrowProps,\n};\n","import * as React from 'react';\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nexport { useCallbackRef };\n","import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\ntype UseControllableStateParams<T> = {\n  prop?: T | undefined;\n  defaultProp?: T | undefined;\n  onChange?: (state: T) => void;\n};\n\ntype SetStateFn<T> = (prevState?: T) => T;\n\nfunction useControllableState<T>({\n  prop,\n  defaultProp,\n  onChange = () => {},\n}: UseControllableStateParams<T>) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\n  const isControlled = prop !== undefined;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = useCallbackRef(onChange);\n\n  const setValue: React.Dispatch<React.SetStateAction<T | undefined>> = React.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const setter = nextValue as SetStateFn<T>;\n        const value = typeof nextValue === 'function' ? setter(prop) : nextValue;\n        if (value !== prop) handleChange(value as T);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, handleChange]\n  );\n\n  return [value, setValue] as const;\n}\n\nfunction useUncontrolledState<T>({\n  defaultProp,\n  onChange,\n}: Omit<UseControllableStateParams<T>, 'prop'>) {\n  const uncontrolledState = React.useState<T | undefined>(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = React.useRef(value);\n  const handleChange = useCallbackRef(onChange);\n\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value as T);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n\n  return uncontrolledState;\n}\n\nexport { useControllableState };\n","import * as React from 'react';\n\n/**\n * On the server, React emits a warning when calling `useLayoutEffect`.\n * This is because neither `useLayoutEffect` nor `useEffect` run on the server.\n * We use this safe version which suppresses the warning by replacing it with a noop on the server.\n *\n * See: https://reactjs.org/docs/hooks-reference.html#uselayouteffect\n */\nconst useLayoutEffect = Boolean(globalThis?.document) ? React.useLayoutEffect : () => {};\n\nexport { useLayoutEffect };\n"],"names":["composeEventHandlers","originalEventHandler","ourEventHandler","checkForDefaultPrevented","arguments","length","undefined","event","defaultPrevented","AVATAR_NAME","createAvatarContext","createAvatarScope","createContextScope","AvatarProvider","useAvatarContext","Avatar","React","props","forwardedRef","__scopeAvatar","avatarProps","imageLoadingStatus","setImageLoadingStatus","jsx","scope","onImageLoadingStatusChange","children","Primitive","span","ref","displayName","IMAGE_NAME","AvatarImage","src","onLoadingStatusChange","imageProps","context","referrerPolicy","loadingStatus","setLoadingStatus","useLayoutEffect","isMounted","image","window","Image","updateStatus","status","onload","onerror","useImageLoadingStatus","handleLoadingStatusChange","useCallbackRef","img","FALLBACK_NAME","AvatarFallback","delayMs","fallbackProps","canRender","setCanRender","timerId","setTimeout","clearTimeout","Root","Fallback","composeContextScopes","_len","scopes","Array","_key","baseScope","createScope","scopeHooks","map","createScope2","useScope","scopeName","overrideScopes","nextScopes","reduce","nextScopes2","_ref","createCollection","name","PROVIDER_NAME","createCollectionContext","createCollectionScope","createContextScopeDeps","defaultContexts","scopeContexts","defaultContext","contexts","rootComponentName","BaseContext","index","Provider","Context","value","Object","values","consumerName","Error","CollectionProviderImpl","useCollectionContext","collectionRef","current","itemMap","Map","CollectionProvider","COLLECTION_SLOT_NAME","CollectionSlot","composedRefs","useComposedRefs","Slot","ITEM_SLOT_NAME","ITEM_DATA_ATTR","CollectionItemSlot","itemData","set","delete","ItemSlot","collectionNode","orderedNodes","from","querySelectorAll","sort","a","b","indexOf","composeRefs","refs","node","forEach","setRef","_len2","_key2","createContext2","DIALOG_NAME","createDialogContext","createDialogScope","DialogProvider","useDialogContext","Dialog","__scopeDialog","open","openProp","defaultOpen","onOpenChange","modal","triggerRef","contentRef","setOpen","useControllableState","prop","defaultProp","onChange","contentId","useId","titleId","descriptionId","onOpenToggle","prevOpen","TRIGGER_NAME","DialogTrigger","triggerProps","composedTriggerRef","button","type","getState","onClick","PORTAL_NAME","PortalProvider","usePortalContext","forceMount","DialogPortal","container","child","Presence","present","PortalPrimitive","asChild","OVERLAY_NAME","DialogOverlay","portalContext","overlayProps","DialogOverlayImpl","RemoveScroll","as","allowPinchZoom","shards","div","style","pointerEvents","CONTENT_NAME","DialogContent","contentProps","DialogContentModal","DialogContentNonModal","content","hideOthers","DialogContentImpl","trapFocus","disableOutsidePointerEvents","onCloseAutoFocus","preventDefault","focus","onPointerDownOutside","originalEvent","detail","ctrlLeftClick","ctrlKey","onFocusOutside","hasInteractedOutsideRef","hasPointerDownOutsideRef","onInteractOutside","target","targetIsTrigger","contains","onOpenAutoFocus","useFocusGuards","jsxs","Fragment","FocusScope","loop","trapped","onMountAutoFocus","onUnmountAutoFocus","DismissableLayer","role","id","onDismiss","TitleWarning","DescriptionWarning","TITLE_NAME","DialogTitle","titleProps","h2","DESCRIPTION_NAME","DialogDescription","descriptionProps","p","CLOSE_NAME","DialogClose","closeProps","TITLE_WARNING_NAME","WarningProvider","useWarningContext","createContext","contentName","titleName","docsSlug","titleWarningContext","MESSAGE","document","getElementById","console","error","_ref2","describedById","getAttribute","warn","Trigger","Portal","Overlay","Content","Title","Description","Close","DirectionContext","useDirection","localDir","globalDir","originalBodyPointerEvents","CONTEXT_UPDATE","POINTER_DOWN_OUTSIDE","FOCUS_OUTSIDE","DismissableLayerContext","layers","Set","layersWithOutsidePointerEventsDisabled","branches","onEscapeKeyDown","layerProps","setNode","ownerDocument","globalThis","force","node2","highestLayerWithOutsidePointerEventsDisabled","slice","highestLayerWithOutsidePointerEventsDisabledIndex","isBodyPointerEventsDisabled","size","isPointerEventsEnabled","pointerDownOutside","handlePointerDownOutside","isPointerInsideReactTreeRef","handleClickRef","handlePointerDown","handleAndDispatchPointerDownOutsideEvent2","handleAndDispatchCustomEvent","eventDetail","discrete","pointerType","removeEventListener","addEventListener","once","onPointerDownCapture","usePointerDownOutside","isPointerDownOnBranch","some","branch","focusOutside","handleFocusOutside","isFocusInsideReactTreeRef","handleFocus","onFocusCapture","onBlurCapture","useFocusOutside","onEscapeKeyDownProp","handleKeyDown","key","capture","useEscapeKeydown","body","add","dispatchUpdate","handleUpdate","DismissableLayerBranch","CustomEvent","dispatchEvent","handler","bubbles","cancelable","dispatchDiscreteCustomEvent","SELECTION_KEYS","LAST_KEYS","FIRST_LAST_KEYS","SUB_OPEN_KEYS","ltr","rtl","SUB_CLOSE_KEYS","MENU_NAME","Collection","useCollection","createMenuContext","createMenuScope","createPopperScope","createRovingFocusGroupScope","usePopperScope","useRovingFocusGroupScope","MenuProvider","useMenuContext","MenuRootProvider","useMenuRootContext","Menu","__scopeMenu","dir","popperScope","setContent","isUsingKeyboardRef","handleOpenChange","direction","handlePointer","PopperPrimitive","onContentChange","onClose","MenuAnchor","anchorProps","MenuPortal","MenuContentProvider","useMenuContentContext","MenuContent","rootContext","MenuRootContentModal","MenuRootContentNonModal","MenuContentImpl","disableOutsideScroll","onEntryFocus","rovingFocusGroupScope","getItems","currentItemId","setCurrentItemId","timerRef","searchRef","pointerGraceTimerRef","pointerGraceIntentRef","pointerDirRef","lastPointerXRef","ScrollLockWrapper","scrollLockWrapperProps","handleTypeaheadSearch","search","items","filter","item","disabled","currentItem","activeElement","currentMatch","find","textValue","nextMatch","isRepeated","every","char","normalizedSearch","currentMatchIndex","wrappedValues","array","startIndex","Math","max","_","v","toLowerCase","startsWith","getNextMatch","newItem","updateSearch","isPointerMovingToSubmenu","side","area","cursorPos","x","clientX","y","clientY","point","polygon","inside","i","j","xi","yi","xj","yj","isPointInPolygon","isPointerInGraceArea","onItemEnter","onItemLeave","onTriggerLeave","onPointerGraceIntentChange","intent","preventScroll","RovingFocusGroup","orientation","currentTabStopId","onCurrentTabStopIdChange","preventScrollOnEntryFocus","getOpenState","outline","onKeyDown","isKeyDownInside","closest","currentTarget","isModifierKey","altKey","metaKey","isCharacterKey","includes","candidateNodes","reverse","candidates","PREVIOUSLY_FOCUSED_ELEMENT","candidate","focusFirst","onBlur","onPointerMove","whenMouse","pointerXHasChanged","newDir","MenuGroup","groupProps","MenuLabel","labelProps","ITEM_NAME","ITEM_SELECT","MenuItem","onSelect","itemProps","contentContext","isPointerDownRef","MenuItemImpl","handleSelect","menuItem","itemSelectEvent","onPointerDown","onPointerUp","click","isTypingAhead","isFocused","setIsFocused","textContent","setTextContent","trim","focusable","onPointerLeave","onFocus","MenuCheckboxItem","checked","onCheckedChange","checkboxItemProps","ItemIndicatorProvider","isIndeterminate","getCheckedState","RADIO_GROUP_NAME","RadioGroupProvider","useRadioGroupContext","onValueChange","MenuRadioGroup","handleValueChange","RADIO_ITEM_NAME","MenuRadioItem","radioItemProps","ITEM_INDICATOR_NAME","useItemIndicatorContext","MenuItemIndicator","itemIndicatorProps","indicatorContext","MenuSeparator","separatorProps","MenuArrow","arrowProps","SUB_NAME","MenuSubProvider","useMenuSubContext","MenuSub","parentMenuContext","trigger","setTrigger","triggerId","onTriggerChange","SUB_TRIGGER_NAME","MenuSubTrigger","subContext","openTimerRef","clearOpenTimer","pointerGraceTimer","contentRect","getBoundingClientRect","dataset","rightSide","bleed","contentNearEdge","contentFarEdge","top","bottom","SUB_CONTENT_NAME","MenuSubContent","subContentProps","align","isCloseKey","Root3","Anchor2","Content2","Group","Label","Item2","CheckboxItem","RadioGroup","RadioItem","ItemIndicator","Separator","Arrow2","Sub","SubTrigger","SubContent","DROPDOWN_MENU_NAME","createDropdownMenuContext","createDropdownMenuScope","useMenuScope","DropdownMenuProvider","useDropdownMenuContext","DropdownMenu","__scopeDropdownMenu","menuScope","MenuPrimitive","DropdownMenuTrigger","DropdownMenuPortal","portalProps","DropdownMenuContent","isRightClick","DropdownMenuGroup","DropdownMenuLabel","DropdownMenuItem","DropdownMenuCheckboxItem","DropdownMenuRadioGroup","radioGroupProps","DropdownMenuRadioItem","DropdownMenuItemIndicator","DropdownMenuSeparator","DropdownMenuArrow","DropdownMenuSubTrigger","subTriggerProps","DropdownMenuSubContent","Root2","Portal2","Group2","Label2","CheckboxItem2","RadioGroup2","RadioItem2","ItemIndicator2","Separator2","Sub2","SubTrigger2","SubContent2","count","edgeGuards","insertAdjacentElement","createFocusGuard","remove","element","createElement","setAttribute","tabIndex","opacity","position","AUTOFOCUS_ON_MOUNT","AUTOFOCUS_ON_UNMOUNT","EVENT_OPTIONS","onMountAutoFocusProp","onUnmountAutoFocusProp","scopeProps","setContainer","lastFocusedElementRef","focusScope","paused","pause","this","resume","handleFocusIn2","select","handleFocusOut2","relatedTarget","handleMutations2","mutations","mutation","removedNodes","mutationObserver","MutationObserver","observe","childList","subtree","disconnect","focusScopesStack","previouslyFocusedElement","mountEvent","getTabbableCandidates","tagName","unmountEvent","isTabKey","focusedElement","container2","first","last","findVisible","getTabbableEdges","shiftKey","nodes","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","isHiddenInput","hidden","FILTER_SKIP","FILTER_ACCEPT","nextNode","push","currentNode","elements","isHidden","upTo","getComputedStyle","visibility","display","parentElement","HTMLInputElement","isSelectableInput","stack","activeFocusScope","arrayRemove","unshift","createFocusScopesStack","updatedArray","splice","useReactId","toString","deterministicId","setId","reactId","String","label","onMouseDown","POPOVER_NAME","createPopoverContext","createPopoverScope","PopoverProvider","usePopoverContext","Popover","__scopePopover","hasCustomAnchor","setHasCustomAnchor","onCustomAnchorAdd","onCustomAnchorRemove","ANCHOR_NAME","PopoverAnchor","PopoverTrigger","PopoverPortal","PopoverContent","PopoverContentModal","PopoverContentNonModal","isRightClickOutsideRef","PopoverContentImpl","PopoverClose","PopoverArrow","Arrow","width","height","svg","viewBox","preserveAspectRatio","points","POPPER_NAME","createPopperContext","PopperProvider","usePopperContext","Popper","__scopePopper","anchor","setAnchor","onAnchorChange","PopperAnchor","virtualRef","PopperContentProvider","useContentContext","PopperContent","sideOffset","alignOffset","arrowPadding","avoidCollisions","collisionBoundary","collisionPadding","collisionPaddingProp","sticky","hideWhenDetached","updatePositionStrategy","onPlaced","arrow","setArrow","arrowSize","setSize","offsetWidth","offsetHeight","resizeObserver","ResizeObserver","entries","isArray","entry","borderSizeEntry","borderSize","box","unobserve","useSize","arrowWidth","arrowHeight","desiredPlacement","right","left","boundary","hasExplicitBoundaries","detectOverflowOptions","padding","isNotNull","altBoundary","floatingStyles","placement","isPositioned","middlewareData","useFloating","strategy","whileElementsMounted","args","autoUpdate","animationFrame","reference","middleware","offset","mainAxis","alignmentAxis","shift","crossAxis","limiter","limitShift","flip","apply","rects","availableWidth","availableHeight","anchorWidth","anchorHeight","contentStyle","floating","setProperty","floatingUIarrow","transformOrigin","hide","placedSide","placedAlign","getSideAndAlignFromPlacement","handlePlaced","arrowX","arrowY","cannotCenterArrow","centerOffset","contentZIndex","setContentZIndex","zIndex","setFloating","transform","minWidth","join","referenceHidden","onArrowChange","shouldHideArrow","animation","ARROW_NAME","OPPOSITE_SIDE","PopperArrow","baseSide","ArrowPrimitive","options","fn","data","isArrowHidden","noArrowAlign","start","center","end","arrowXCenter","arrowYCenter","split","Anchor","containerProp","mounted","setMounted","ReactDOM","presence","React2","stylesRef","prevPresentRef","prevAnimationNameRef","initialState","state","send","machine","useStateMachine","UNMOUNT","ANIMATION_OUT","unmountSuspended","MOUNT","ANIMATION_END","unmounted","currentAnimationName","getAnimationName","styles","wasPresent","prevAnimationName","timeoutId","ownerWindow","defaultView","handleAnimationEnd","isCurrentAnimation","animationName","currentFillMode","animationFillMode","handleAnimationStart","isPresent","usePresence","only","getter","getOwnPropertyDescriptor","get","mayWarn","isReactWarning","getElementRef","primitive","Node","primitiveProps","Comp","Symbol","for","ENTRY_FOCUS","GROUP_NAME","createRovingFocusGroupContext","RovingFocusProvider","useRovingFocusContext","__scopeRovingFocusGroup","RovingFocusGroupImpl","currentTabStopIdProp","defaultCurrentTabStopId","setCurrentTabStopId","isTabbingBackOut","setIsTabbingBackOut","handleEntryFocus","isClickFocusRef","focusableItemsCount","setFocusableItemsCount","onItemFocus","tabStopId","onItemShiftTab","onFocusableItemAdd","prevCount","onFocusableItemRemove","isKeyboardFocus","entryFocusEvent","active","Boolean","RovingFocusGroupItem","autoId","isCurrentTabStop","focusIntent","getDirectionAwareKey","MAP_KEY_TO_FOCUS_INTENT","getFocusIntent","currentIndex","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","PageUp","Home","PageDown","End","Item","DEFAULT_ORIENTATION","ORIENTATIONS","decorative","orientationProp","domProps","isValidOrientation","semanticProps","slotProps","childrenArray","toArray","slottable","isSlottable","newElement","newChildren","SlotClone","childrenRef","mergeProps","Slottable","childProps","overrideProps","propName","slotPropValue","childPropValue","test","TABS_NAME","createTabsContext","createTabsScope","TabsProvider","useTabsContext","Tabs","__scopeTabs","valueProp","defaultValue","activationMode","tabsProps","setValue","baseId","TAB_LIST_NAME","TabsList","listProps","TabsTrigger","makeTriggerId","makeContentId","isSelected","isAutomaticActivation","TabsContent","isMountAnimationPreventedRef","rAF","requestAnimationFrame","cancelAnimationFrame","animationDuration","List","VisuallyHidden","border","margin","overflow","clip","whiteSpace","wordWrap","createTooltipContext","createTooltipScope","DEFAULT_DELAY_DURATION","TOOLTIP_OPEN","TooltipProviderContextProvider","useTooltipProviderContext","TooltipProvider","__scopeTooltip","delayDuration","skipDelayDuration","disableHoverableContent","isOpenDelayed","setIsOpenDelayed","isPointerInTransitRef","skipDelayTimerRef","skipDelayTimer","onOpen","onPointerInTransitChange","inTransit","TOOLTIP_NAME","TooltipContextProvider","useTooltipContext","Tooltip","disableHoverableContentProp","delayDurationProp","providerContext","wasOpenDelayedRef","open2","stateAttribute","handleOpen","handleClose","handleDelayedOpen","onTriggerEnter","TooltipTrigger","hasPointerMoveOpenedRef","handlePointerUp","TooltipPortal","TooltipContent","TooltipContentImpl","TooltipContentHoverable","pointerGraceArea","setPointerGraceArea","handleRemoveGraceArea","handleCreateGraceArea","hoverTarget","exitPoint","paddedExitPoints","exitSide","getPaddedExitPoints","rect","abs","min","getExitSideFromRect","graceArea","newPoints","upperHull","q","r","pop","lowerHull","concat","getHullPresorted","getHull","getPointsFromRect","handleTriggerLeave","handleContentLeave","handleTrackPointerGrace","pointerPosition","hasEnteredTarget","isPointerOutsideGraceArea","VisuallyHiddenContentContextProvider","useVisuallyHiddenContentContext","isInside","ariaLabel","handleScroll","VisuallyHiddenPrimitive","TooltipArrow","callback","callbackRef","uncontrolledProp","setUncontrolledProp","uncontrolledState","prevValueRef","handleChange","useUncontrolledState","isControlled","nextValue","value2","useLayoutEffect2"],"sourceRoot":""}